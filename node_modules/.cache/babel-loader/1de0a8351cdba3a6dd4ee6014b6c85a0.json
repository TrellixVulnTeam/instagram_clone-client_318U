{"ast":null,"code":"import { NEW_TYPES } from \"../types/newTypes\";\nconst initialState = {\n  loading: false,\n  data: [],\n  sound: false\n};\n\nconst newsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NEW_TYPES.GET_NOTIFIES:\n      return { ...state,\n        data: action.payload\n      };\n\n    case NEW_TYPES.CREATE_NOTIFY:\n      return { ...state,\n        data: [action.payload, ...state.data]\n      };\n\n    case NEW_TYPES.REMOVE_NOTIFY:\n      return { ...state,\n        data: state.data.filter(item => item.id !== action.payload.id || item.url !== action.payload.url)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default newsReducer;","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/redux/reducers/newsReducer.js"],"names":["NEW_TYPES","initialState","loading","data","sound","newsReducer","state","action","type","GET_NOTIFIES","payload","CREATE_NOTIFY","REMOVE_NOTIFY","filter","item","id","url"],"mappings":"AAAA,SAASA,SAAT,QAA0B,mBAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAS,CAACS,YAAf;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACG;AAAzB,OAAP;;AACF,SAAKV,SAAS,CAACW,aAAf;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,IAAI,EAAE,CAACI,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACH,IAA1B;AAFD,OAAP;;AAIF,SAAKH,SAAS,CAACY,aAAf;AACE,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWU,MAAX,CACHC,IAAD,IACEA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,OAAP,CAAeK,EAA3B,IAAiCD,IAAI,CAACE,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeM,GAF3D;AAFD,OAAP;;AAOF;AACE,aAAOV,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,WAAf","sourcesContent":["import { NEW_TYPES } from \"../types/newTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  data: [],\r\n  sound: false,\r\n};\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case NEW_TYPES.GET_NOTIFIES:\r\n      return { ...state, data: action.payload };\r\n    case NEW_TYPES.CREATE_NOTIFY:\r\n      return {\r\n        ...state,\r\n        data: [action.payload, ...state.data],\r\n      };\r\n    case NEW_TYPES.REMOVE_NOTIFY:\r\n      return {\r\n        ...state,\r\n        data: state.data.filter(\r\n          (item) =>\r\n            item.id !== action.payload.id || item.url !== action.payload.url\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default newsReducer;\r\n"]},"metadata":{},"sourceType":"module"}