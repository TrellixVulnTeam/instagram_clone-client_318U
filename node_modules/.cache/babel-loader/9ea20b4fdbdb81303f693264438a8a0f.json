{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\components\\\\Comments\\\\CommentCard\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { updateCommentAction, likeCommentAction, unLikeCommentAction } from \"../../../redux/actions/commentActions\";\nimport LikeButton from \"../../LikeButton\";\nimport CommentMenu from \"../CommentMenu\";\nimport \"./index.scss\";\nimport InputComment from \"../InputComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentCard = ({\n  children,\n  comment,\n  post,\n  commentId\n}) => {\n  _s();\n\n  const {\n    auth\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [content, setContent] = useState(\"\");\n  const [readMore, setReadMore] = useState(false);\n  const [isLike, setIsLike] = useState(false);\n  const [onEdit, setOnEdit] = useState(false);\n  const [loadLike, setLoadLike] = useState(false);\n  const [onReply, setOnReply] = useState(false);\n  useEffect(() => {\n    setContent(comment.content);\n\n    if (comment.likes.find(like => like._id === auth.user._id)) {\n      setIsLike(true);\n    }\n  }, [comment.content, auth.user._id, comment.likes]);\n\n  const handleLike = async () => {\n    if (loadLike) return;\n    setIsLike(true);\n    setLoadLike(true);\n    await dispatch(likeCommentAction({\n      comment,\n      post,\n      auth\n    }));\n    setLoadLike(false);\n  };\n\n  const handleUnLike = async () => {\n    if (loadLike) return;\n    setIsLike(false);\n    setLoadLike(true);\n    await dispatch(unLikeCommentAction({\n      comment,\n      post,\n      auth\n    }));\n    setLoadLike(false);\n  };\n\n  const handleUpdate = () => {\n    if (comment.content !== content) {\n      dispatch(updateCommentAction({\n        comment,\n        post,\n        content,\n        auth\n      }));\n      setOnEdit(false);\n    } else {\n      setOnEdit(false);\n    }\n  };\n\n  const handleReply = () => {\n    if (onReply) return setOnReply(false);\n    setOnReply({ ...comment,\n      commentId\n    });\n  };\n\n  const styleCard = {\n    opacity: comment._id ? 1 : 0.5,\n    pointerEvents: comment._id ? \"inherit\" : \"none\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-card\",\n    style: styleCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-card-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-card-heading\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"comment-card-author\",\n            to: `/profile/${comment.user._id}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: comment.user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: moment(comment.createdAt).fromNow()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-card-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-card-text\",\n              children: onEdit ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n                cols: \"5\",\n                value: content,\n                onChange: e => setContent(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [comment.tag && comment.tag._id === comment.user._id && /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/profile/${comment.tag._id}`,\n                  children: [\"@\", comment.tag.username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: content.length < 100 ? content : readMore ? content + \" \" : content.slice(0, 30) + \"....\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), content.length > 100 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"comment-card-readMore\",\n                  onClick: () => setReadMore(!readMore),\n                  children: readMore ? \"Hide content\" : \"Read More\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this), \" \"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-card-actions\",\n              children: onEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"bold\",\n                  onClick: handleUpdate,\n                  children: \"update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"bold\",\n                  onClick: e => setOnEdit(false),\n                  children: \"cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"bold\",\n                onClick: handleReply,\n                children: onReply ? \"cancel\" : \"reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), onReply && /*#__PURE__*/_jsxDEV(InputComment, {\n            post: post,\n            onReply: onReply,\n            setOnReply: setOnReply,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${onReply.user._id}`,\n              className: \"comment-card-reply\",\n              children: [\"@\", onReply.user.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-card-likes\",\n        style: {\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CommentMenu, {\n          post: post,\n          comment: comment,\n          auth: auth,\n          setOnEdit: setOnEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n          isLike: isLike,\n          handleLike: handleLike,\n          handleUnLike: handleUnLike,\n          details: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentCard, \"p0qSWig2X9S6/vmh6bt95XC9APU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CommentCard;\nexport default CommentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/components/Comments/CommentCard/index.js"],"names":["moment","React","useEffect","useState","useDispatch","useSelector","Link","updateCommentAction","likeCommentAction","unLikeCommentAction","LikeButton","CommentMenu","InputComment","CommentCard","children","comment","post","commentId","auth","state","dispatch","content","setContent","readMore","setReadMore","isLike","setIsLike","onEdit","setOnEdit","loadLike","setLoadLike","onReply","setOnReply","likes","find","like","_id","user","handleLike","handleUnLike","handleUpdate","handleReply","styleCard","opacity","pointerEvents","username","createdAt","fromNow","e","target","value","tag","length","slice","cursor"],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  updateCommentAction,\r\n  likeCommentAction,\r\n  unLikeCommentAction,\r\n} from \"../../../redux/actions/commentActions\";\r\nimport LikeButton from \"../../LikeButton\";\r\nimport CommentMenu from \"../CommentMenu\";\r\nimport \"./index.scss\";\r\nimport InputComment from \"../InputComment\";\r\n\r\nconst CommentCard = ({ children, comment, post, commentId }) => {\r\n  const { auth } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [content, setContent] = useState(\"\");\r\n  const [readMore, setReadMore] = useState(false);\r\n  const [isLike, setIsLike] = useState(false);\r\n  const [onEdit, setOnEdit] = useState(false);\r\n  const [loadLike, setLoadLike] = useState(false);\r\n  const [onReply, setOnReply] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setContent(comment.content);\r\n    if (comment.likes.find((like) => like._id === auth.user._id)) {\r\n      setIsLike(true);\r\n    }\r\n  }, [comment.content, auth.user._id, comment.likes]);\r\n\r\n  const handleLike = async () => {\r\n    if (loadLike) return;\r\n    setIsLike(true);\r\n\r\n    setLoadLike(true);\r\n    await dispatch(likeCommentAction({ comment, post, auth }));\r\n    setLoadLike(false);\r\n  };\r\n\r\n  const handleUnLike = async () => {\r\n    if (loadLike) return;\r\n    setIsLike(false);\r\n\r\n    setLoadLike(true);\r\n    await dispatch(unLikeCommentAction({ comment, post, auth }));\r\n    setLoadLike(false);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    if (comment.content !== content) {\r\n      dispatch(updateCommentAction({ comment, post, content, auth }));\r\n      setOnEdit(false);\r\n    } else {\r\n      setOnEdit(false);\r\n    }\r\n  };\r\n\r\n  const handleReply = () => {\r\n    if (onReply) return setOnReply(false);\r\n    setOnReply({ ...comment, commentId });\r\n  };\r\n\r\n  const styleCard = {\r\n    opacity: comment._id ? 1 : 0.5,\r\n    pointerEvents: comment._id ? \"inherit\" : \"none\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-card\" style={styleCard}>\r\n      <div className=\"comment-card-container\">\r\n        <div className=\"comment-card-left\">\r\n          <div className=\"comment-card-heading\">\r\n            <Link\r\n              className=\"comment-card-author\"\r\n              to={`/profile/${comment.user._id}`}\r\n            >\r\n              <span>{comment.user.username}</span>\r\n            </Link>\r\n            <small>{moment(comment.createdAt).fromNow()}</small>\r\n          </div>\r\n\r\n          <div className=\"comment-card-details\">\r\n            <div className=\"comment-card-content\">\r\n              <div className=\"comment-card-text\">\r\n                {onEdit ? (\r\n                  <textarea\r\n                    cols=\"5\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                  ></textarea>\r\n                ) : (\r\n                  <>\r\n                    {comment.tag && comment.tag._id === comment.user._id && (\r\n                      <Link to={`/profile/${comment.tag._id}`}>\r\n                        @{comment.tag.username}\r\n                      </Link>\r\n                    )}\r\n                    <span>\r\n                      {content.length < 100\r\n                        ? content\r\n                        : readMore\r\n                        ? content + \" \"\r\n                        : content.slice(0, 30) + \"....\"}\r\n                    </span>\r\n                    {content.length > 100 && (\r\n                      <span\r\n                        className=\"comment-card-readMore\"\r\n                        onClick={() => setReadMore(!readMore)}\r\n                      >\r\n                        {readMore ? \"Hide content\" : \"Read More\"}\r\n                      </span>\r\n                    )}{\" \"}\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"comment-card-actions\">\r\n                {onEdit ? (\r\n                  <>\r\n                    <small className=\"bold\" onClick={handleUpdate}>\r\n                      update\r\n                    </small>\r\n                    <small className=\"bold\" onClick={(e) => setOnEdit(false)}>\r\n                      cancel\r\n                    </small>\r\n                  </>\r\n                ) : (\r\n                  <small className=\"bold\" onClick={handleReply}>\r\n                    {onReply ? \"cancel\" : \"reply\"}\r\n                  </small>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {onReply && (\r\n              <InputComment\r\n                post={post}\r\n                onReply={onReply}\r\n                setOnReply={setOnReply}\r\n              >\r\n                <Link\r\n                  to={`/profile/${onReply.user._id}`}\r\n                  className=\"comment-card-reply\"\r\n                >\r\n                  @{onReply.user.username}:\r\n                </Link>\r\n              </InputComment>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"comment-card-likes\" style={{ cursor: \"pointer\" }}>\r\n          <CommentMenu\r\n            post={post}\r\n            comment={comment}\r\n            auth={auth}\r\n            setOnEdit={setOnEdit}\r\n          />\r\n          <LikeButton\r\n            isLike={isLike}\r\n            handleLike={handleLike}\r\n            handleUnLike={handleUnLike}\r\n            details={true}\r\n          />\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentCard;\r\n"]},"metadata":{},"sourceType":"module"}