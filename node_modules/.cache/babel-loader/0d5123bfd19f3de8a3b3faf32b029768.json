{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\pages\\\\ProfilePage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Infos from \"../../layouts/Infos\";\nimport LoadingIcon from \"../../assets/images/loading.gif\";\nimport \"./index.scss\";\nimport PostProfiles from \"../../layouts/PostProfiles\";\nimport { getProfileUsers } from \"../../redux/actions/profileActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfilePage = () => {\n  _s();\n\n  const {\n    profile,\n    auth\n  } = useSelector(state => state);\n  const [savedTab, setSavedTab] = useState(false);\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (profile.ids.every(item => item !== id)) {\n      dispatch(getProfileUsers({\n        id,\n        auth\n      }));\n    }\n  }, [id, auth, dispatch, profile.ids]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(Infos, {\n        auth: auth,\n        profile: profile,\n        dispatch: dispatch,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), auth.user._id === id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: savedTab ? \"profile-actions-posts profile-actions-active\" : \"profile-actions-posts\",\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: savedTab ? \"profile-actions-saved profile-actions-active\" : \"profile-actions-saved\",\n          children: \"Saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), profile.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-loading\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: LoadingIcon,\n          alt: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(PostProfiles, {\n        auth: auth,\n        profile: profile,\n        dispatch: dispatch,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfilePage, \"d+rL3mS1GgFwmRr1PxO/RdXwcOI=\", false, function () {\n  return [useSelector, useParams, useDispatch];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/pages/ProfilePage/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","Infos","LoadingIcon","PostProfiles","getProfileUsers","ProfilePage","profile","auth","state","savedTab","setSavedTab","id","dispatch","ids","every","item","user","_id","loading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAO,cAAP;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,eAAT,QAAgC,oCAAhC;;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBR,WAAW,CAAES,KAAD,IAAWA,KAAZ,CAArC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAASX,SAAS,EAAxB;AACA,QAAMY,QAAQ,GAAGd,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,OAAO,CAACO,GAAR,CAAYC,KAAZ,CAAmBC,IAAD,IAAUA,IAAI,KAAKJ,EAArC,CAAJ,EAA8C;AAC5CC,MAAAA,QAAQ,CAACR,eAAe,CAAC;AAAEO,QAAAA,EAAF;AAAMJ,QAAAA;AAAN,OAAD,CAAhB,CAAR;AACD;AACF,GAJQ,EAIN,CAACI,EAAD,EAAKJ,IAAL,EAAWK,QAAX,EAAqBN,OAAO,CAACO,GAA7B,CAJM,CAAT;AAMA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEN,IAAb;AAAmB,QAAA,OAAO,EAAED,OAA5B;AAAqC,QAAA,QAAQ,EAAEM,QAA/C;AAAyD,QAAA,EAAE,EAAED;AAA7D;AAAA;AAAA;AAAA;AAAA,cADF,EAGGJ,IAAI,CAACS,IAAL,CAAUC,GAAV,KAAkBN,EAAlB,iBACC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EACPF,QAAQ,GACJ,8CADI,GAEJ,uBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AACE,UAAA,SAAS,EACPA,QAAQ,GACJ,8CADI,GAEJ,uBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EA0BGH,OAAO,CAACY,OAAR,gBACC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEhB,WAAV;AAAuB,UAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,gBAKC,QAAC,YAAD;AACE,QAAA,IAAI,EAAEK,IADR;AAEE,QAAA,OAAO,EAAED,OAFX;AAGE,QAAA,QAAQ,EAAEM,QAHZ;AAIE,QAAA,EAAE,EAAED;AAJN;AAAA;AAAA;AAAA;AAAA,cA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2CD,CAvDD;;GAAMN,W;UACsBN,W,EAEXC,S,EACEF,W;;;KAJbO,W;AAyDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Infos from \"../../layouts/Infos\";\r\nimport LoadingIcon from \"../../assets/images/loading.gif\";\r\nimport \"./index.scss\";\r\nimport PostProfiles from \"../../layouts/PostProfiles\";\r\nimport { getProfileUsers } from \"../../redux/actions/profileActions\";\r\nconst ProfilePage = () => {\r\n  const { profile, auth } = useSelector((state) => state);\r\n  const [savedTab, setSavedTab] = useState(false);\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (profile.ids.every((item) => item !== id)) {\r\n      dispatch(getProfileUsers({ id, auth }));\r\n    }\r\n  }, [id, auth, dispatch, profile.ids]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profile-container\">\r\n        <Infos auth={auth} profile={profile} dispatch={dispatch} id={id} />\r\n\r\n        {auth.user._id === id && (\r\n          <div className=\"profile-actions\">\r\n            <button\r\n              className={\r\n                savedTab\r\n                  ? \"profile-actions-posts profile-actions-active\"\r\n                  : \"profile-actions-posts\"\r\n              }\r\n            >\r\n              Posts\r\n            </button>\r\n            <button\r\n              className={\r\n                savedTab\r\n                  ? \"profile-actions-saved profile-actions-active\"\r\n                  : \"profile-actions-saved\"\r\n              }\r\n            >\r\n              Saved\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {profile.loading ? (\r\n          <div className=\"profile-loading\">\r\n            <img src={LoadingIcon} alt=\"Loading\" />\r\n          </div>\r\n        ) : (\r\n          <PostProfiles\r\n            auth={auth}\r\n            profile={profile}\r\n            dispatch={dispatch}\r\n            id={id}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"]},"metadata":{},"sourceType":"module"}