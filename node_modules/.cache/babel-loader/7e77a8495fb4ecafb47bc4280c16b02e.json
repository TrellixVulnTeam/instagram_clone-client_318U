{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\components\\\\PostCards\\\\CardFooter\\\\CardComments\\\\Comments\\\\CommentCard\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport \"./index.scss\";\nimport LikeButton from \"../../../../../LikeButton\";\nimport CommentMenu from \"../CommentMenu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateCommentAction } from \"../../../../../../redux/actions/commentActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentCard = ({\n  comment,\n  post\n}) => {\n  _s();\n\n  const {\n    auth\n  } = useSelector(state => state);\n  const [content, setContent] = useState(\"\");\n  const [readMore, setReadMore] = useState(false);\n  const [isLike, setIsLike] = useState(false);\n  const [onEdit, setOnEdit] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setContent(comment.content);\n  }, [comment.content]);\n\n  const handleLike = () => {};\n\n  const handleUnlike = () => {};\n\n  const handleUpdate = () => {\n    if (comment.content !== content) {\n      dispatch(updateCommentAction({\n        comment,\n        post,\n        content,\n        auth\n      }));\n      setOnEdit(false);\n    } else {\n      setOnEdit(false);\n    }\n  };\n\n  const styleCard = {\n    opacity: comment._id ? 1 : 0.5,\n    pointerEvents: comment._id ? \"inherit\" : \"none\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-card\",\n    style: styleCard,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-card-left\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"comment-card-author\",\n          to: `/profile/${comment.user._id}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: comment.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-card-details\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-card-text\",\n              children: onEdit ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n                cols: \"5\",\n                value: content,\n                onChange: e => setContent(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: content.length < 100 ? content : readMore ? content + \" \" : content.slice(0, 30) + \"....\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this), content.length > 100 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"comment-card-readMore\",\n                  onClick: () => setReadMore(!readMore),\n                  children: readMore ? \"Hide content\" : \"Read More\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this), \" \"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-card-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                children: moment(comment.createdAt).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), onEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"bold\",\n                  onClick: handleUpdate,\n                  children: \"update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"bold\",\n                  onClick: e => setOnEdit(false),\n                  children: \"cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"bold\",\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-card-likes\",\n        style: {\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CommentMenu, {\n          post: post,\n          comment: comment,\n          auth: auth,\n          setOnEdit: setOnEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n          isLike: isLike,\n          handleLike: handleLike,\n          handleUnlike: handleUnlike,\n          details: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentCard, \"TPvhSRgrh8d1UxrYYKFpFY5zszQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CommentCard;\nexport default CommentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/components/PostCards/CardFooter/CardComments/Comments/CommentCard/index.js"],"names":["React","useEffect","useState","Link","moment","LikeButton","CommentMenu","useDispatch","useSelector","updateCommentAction","CommentCard","comment","post","auth","state","content","setContent","readMore","setReadMore","isLike","setIsLike","onEdit","setOnEdit","dispatch","handleLike","handleUnlike","handleUpdate","styleCard","opacity","_id","pointerEvents","user","username","e","target","value","length","slice","createdAt","fromNow","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport \"./index.scss\";\r\nimport LikeButton from \"../../../../../LikeButton\";\r\nimport CommentMenu from \"../CommentMenu\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCommentAction } from \"../../../../../../redux/actions/commentActions\";\r\nconst CommentCard = ({ comment, post }) => {\r\n  const { auth } = useSelector((state) => state);\r\n  const [content, setContent] = useState(\"\");\r\n  const [readMore, setReadMore] = useState(false);\r\n\r\n  const [isLike, setIsLike] = useState(false);\r\n  const [onEdit, setOnEdit] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setContent(comment.content);\r\n  }, [comment.content]);\r\n\r\n  const handleLike = () => {};\r\n\r\n  const handleUnlike = () => {};\r\n\r\n  const handleUpdate = () => {\r\n    if (comment.content !== content) {\r\n      dispatch(updateCommentAction({ comment, post, content, auth }));\r\n      setOnEdit(false);\r\n    } else {\r\n      setOnEdit(false);\r\n    }\r\n  };\r\n\r\n  const styleCard = {\r\n    opacity: comment._id ? 1 : 0.5,\r\n    pointerEvents: comment._id ? \"inherit\" : \"none\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-card\" style={styleCard}>\r\n      <div className=\"comment-card-container\">\r\n        <div className=\"comment-card-left\">\r\n          <Link\r\n            className=\"comment-card-author\"\r\n            to={`/profile/${comment.user._id}`}\r\n          >\r\n            <span>{comment.user.username}</span>\r\n          </Link>\r\n          <div className=\"comment-card-details\">\r\n            <div className=\"comment-card-content\">\r\n              <div className=\"comment-card-text\">\r\n                {onEdit ? (\r\n                  <textarea\r\n                    cols=\"5\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                  ></textarea>\r\n                ) : (\r\n                  <>\r\n                    {\" \"}\r\n                    <span>\r\n                      {content.length < 100\r\n                        ? content\r\n                        : readMore\r\n                        ? content + \" \"\r\n                        : content.slice(0, 30) + \"....\"}\r\n                    </span>\r\n                    {content.length > 100 && (\r\n                      <span\r\n                        className=\"comment-card-readMore\"\r\n                        onClick={() => setReadMore(!readMore)}\r\n                      >\r\n                        {readMore ? \"Hide content\" : \"Read More\"}\r\n                      </span>\r\n                    )}{\" \"}\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"comment-card-actions\">\r\n                <small>{moment(comment.createdAt).fromNow()}</small>\r\n                {onEdit ? (\r\n                  <>\r\n                    <small className=\"bold\" onClick={handleUpdate}>\r\n                      update\r\n                    </small>\r\n                    <small className=\"bold\" onClick={(e) => setOnEdit(false)}>\r\n                      cancel\r\n                    </small>\r\n                  </>\r\n                ) : (\r\n                  <small className=\"bold\">Reply</small>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"comment-card-likes\" style={{ cursor: \"pointer\" }}>\r\n          <CommentMenu\r\n            post={post}\r\n            comment={comment}\r\n            auth={auth}\r\n            setOnEdit={setOnEdit}\r\n          />\r\n          <LikeButton\r\n            isLike={isLike}\r\n            handleLike={handleLike}\r\n            handleUnlike={handleUnlike}\r\n            details={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentCard;\r\n"]},"metadata":{},"sourceType":"module"}