{"ast":null,"code":"import { MESSAGE_TYPES } from \"../types/messageTypes\";\nconst initialState = {\n  users: [],\n  resultUsers: 0,\n  data: [],\n  resultData: 0,\n  firstLoad: false\n};\n\nconst messageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MESSAGE_TYPES.ADD_USER:\n      return { ...state,\n        users: [action.payload, ...state.users]\n      };\n\n    case MESSAGE_TYPES.ADD_MESSAGE:\n      return { ...state,\n        data: [...state.data, action.payload],\n        users: state.users.map(user => user._id === action.payload.recipient || user._id === action.payload.sender)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/redux/reducers/messageReducer.js"],"names":["MESSAGE_TYPES","initialState","users","resultUsers","data","resultData","firstLoad","messageReducer","state","action","type","ADD_USER","payload","ADD_MESSAGE","map","user","_id","recipient","sender"],"mappings":"AAAA,SAASA,aAAT,QAA8B,uBAA9B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,UAAU,EAAE,CAJO;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAArB;;AAQA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,aAAa,CAACW,QAAnB;AACE,aAAO,EACL,GAAGH,KADE;AAELN,QAAAA,KAAK,EAAE,CAACO,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACN,KAA1B;AAFF,OAAP;;AAIF,SAAKF,aAAa,CAACa,WAAnB;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACG,OAAvB,CAFD;AAGLV,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYY,GAAZ,CACJC,IAAD,IACEA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAAP,CAAeK,SAA5B,IACAF,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAAP,CAAeM,MAHzB;AAHF,OAAP;;AASF;AACE,aAAOV,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,cAAf","sourcesContent":["import { MESSAGE_TYPES } from \"../types/messageTypes\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  resultUsers: 0,\r\n  data: [],\r\n  resultData: 0,\r\n  firstLoad: false,\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MESSAGE_TYPES.ADD_USER:\r\n      return {\r\n        ...state,\r\n        users: [action.payload, ...state.users],\r\n      };\r\n    case MESSAGE_TYPES.ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload],\r\n        users: state.users.map(\r\n          (user) =>\r\n            user._id === action.payload.recipient ||\r\n            user._id === action.payload.sender\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messageReducer;\r\n"]},"metadata":{},"sourceType":"module"}