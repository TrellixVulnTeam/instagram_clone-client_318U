{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\layouts\\\\Posts\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoadMoreBtn from \"../../components/LoadMoreBtn\";\nimport CardBody from \"../../components/PostCards/CardBody\";\nimport CardFooter from \"../../components/PostCards/CardFooter\";\nimport CardHeader from \"../../components/PostCards/CardHeader\";\nimport LoadingIcon from \"../../assets/images/loading.gif\";\nimport \"./index.scss\";\nimport { getDataAPI } from \"../../utils/fetchData\";\nimport { POST_TYPES } from \"../../redux/types/postTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const {\n    homePosts,\n    auth\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(false);\n  const pageEnd = useRef();\n\n  const handleLoadMore = async () => {\n    setLoad(true);\n    const res = await getDataAPI(`posts?limit=${homePosts.page * 9}`, auth.token);\n    dispatch({\n      type: POST_TYPES.GET_POSTS,\n      payload: { ...res.data,\n        page: homePosts.page + 1\n      }\n    });\n    setLoad(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [homePosts.posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts-content\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          post: post,\n          handleCheck: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          post: post,\n          handleCheck: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)), load && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"discover-page-loading\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: LoadingIcon,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"posts-loadMore\",\n        ref: pageEnd,\n        children: \"LoadMore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"discover-page-btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Posts, \"9EfLPHmgtkHXmZdMCVf1/qMwiqM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/layouts/Posts/index.js"],"names":["React","useRef","useState","useDispatch","useSelector","LoadMoreBtn","CardBody","CardFooter","CardHeader","LoadingIcon","getDataAPI","POST_TYPES","Posts","homePosts","auth","state","dispatch","load","setLoad","pageEnd","handleLoadMore","res","page","token","type","GET_POSTS","payload","data","posts","map","post","index","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAO,cAAP;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,UAAT,QAA2B,6BAA3B;;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBV,WAAW,CAAEW,KAAD,IAAWA,KAAZ,CAAvC;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMiB,OAAO,GAAGlB,MAAM,EAAtB;;AAEA,QAAMmB,cAAc,GAAG,YAAY;AACjCF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,UAAMG,GAAG,GAAG,MAAMX,UAAU,CACzB,eAAcG,SAAS,CAACS,IAAV,GAAiB,CAAE,EADR,EAE1BR,IAAI,CAACS,KAFqB,CAA5B;AAIAP,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb,UAAU,CAACc,SADV;AAEPC,MAAAA,OAAO,EAAE,EAAE,GAAGL,GAAG,CAACM,IAAT;AAAeL,QAAAA,IAAI,EAAET,SAAS,CAACS,IAAV,GAAiB;AAAtC;AAFF,KAAD,CAAR;AAIAJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAXD;;AAaA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,iBACGL,SAAS,CAACe,KAAV,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,kBACnB;AAAoB,QAAA,SAAS,EAAC,eAA9B;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAED,IAAlB;AAAwB,UAAA,WAAW,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEA,IAAlB;AAAwB,UAAA,WAAW,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAUA,IAAI,CAACE,GAAf;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EASGf,IAAI,iBACH;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAER,WAAV;AAAuB,UAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVJ,eAcE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,GAAG,EAAEU,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAiBE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA8BD,CAlDD;;GAAMP,K;UACwBR,W,EACXD,W;;;KAFbS,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LoadMoreBtn from \"../../components/LoadMoreBtn\";\r\nimport CardBody from \"../../components/PostCards/CardBody\";\r\nimport CardFooter from \"../../components/PostCards/CardFooter\";\r\nimport CardHeader from \"../../components/PostCards/CardHeader\";\r\nimport LoadingIcon from \"../../assets/images/loading.gif\";\r\nimport \"./index.scss\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { POST_TYPES } from \"../../redux/types/postTypes\";\r\nconst Posts = () => {\r\n  const { homePosts, auth } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [load, setLoad] = useState(false);\r\n\r\n  const pageEnd = useRef();\r\n\r\n  const handleLoadMore = async () => {\r\n    setLoad(true);\r\n    const res = await getDataAPI(\r\n      `posts?limit=${homePosts.page * 9}`,\r\n      auth.token\r\n    );\r\n    dispatch({\r\n      type: POST_TYPES.GET_POSTS,\r\n      payload: { ...res.data, page: homePosts.page + 1 },\r\n    });\r\n    setLoad(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"posts-container\">\r\n        {homePosts.posts.map((post, index) => (\r\n          <div key={post._id} className=\"posts-content\">\r\n            <CardHeader post={post} handleCheck={true} />\r\n            <CardBody post={post} />\r\n            <CardFooter post={post} handleCheck={true} />\r\n          </div>\r\n        ))}\r\n\r\n        {load && (\r\n          <div className=\"discover-page-loading\">\r\n            <img src={LoadingIcon} alt=\"Logo\" />\r\n          </div>\r\n        )}\r\n        <button className=\"posts-loadMore\" ref={pageEnd}>\r\n          LoadMore\r\n        </button>\r\n        <div className=\"discover-page-btn\">\r\n          {/* <LoadMoreBtn\r\n            result={homePosts.result}\r\n            page={homePosts.page}\r\n            load={load}\r\n            handleLoadMore={handleLoadMore}\r\n          /> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}