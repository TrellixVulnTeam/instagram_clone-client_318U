{"ast":null,"code":"import _objectSpread from\"C:/Benkia/MERN/instagram-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Benkia/MERN/instagram-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Benkia/MERN/instagram-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Benkia/MERN/instagram-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{useHistory,useParams}from\"react-router\";import{addUserAction,getConversations}from\"../../redux/actions/messageActions\";import{MESSAGE_TYPES}from\"../../redux/types/messageTypes\";import{NOTIFY_TYPES}from\"../../redux/types/notifyTypes\";import{getDataAPI}from\"../../utils/fetchData\";import UserCard from\"../UserCard\";import\"./index.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var LeftSide=function LeftSide(){var _useSelector=useSelector(function(state){return state;}),auth=_useSelector.auth,message=_useSelector.message,online=_useSelector.online;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchValue=_useState2[0],setSearchValue=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),searchUsers=_useState4[0],setSearchUsers=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),load=_useState6[0],setLoad=_useState6[1];var dispatch=useDispatch();var history=useHistory();var _useParams=useParams(),id=_useParams.id;var pageEnd=useRef();var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),page=_useState8[0],setPage=_useState8[1];var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(searchValue){_context.next=3;break;}return _context.abrupt(\"return\");case 3:_context.prev=3;setLoad(true);_context.next=7;return getDataAPI(\"search?username=\".concat(searchValue),auth.token);case 7:res=_context.sent;setSearchUsers(res.data.users);setLoad(false);_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](3);dispatch({type:NOTIFY_TYPES.NOTIFY,payload:{error:_context.t0.response.data.msg}});case 15:case\"end\":return _context.stop();}}},_callee,null,[[3,12]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();var handleAddUser=function handleAddUser(user){setSearchValue(\"\");setSearchUsers([]);dispatch({type:MESSAGE_TYPES.ADD_USER,payload:_objectSpread(_objectSpread({},user),{},{text:\"\",media:[]})});dispatch({type:MESSAGE_TYPES.CHECK_ONLINE_OFFLINE,payload:online});return history.push(\"/message/\".concat(user._id));};var isActive=function isActive(user){if(id===user._id)return\"active\";return\"\";};useEffect(function(){if(message.firstLoad)return;dispatch(getConversations({auth:auth}));},[dispatch,auth,message.firstLoad]);//Load more\nuseEffect(function(){var observer=new IntersectionObserver(function(entries){if(entries[0].isIntersecting){setPage(function(p){return p+1;});}},{threshold:0.1});observer.observe(pageEnd.current);},[setPage]);useEffect(function(){if(message.resultUsers>=(page-1)*9&&page>1){dispatch(getConversations({auth:auth,page:page}));}},[message.resultUsers,auth,dispatch,page]);//Check user online - offline\nuseEffect(function(){if(message.firstLoad){dispatch({type:MESSAGE_TYPES.CHECK_ONLINE_OFFLINE,payload:online});}},[dispatch,online,message.firstLoad]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsxs(\"form\",{action:\"#\",className:\"message-search\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"message-search-input\",value:searchValue,onChange:function onChange(e){return setSearchValue(e.target.value);},placeholder:\"Enter to search....\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"message-search-btn\",children:\"Search\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-list\",children:searchUsers.length!==0?/*#__PURE__*/_jsx(_Fragment,{children:searchUsers.map(function(user){return/*#__PURE__*/_jsx(\"div\",{className:\"message-list-user \".concat(isActive(user)),onClick:function onClick(){return handleAddUser(user);},children:/*#__PURE__*/_jsx(UserCard,{user:user})},user._id);})}):/*#__PURE__*/_jsx(_Fragment,{children:message.users.map(function(user){return/*#__PURE__*/_jsx(\"div\",{className:\"message-list-user \".concat(isActive(user)),onClick:function onClick(){return handleAddUser(user);},children:/*#__PURE__*/_jsx(UserCard,{user:user,msg:true,children:user.online?/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-circle message-list-icon message-list-green\"}):auth.user.following.find(function(item){return item._id===user._id;})&&/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-circle message-list-icon\"})})},user._id);})})}),/*#__PURE__*/_jsx(\"button\",{className:\"message-leftside-btn\",ref:pageEnd,children:\"Load More\"})]})});};export default LeftSide;","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/components/LeftSide/index.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","useHistory","useParams","addUserAction","getConversations","MESSAGE_TYPES","NOTIFY_TYPES","getDataAPI","UserCard","LeftSide","state","auth","message","online","searchValue","setSearchValue","searchUsers","setSearchUsers","load","setLoad","dispatch","history","id","pageEnd","page","setPage","handleSubmit","e","preventDefault","token","res","data","users","type","NOTIFY","payload","error","response","msg","handleAddUser","user","ADD_USER","text","media","CHECK_ONLINE_OFFLINE","push","_id","isActive","firstLoad","observer","IntersectionObserver","entries","isIntersecting","p","threshold","observe","current","resultUsers","target","value","length","map","following","find","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport {\r\n  addUserAction,\r\n  getConversations,\r\n} from \"../../redux/actions/messageActions\";\r\nimport { MESSAGE_TYPES } from \"../../redux/types/messageTypes\";\r\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport UserCard from \"../UserCard\";\r\nimport \"./index.scss\";\r\nconst LeftSide = () => {\r\n  const { auth, message, online } = useSelector((state) => state);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchUsers, setSearchUsers] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const pageEnd = useRef();\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!searchValue) return;\r\n    try {\r\n      setLoad(true);\r\n      const res = await getDataAPI(\r\n        `search?username=${searchValue}`,\r\n        auth.token\r\n      );\r\n      setSearchUsers(res.data.users);\r\n      setLoad(false);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddUser = (user) => {\r\n    setSearchValue(\"\");\r\n    setSearchUsers([]);\r\n    dispatch({\r\n      type: MESSAGE_TYPES.ADD_USER,\r\n      payload: { ...user, text: \"\", media: [] },\r\n    });\r\n    dispatch({\r\n      type: MESSAGE_TYPES.CHECK_ONLINE_OFFLINE,\r\n      payload: online,\r\n    });\r\n    return history.push(`/message/${user._id}`);\r\n  };\r\n\r\n  const isActive = (user) => {\r\n    if (id === user._id) return \"active\";\r\n    return \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (message.firstLoad) return;\r\n    dispatch(getConversations({ auth }));\r\n  }, [dispatch, auth, message.firstLoad]);\r\n\r\n  //Load more\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage((p) => p + 1);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n\r\n    observer.observe(pageEnd.current);\r\n  }, [setPage]);\r\n\r\n  useEffect(() => {\r\n    if (message.resultUsers >= (page - 1) * 9 && page > 1) {\r\n      dispatch(getConversations({ auth, page }));\r\n    }\r\n  }, [message.resultUsers, auth, dispatch, page]);\r\n\r\n  //Check user online - offline\r\n\r\n  useEffect(() => {\r\n    if (message.firstLoad) {\r\n      dispatch({\r\n        type: MESSAGE_TYPES.CHECK_ONLINE_OFFLINE,\r\n        payload: online,\r\n      });\r\n    }\r\n  }, [dispatch, online, message.firstLoad]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"message-header\">\r\n        <form action=\"#\" className=\"message-search\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"message-search-input\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n            placeholder=\"Enter to search....\"\r\n          />\r\n          <button type=\"submit\" className=\"message-search-btn\">\r\n            Search\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"message-list\">\r\n          {searchUsers.length !== 0 ? (\r\n            <>\r\n              {searchUsers.map((user) => (\r\n                <div\r\n                  className={`message-list-user ${isActive(user)}`}\r\n                  key={user._id}\r\n                  onClick={() => handleAddUser(user)}\r\n                >\r\n                  <UserCard user={user} />\r\n                </div>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {message.users.map((user) => (\r\n                <div\r\n                  className={`message-list-user ${isActive(user)}`}\r\n                  key={user._id}\r\n                  onClick={() => handleAddUser(user)}\r\n                >\r\n                  <UserCard user={user} msg={true}>\r\n                    {user.online ? (\r\n                      <i className=\"fas fa-circle message-list-icon message-list-green\"></i>\r\n                    ) : (\r\n                      auth.user.following.find(\r\n                        (item) => item._id === user._id\r\n                      ) && <i className=\"fas fa-circle message-list-icon\"></i>\r\n                    )}\r\n                  </UserCard>\r\n                </div>\r\n              ))}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <button className=\"message-leftside-btn\" ref={pageEnd}>\r\n          Load More\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftSide;\r\n"]},"metadata":{},"sourceType":"module"}