{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\components\\\\Comments\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { POSTMODAL_TYPES } from \"../../redux/types/postModalTypes\";\nimport CommentDisplay from \"./CommentDisplay\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Comments = ({\n  post,\n  handleCheck\n}) => {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [showComments, setShowComments] = useState([]);\n  const [replyComments, setReplyComments] = useState([]);\n  const [next, setNext] = useState(2);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const newCm = post.comments.filter(cm => !cm.reply);\n    setComments(newCm);\n    setShowComments(newCm.slice(newCm.length - next));\n  }, [post.comments, next]);\n  useEffect(() => {\n    const newRep = post.comments.filter(cm => cm.reply);\n    setReplyComments(newRep);\n  }, [post.comments]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-show\",\n        onClick: () => dispatch({\n          type: POSTMODAL_TYPES.ISMODAL,\n          payload: post\n        }),\n        children: \"View all comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), comments.map((comment, index) => /*#__PURE__*/_jsxDEV(CommentDisplay, {\n        handleCheck: handleCheck,\n        comment: comment,\n        post: post,\n        replyCm: replyComments.filter(item => item.reply === comment._id)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Comments, \"LskrYqj6rRALgL5MyuvI21mgIIU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/components/Comments/index.js"],"names":["React","useEffect","useState","useDispatch","Link","POSTMODAL_TYPES","CommentDisplay","Comments","post","handleCheck","comments","setComments","showComments","setShowComments","replyComments","setReplyComments","next","setNext","dispatch","newCm","filter","cm","reply","slice","length","newRep","type","ISMODAL","payload","map","comment","index","item","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,cAAP;;;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA2B;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAMgB,QAAQ,GAAGf,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,KAAK,GAAGX,IAAI,CAACE,QAAL,CAAcU,MAAd,CAAsBC,EAAD,IAAQ,CAACA,EAAE,CAACC,KAAjC,CAAd;AACAX,IAAAA,WAAW,CAACQ,KAAD,CAAX;AACAN,IAAAA,eAAe,CAACM,KAAK,CAACI,KAAN,CAAYJ,KAAK,CAACK,MAAN,GAAeR,IAA3B,CAAD,CAAf;AACD,GAJQ,EAIN,CAACR,IAAI,CAACE,QAAN,EAAgBM,IAAhB,CAJM,CAAT;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,MAAM,GAAGjB,IAAI,CAACE,QAAL,CAAcU,MAAd,CAAsBC,EAAD,IAAQA,EAAE,CAACC,KAAhC,CAAf;AACAP,IAAAA,gBAAgB,CAACU,MAAD,CAAhB;AACD,GAHQ,EAGN,CAACjB,IAAI,CAACE,QAAN,CAHM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BAaE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,OAAO,EAAE,MACPQ,QAAQ,CAAC;AAAEQ,UAAAA,IAAI,EAAErB,eAAe,CAACsB,OAAxB;AAAiCC,UAAAA,OAAO,EAAEpB;AAA1C,SAAD,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAqBGE,QAAQ,CAACmB,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACZ,QAAC,cAAD;AACE,QAAA,WAAW,EAAEtB,WADf;AAGE,QAAA,OAAO,EAAEqB,OAHX;AAIE,QAAA,IAAI,EAAEtB,IAJR;AAKE,QAAA,OAAO,EAAEM,aAAa,CAACM,MAAd,CAAsBY,IAAD,IAAUA,IAAI,CAACV,KAAL,KAAeQ,OAAO,CAACG,GAAtD;AALX,SAEOF,KAFP;AAAA;AAAA;AAAA;AAAA,cADD,CArBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmCD,CApDD;;GAAMxB,Q;UAKaJ,W;;;KALbI,Q;AAsDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { POSTMODAL_TYPES } from \"../../redux/types/postModalTypes\";\r\nimport CommentDisplay from \"./CommentDisplay\";\r\nimport \"./index.scss\";\r\nconst Comments = ({ post, handleCheck }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [showComments, setShowComments] = useState([]);\r\n  const [replyComments, setReplyComments] = useState([]);\r\n  const [next, setNext] = useState(2);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const newCm = post.comments.filter((cm) => !cm.reply);\r\n    setComments(newCm);\r\n    setShowComments(newCm.slice(newCm.length - next));\r\n  }, [post.comments, next]);\r\n\r\n  useEffect(() => {\r\n    const newRep = post.comments.filter((cm) => cm.reply);\r\n    setReplyComments(newRep);\r\n  }, [post.comments]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"comment-container\">\r\n        {/* {comments.length - next > 0 ? (\r\n          <div className=\"comment-show\" onClick={() => setNext(next + 5)}>\r\n            See more comments...\r\n          </div>\r\n        ) : (\r\n          comments.length > 2 && (\r\n            <div className=\"comment-show\" onClick={() => setNext(2)}>\r\n              Hide comments...\r\n            </div>\r\n          )\r\n        )} */}\r\n\r\n        <p\r\n          className=\"comment-show\"\r\n          onClick={() =>\r\n            dispatch({ type: POSTMODAL_TYPES.ISMODAL, payload: post })\r\n          }\r\n        >\r\n          View all comments\r\n        </p>\r\n        {comments.map((comment, index) => (\r\n          <CommentDisplay\r\n            handleCheck={handleCheck}\r\n            key={index}\r\n            comment={comment}\r\n            post={post}\r\n            replyCm={replyComments.filter((item) => item.reply === comment._id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}