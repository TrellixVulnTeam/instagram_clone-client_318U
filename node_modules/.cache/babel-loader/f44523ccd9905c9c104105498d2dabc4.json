{"ast":null,"code":"import { DISCOVER_TYPES } from \"../types/discoverTypes\";\nconst initialState = {\n  loading: false,\n  posts: [],\n  result: 9,\n  page: 2,\n  firstLoad: false\n};\n\nconst discoverReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DISCOVER_TYPES.LOADING:\n      return { ...state,\n        loading: action.payload\n      };\n\n    case DISCOVER_TYPES.GET_POSTS:\n      return { ...state,\n        posts: action.payload.posts,\n        result: action.payload.result,\n        firstLoad: true\n      };\n\n    case DISCOVER_TYPES.UPDATE_POST:\n      return { ...state,\n        posts: action.payload.posts,\n        result: action.payload.result,\n        page: state.page + 1\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default discoverReducer;","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/redux/reducers/discoverReducer.js"],"names":["DISCOVER_TYPES","initialState","loading","posts","result","page","firstLoad","discoverReducer","state","action","type","LOADING","payload","GET_POSTS","UPDATE_POST"],"mappings":"AAAA,SAASA,cAAT,QAA+B,wBAA/B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,MAAM,EAAE,CAHW;AAInBC,EAAAA,IAAI,EAAE,CAJa;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,cAAc,CAACW,OAApB;AACE,aAAO,EACL,GAAGH,KADE;AAELN,QAAAA,OAAO,EAAEO,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKZ,cAAc,CAACa,SAApB;AACE,aAAO,EACL,GAAGL,KADE;AAELL,QAAAA,KAAK,EAAEM,MAAM,CAACG,OAAP,CAAeT,KAFjB;AAGLC,QAAAA,MAAM,EAAEK,MAAM,CAACG,OAAP,CAAeR,MAHlB;AAILE,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKN,cAAc,CAACc,WAApB;AACE,aAAO,EACL,GAAGN,KADE;AAELL,QAAAA,KAAK,EAAEM,MAAM,CAACG,OAAP,CAAeT,KAFjB;AAGLC,QAAAA,MAAM,EAAEK,MAAM,CAACG,OAAP,CAAeR,MAHlB;AAILC,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,GAAa;AAJd,OAAP;;AAMF;AACE,aAAOG,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,eAAeD,eAAf","sourcesContent":["import { DISCOVER_TYPES } from \"../types/discoverTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  posts: [],\r\n  result: 9,\r\n  page: 2,\r\n  firstLoad: false,\r\n};\r\n\r\nconst discoverReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case DISCOVER_TYPES.LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case DISCOVER_TYPES.GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.posts,\r\n        result: action.payload.result,\r\n        firstLoad: true,\r\n      };\r\n    case DISCOVER_TYPES.UPDATE_POST:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.posts,\r\n        result: action.payload.result,\r\n        page: state.page + 1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default discoverReducer;\r\n"]},"metadata":{},"sourceType":"module"}