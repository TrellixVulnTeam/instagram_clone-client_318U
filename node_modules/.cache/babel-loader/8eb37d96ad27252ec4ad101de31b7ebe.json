{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\pages\\\\PostDetails\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { getPostDetail } from \"../../redux/actions/postActions\";\nimport LoadingIcon from \"../../assets/images/loading.gif\";\nimport \"./index.scss\";\nimport Carousels from \"../../components/Carousels\";\nimport CardHeader from \"../../components/PostCards/CardHeader\";\nimport CardFooter from \"../../components/PostCards/CardFooter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostDetails = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    auth,\n    detailPost\n  } = useSelector(state => state);\n  const [post, setPost] = useState([]);\n  useEffect(() => {\n    dispatch(getPostDetail({\n      detailPost,\n      id,\n      auth\n    }));\n\n    if (detailPost.length > 0) {\n      const newArr = detailPost.filter(post => post._id === id);\n      setPost(newArr);\n    }\n  }, [auth, detailPost, id, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail-container\",\n      children: [post.length === 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: LoadingIcon,\n        alt: \"Loading\",\n        className: \"post-detail-loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), post.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-detail-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-detail-img\",\n            children: /*#__PURE__*/_jsxDEV(Carousels, {\n              images: item.images\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-detail-comments\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              post: item,\n              handleCheck: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-detail-list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              post: item,\n              handleCheck: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PostDetails, \"ZUF4FWCt71QnWWJeGUjCrgW+SFQ=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = PostDetails;\nexport default PostDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/pages/PostDetails/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","getPostDetail","LoadingIcon","Carousels","CardHeader","CardFooter","PostDetails","id","dispatch","auth","detailPost","state","post","setPost","length","newArr","filter","_id","map","item","images"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAASP,SAAS,EAAxB;AACA,QAAMQ,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBX,WAAW,CAAEY,KAAD,IAAWA,KAAZ,CAAxC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACP,aAAa,CAAC;AAAES,MAAAA,UAAF;AAAcH,MAAAA,EAAd;AAAkBE,MAAAA;AAAlB,KAAD,CAAd,CAAR;;AACA,QAAIC,UAAU,CAACI,MAAX,GAAoB,CAAxB,EAA2B;AACzB,YAAMC,MAAM,GAAGL,UAAU,CAACM,MAAX,CAAmBJ,IAAD,IAAUA,IAAI,CAACK,GAAL,KAAaV,EAAzC,CAAf;AACAM,MAAAA,OAAO,CAACE,MAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACN,IAAD,EAAOC,UAAP,EAAmBH,EAAnB,EAAuBC,QAAvB,CANM,CAAT;AAQA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,iBACGI,IAAI,CAACE,MAAL,KAAgB,CAAhB,iBACC;AACE,QAAA,GAAG,EAAEZ,WADP;AAEE,QAAA,GAAG,EAAC,SAFN;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQGU,IAAI,CAACM,GAAL,CAAUC,IAAD,iBACR;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE,QAAC,SAAD;AAAW,cAAA,MAAM,EAAEA,IAAI,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,IAAI,EAAED,IAAlB;AAAwB,cAAA,WAAW,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,UAAD;AAAY,cAAA,IAAI,EAAEA,IAAlB;AAAwB,cAAA,WAAW,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAA0CA,IAAI,CAACF,GAA/C;AAAA;AAAA;AAAA;AAAA;AADF,uBADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD,CAzCD;;GAAMX,W;UACWN,S,EACEF,W,EACYC,W;;;KAHzBO,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { getPostDetail } from \"../../redux/actions/postActions\";\r\nimport LoadingIcon from \"../../assets/images/loading.gif\";\r\nimport \"./index.scss\";\r\nimport Carousels from \"../../components/Carousels\";\r\nimport CardHeader from \"../../components/PostCards/CardHeader\";\r\nimport CardFooter from \"../../components/PostCards/CardFooter\";\r\nconst PostDetails = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const { auth, detailPost } = useSelector((state) => state);\r\n  const [post, setPost] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostDetail({ detailPost, id, auth }));\r\n    if (detailPost.length > 0) {\r\n      const newArr = detailPost.filter((post) => post._id === id);\r\n      setPost(newArr);\r\n    }\r\n  }, [auth, detailPost, id, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post-detail-container\">\r\n        {post.length === 0 && (\r\n          <img\r\n            src={LoadingIcon}\r\n            alt=\"Loading\"\r\n            className=\"post-detail-loading\"\r\n          />\r\n        )}\r\n        {post.map((item) => (\r\n          <>\r\n            <div className=\"post-detail-content\" key={item._id}>\r\n              <div className=\"post-detail-img\">\r\n                <Carousels images={item.images} />\r\n              </div>\r\n              <div className=\"post-detail-comments\">\r\n                <CardHeader post={item} handleCheck={false} />\r\n                <div className=\"post-detail-list\"></div>\r\n                <CardFooter post={item} handleCheck={false} />\r\n              </div>\r\n            </div>\r\n          </>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostDetails;\r\n"]},"metadata":{},"sourceType":"module"}