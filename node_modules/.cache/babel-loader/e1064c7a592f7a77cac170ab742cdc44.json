{"ast":null,"code":"import _slicedToArray from\"C:/Benkia/MERN/instagram-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useDispatch}from\"react-redux\";import{Link}from\"react-router-dom\";import{POSTMODAL_TYPES}from\"../../redux/types/postModalTypes\";import CommentDisplay from\"./CommentDisplay\";import\"./index.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Comments=function Comments(_ref){var post=_ref.post,handleCheck=_ref.handleCheck;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),comments=_useState2[0],setComments=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),showComments=_useState4[0],setShowComments=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),replyComments=_useState6[0],setReplyComments=_useState6[1];var _useState7=useState(2),_useState8=_slicedToArray(_useState7,2),next=_useState8[0],setNext=_useState8[1];var dispatch=useDispatch();useEffect(function(){var newCm=post.comments.filter(function(cm){return!cm.reply;});setComments(newCm);setShowComments(newCm.slice(newCm.length-next));},[post.comments,next]);useEffect(function(){var newRep=post.comments.filter(function(cm){return cm.reply;});setReplyComments(newRep);},[post.comments]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"comment-container\",children:[comments.length>0&&/*#__PURE__*/_jsx(\"p\",{className:\"comment-show\",onClick:function onClick(){return dispatch({type:POSTMODAL_TYPES.ISMODAL,payload:post});},children:\"View \".concat(comments.length,\" comments\")}),comments.map(function(comment,index){return/*#__PURE__*/_jsx(CommentDisplay,{handleCheck:handleCheck,comment:comment,post:post,replyCm:replyComments.filter(function(item){return item.reply===comment._id;})},index);})]})});};export default Comments;","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/components/Comments/index.js"],"names":["React","useEffect","useState","useDispatch","Link","POSTMODAL_TYPES","CommentDisplay","Comments","post","handleCheck","comments","setComments","showComments","setShowComments","replyComments","setReplyComments","next","setNext","dispatch","newCm","filter","cm","reply","slice","length","newRep","type","ISMODAL","payload","map","comment","index","item","_id"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,eAAT,KAAgC,kCAAhC,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAO,cAAP,C,6IACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA2B,IAAxBC,CAAAA,IAAwB,MAAxBA,IAAwB,CAAlBC,WAAkB,MAAlBA,WAAkB,CAC1C,cAAgCP,QAAQ,CAAC,EAAD,CAAxC,wCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAAwCT,QAAQ,CAAC,EAAD,CAAhD,yCAAOU,YAAP,eAAqBC,eAArB,eACA,eAA0CX,QAAQ,CAAC,EAAD,CAAlD,yCAAOY,aAAP,eAAsBC,gBAAtB,eACA,eAAwBb,QAAQ,CAAC,CAAD,CAAhC,yCAAOc,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CACAF,SAAS,CAAC,UAAM,CACd,GAAMkB,CAAAA,KAAK,CAAGX,IAAI,CAACE,QAAL,CAAcU,MAAd,CAAqB,SAACC,EAAD,QAAQ,CAACA,EAAE,CAACC,KAAZ,EAArB,CAAd,CACAX,WAAW,CAACQ,KAAD,CAAX,CACAN,eAAe,CAACM,KAAK,CAACI,KAAN,CAAYJ,KAAK,CAACK,MAAN,CAAeR,IAA3B,CAAD,CAAf,CACD,CAJQ,CAIN,CAACR,IAAI,CAACE,QAAN,CAAgBM,IAAhB,CAJM,CAAT,CAMAf,SAAS,CAAC,UAAM,CACd,GAAMwB,CAAAA,MAAM,CAAGjB,IAAI,CAACE,QAAL,CAAcU,MAAd,CAAqB,SAACC,EAAD,QAAQA,CAAAA,EAAE,CAACC,KAAX,EAArB,CAAf,CACAP,gBAAgB,CAACU,MAAD,CAAhB,CACD,CAHQ,CAGN,CAACjB,IAAI,CAACE,QAAN,CAHM,CAAT,CAKA,mBACE,sCACE,aAAK,SAAS,CAAC,mBAAf,WAYGA,QAAQ,CAACc,MAAT,CAAkB,CAAlB,eACC,UACE,SAAS,CAAC,cADZ,CAEE,OAAO,CAAE,yBACPN,CAAAA,QAAQ,CAAC,CAAEQ,IAAI,CAAErB,eAAe,CAACsB,OAAxB,CAAiCC,OAAO,CAAEpB,IAA1C,CAAD,CADD,EAFX,yBAMWE,QAAQ,CAACc,MANpB,eAbJ,CAuBGd,QAAQ,CAACmB,GAAT,CAAa,SAACC,OAAD,CAAUC,KAAV,qBACZ,KAAC,cAAD,EACE,WAAW,CAAEtB,WADf,CAGE,OAAO,CAAEqB,OAHX,CAIE,IAAI,CAAEtB,IAJR,CAKE,OAAO,CAAEM,aAAa,CAACM,MAAd,CAAqB,SAACY,IAAD,QAAUA,CAAAA,IAAI,CAACV,KAAL,GAAeQ,OAAO,CAACG,GAAjC,EAArB,CALX,EAEOF,KAFP,CADY,EAAb,CAvBH,GADF,EADF,CAqCD,CAtDD,CAwDA,cAAexB,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { POSTMODAL_TYPES } from \"../../redux/types/postModalTypes\";\r\nimport CommentDisplay from \"./CommentDisplay\";\r\nimport \"./index.scss\";\r\nconst Comments = ({ post, handleCheck }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [showComments, setShowComments] = useState([]);\r\n  const [replyComments, setReplyComments] = useState([]);\r\n  const [next, setNext] = useState(2);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const newCm = post.comments.filter((cm) => !cm.reply);\r\n    setComments(newCm);\r\n    setShowComments(newCm.slice(newCm.length - next));\r\n  }, [post.comments, next]);\r\n\r\n  useEffect(() => {\r\n    const newRep = post.comments.filter((cm) => cm.reply);\r\n    setReplyComments(newRep);\r\n  }, [post.comments]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"comment-container\">\r\n        {/* {comments.length - next > 0 ? (\r\n          <div className=\"comment-show\" onClick={() => setNext(next + 5)}>\r\n            See more comments...\r\n          </div>\r\n        ) : (\r\n          comments.length > 2 && (\r\n            <div className=\"comment-show\" onClick={() => setNext(2)}>\r\n              Hide comments...\r\n            </div>\r\n          )\r\n        )} */}\r\n        {comments.length > 0 && (\r\n          <p\r\n            className=\"comment-show\"\r\n            onClick={() =>\r\n              dispatch({ type: POSTMODAL_TYPES.ISMODAL, payload: post })\r\n            }\r\n          >\r\n            {`View ${comments.length} comments`}\r\n          </p>\r\n        )}\r\n\r\n        {comments.map((comment, index) => (\r\n          <CommentDisplay\r\n            handleCheck={handleCheck}\r\n            key={index}\r\n            comment={comment}\r\n            post={post}\r\n            replyCm={replyComments.filter((item) => item.reply === comment._id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}