{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\components\\\\Notify\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../Loading/Loading\";\nimport \"./index.scss\";\nimport News from \"./News\";\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Notify = () => {\n  _s();\n\n  const {\n    notify\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [notify.error && /*#__PURE__*/_jsxDEV(News, {\n        msg: {\n          title: \"Error\",\n          body: notify.error\n        },\n        handleShow: () => dispatch({\n          type: NOTIFY_TYPES.NOTIFY,\n          payload: {}\n        }),\n        bgColor: \"bg-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), notify.success && /*#__PURE__*/_jsxDEV(News, {\n        msg: {\n          title: \"Success\",\n          body: notify.success\n        },\n        handleShow: () => dispatch({\n          type: NOTIFY_TYPES.NOTIFY,\n          payload: {}\n        }),\n        bgColor: \"bg-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Notify, \"MMsDb9Zmes6B9ognxBx5uyYF6MI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Notify;\nexport default Notify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notify\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/components/Notify/index.js"],"names":["React","useDispatch","useSelector","Loading","News","NOTIFY_TYPES","Notify","notify","state","dispatch","error","title","body","type","NOTIFY","payload","success"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,QAA6B,+BAA7B;;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAaL,WAAW,CAAEM,KAAD,IAAWA,KAAZ,CAA9B;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,sBACE;AAAA,2BACE;AAAA,iBAEGM,MAAM,CAACG,KAAP,iBACC,QAAC,IAAD;AACE,QAAA,GAAG,EAAE;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,IAAI,EAAEL,MAAM,CAACG;AAA/B,SADP;AAEE,QAAA,UAAU,EAAE,MACVD,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAER,YAAY,CAACS,MAArB;AAA6BC,UAAAA,OAAO,EAAE;AAAtC,SAAD,CAHZ;AAKE,QAAA,OAAO,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,cAHJ,EAWGR,MAAM,CAACS,OAAP,iBACC,QAAC,IAAD;AACE,QAAA,GAAG,EAAE;AAAEL,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,IAAI,EAAEL,MAAM,CAACS;AAAjC,SADP;AAEE,QAAA,UAAU,EAAE,MACVP,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAER,YAAY,CAACS,MAArB;AAA6BC,UAAAA,OAAO,EAAE;AAAtC,SAAD,CAHZ;AAKE,QAAA,OAAO,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyBD,CA5BD;;GAAMT,M;UACeJ,W,EACFD,W;;;KAFbK,M;AA8BN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport \"./index.scss\";\r\nimport News from \"./News\";\r\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\r\nconst Notify = () => {\r\n  const { notify } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* {notify.loading && <Loading />} */}\r\n        {notify.error && (\r\n          <News\r\n            msg={{ title: \"Error\", body: notify.error }}\r\n            handleShow={() =>\r\n              dispatch({ type: NOTIFY_TYPES.NOTIFY, payload: {} })\r\n            }\r\n            bgColor=\"bg-danger\"\r\n          />\r\n        )}\r\n        {notify.success && (\r\n          <News\r\n            msg={{ title: \"Success\", body: notify.success }}\r\n            handleShow={() =>\r\n              dispatch({ type: NOTIFY_TYPES.NOTIFY, payload: {} })\r\n            }\r\n            bgColor=\"bg-success\"\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notify;\r\n"]},"metadata":{},"sourceType":"module"}