{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\pages\\\\ResetPasswordPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport AppStoreIcon from \"../../assets/images/applestore.png\";\nimport Forgot from \"../../assets/images/forgotPassword.svg\";\nimport GoogleIcon from \"../../assets/images/googlestore.png\";\nimport { resetPasswordAction } from \"../../redux/actions/authActions\";\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResetPasswordPage = () => {\n  _s();\n\n  const {\n    token\n  } = useParams();\n  const initialState = {\n    password: \"\",\n    cf_password: \"\"\n  };\n  const [data, setData] = useState(initialState);\n  const [typePass, setTypePass] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (data.password !== data.cf_password) {\n      return dispatch({\n        type: NOTIFY_TYPES.NOTIFY,\n        payload: {\n          error: \"Your password doesn't match with confirm password\"\n        }\n      });\n    }\n\n    dispatch(resetPasswordAction({\n      password: data.password,\n      token,\n      history\n    }));\n    setData(initialState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgot-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forgot-input-logo\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons forgot-input-icon\",\n              children: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"#\",\n            onSubmit: handleSubmit,\n            className: \"forgot-input-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"forgot-input-heading\",\n              children: \"Reset your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"forgot-input-desc\",\n              children: [\"Enter your password and confirm password\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"to reset your account password.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"instagram-form-input\",\n              id: \"password\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                className: \"instagram-form-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"input-login input-login-password\",\n                  \"aria-label\": \"Password\",\n                  \"aria-required\": \"true\",\n                  placeholder: \"Password\",\n                  name: \"password\",\n                  value: data.password,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"instagram-label-text\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"instagram-form-input\",\n              id: \"password\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                className: \"instagram-form-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"input-login input-login-password\",\n                  \"aria-label\": \"Confirm Password\",\n                  \"aria-required\": \"true\",\n                  placeholder: \"Confirm Password\",\n                  name: \"cf_password\",\n                  value: data.cf_password,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"instagram-label-text\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"forgot-input-btn\",\n              style: {\n                opacity: data.password && data.cf_password ? \"1\" : \"0.5\"\n              },\n              disabled: data.password && data.cf_password ? false : true,\n              children: \"Send login link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ResetPasswordPage, \"I396JKMYtd1hhbmpkKr+/sIERuA=\", false, function () {\n  return [useParams, useHistory, useDispatch];\n});\n\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/pages/ResetPasswordPage/index.js"],"names":["React","useState","useDispatch","useHistory","useParams","AppStoreIcon","GoogleIcon","resetPasswordAction","NOTIFY_TYPES","ResetPasswordPage","token","initialState","password","cf_password","data","setData","typePass","setTypePass","history","dispatch","handleInputChange","e","name","value","target","handleSubmit","preventDefault","type","NOTIFY","payload","error","opacity"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport AppStoreIcon from \"../../assets/images/applestore.png\";\r\nimport Forgot from \"../../assets/images/forgotPassword.svg\";\r\nimport GoogleIcon from \"../../assets/images/googlestore.png\";\r\nimport { resetPasswordAction } from \"../../redux/actions/authActions\";\r\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\r\nconst ResetPasswordPage = () => {\r\n  const { token } = useParams();\r\n  const initialState = {\r\n    password: \"\",\r\n    cf_password: \"\",\r\n  };\r\n  const [data, setData] = useState(initialState);\r\n  const [typePass, setTypePass] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (data.password !== data.cf_password) {\r\n      return dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: \"Your password doesn't match with confirm password\" },\r\n      });\r\n    }\r\n\r\n    dispatch(resetPasswordAction({ password: data.password, token, history }));\r\n    setData(initialState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"forgot-container\">\r\n        <div className=\"forgot-content\">\r\n          <div className=\"forgot-input\">\r\n            <div className=\"forgot-input-logo\">\r\n              <span className=\"material-icons forgot-input-icon\">password</span>\r\n            </div>\r\n            <form\r\n              action=\"#\"\r\n              onSubmit={handleSubmit}\r\n              className=\"forgot-input-form\"\r\n            >\r\n              <h1 className=\"forgot-input-heading\">Reset your password</h1>\r\n              <p className=\"forgot-input-desc\">\r\n                Enter your password and confirm password{\" \"}\r\n                <span>to reset your account password.</span>\r\n              </p>\r\n\r\n              <div className=\"instagram-form-input\" id=\"password\">\r\n                <label htmlFor=\"\" className=\"instagram-form-label\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"input-login input-login-password\"\r\n                    aria-label=\"Password\"\r\n                    aria-required=\"true\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={data.password}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <span className=\"instagram-label-text\">Password</span>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"instagram-form-input\" id=\"password\">\r\n                <label htmlFor=\"\" className=\"instagram-form-label\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"input-login input-login-password\"\r\n                    aria-label=\"Confirm Password\"\r\n                    aria-required=\"true\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"cf_password\"\r\n                    value={data.cf_password}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <span className=\"instagram-label-text\">Confirm Password</span>\r\n                </label>\r\n              </div>\r\n\r\n              <button\r\n                className=\"forgot-input-btn\"\r\n                style={{\r\n                  opacity: data.password && data.cf_password ? \"1\" : \"0.5\",\r\n                }}\r\n                disabled={data.password && data.cf_password ? false : true}\r\n              >\r\n                Send login link\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n"]},"metadata":{},"sourceType":"module"}