{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\components\\\\Comments\\\\InputComment\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createCommentAction } from \"../../../redux/actions/commentActions\";\nimport Icons from \"../../Icons\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InputComment = ({\n  children,\n  post,\n  onReply,\n  setOnReply\n}) => {\n  _s();\n\n  const {\n    auth,\n    socket\n  } = useSelector(state => state);\n  const [content, setContent] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!content.trim()) {\n      if (setOnReply) return setOnReply(false);\n      return;\n    }\n\n    const newComment = {\n      content,\n      likes: [],\n      user: auth.user,\n      createdAt: new Date().toISOString(),\n      reply: onReply && onReply.commentId,\n      tag: onReply && onReply.user\n    };\n    dispatch(createCommentAction({\n      post,\n      newComment,\n      auth,\n      socket\n    }));\n    if (setOnReply) return setOnReply(false);\n    setContent(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-comments\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-form\",\n        onSubmit: handleSubmit,\n        children: [children, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-comment\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          placeholder: \"Add a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"input-btn\",\n          disabled: content ? false : true,\n          style: {\n            opacity: content ? 1 : 0.5\n          },\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(InputComment, \"Q8vzPk089LTjNhAL9LnAVZYcGFs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = InputComment;\nexport default InputComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputComment\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/components/Comments/InputComment/index.js"],"names":["React","useState","useDispatch","useSelector","createCommentAction","Icons","InputComment","children","post","onReply","setOnReply","auth","socket","state","content","setContent","dispatch","handleSubmit","e","preventDefault","trim","newComment","likes","user","createdAt","Date","toISOString","reply","commentId","tag","target","value","opacity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,uCAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,cAAP;;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAD,KAA6C;AAAA;;AAChE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBT,WAAW,CAAEU,KAAD,IAAWA,KAAZ,CAApC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;;AACA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACL,OAAO,CAACM,IAAR,EAAL,EAAqB;AACnB,UAAIV,UAAJ,EAAgB,OAAOA,UAAU,CAAC,KAAD,CAAjB;AAChB;AACD;;AAED,UAAMW,UAAU,GAAG;AACjBP,MAAAA,OADiB;AAEjBQ,MAAAA,KAAK,EAAE,EAFU;AAGjBC,MAAAA,IAAI,EAAEZ,IAAI,CAACY,IAHM;AAIjBC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAJM;AAKjBC,MAAAA,KAAK,EAAElB,OAAO,IAAIA,OAAO,CAACmB,SALT;AAMjBC,MAAAA,GAAG,EAAEpB,OAAO,IAAIA,OAAO,CAACc;AANP,KAAnB;AASAP,IAAAA,QAAQ,CAACZ,mBAAmB,CAAC;AAAEI,MAAAA,IAAF;AAAQa,MAAAA,UAAR;AAAoBV,MAAAA,IAApB;AAA0BC,MAAAA;AAA1B,KAAD,CAApB,CAAR;AACA,QAAIF,UAAJ,EAAgB,OAAOA,UAAU,CAAC,KAAD,CAAjB;AAChBK,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GApBD;;AAsBA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,QAAQ,EAAEE,YAAvC;AAAA,mBACGV,QADH,eAGE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,eAFZ;AAGE,UAAA,KAAK,EAAEO,OAHT;AAIE,UAAA,QAAQ,EAAGI,CAAD,IAAOH,UAAU,CAACG,CAAC,CAACY,MAAF,CAASC,KAAV,CAJ7B;AAKE,UAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,gBAHF,eAWE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,WAFZ;AAGE,UAAA,QAAQ,EAAEjB,OAAO,GAAG,KAAH,GAAW,IAH9B;AAIE,UAAA,KAAK,EAAE;AAAEkB,YAAAA,OAAO,EAAElB,OAAO,GAAG,CAAH,GAAO;AAAzB,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0BD,CApDD;;GAAMR,Y;UACqBH,W,EAERD,W;;;KAHbI,Y;AAsDN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createCommentAction } from \"../../../redux/actions/commentActions\";\r\nimport Icons from \"../../Icons\";\r\nimport \"./index.scss\";\r\nconst InputComment = ({ children, post, onReply, setOnReply }) => {\r\n  const { auth, socket } = useSelector((state) => state);\r\n  const [content, setContent] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!content.trim()) {\r\n      if (setOnReply) return setOnReply(false);\r\n      return;\r\n    }\r\n\r\n    const newComment = {\r\n      content,\r\n      likes: [],\r\n      user: auth.user,\r\n      createdAt: new Date().toISOString(),\r\n      reply: onReply && onReply.commentId,\r\n      tag: onReply && onReply.user,\r\n    };\r\n\r\n    dispatch(createCommentAction({ post, newComment, auth, socket }));\r\n    if (setOnReply) return setOnReply(false);\r\n    setContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-comments\">\r\n        <form className=\"input-form\" onSubmit={handleSubmit}>\r\n          {children}\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-comment\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            placeholder=\"Add a comment...\"\r\n          />\r\n        \r\n          <button\r\n            type=\"submit\"\r\n            className=\"input-btn\"\r\n            disabled={content ? false : true}\r\n            style={{ opacity: content ? 1 : 0.5 }}\r\n          >\r\n            Post\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputComment;\r\n"]},"metadata":{},"sourceType":"module"}