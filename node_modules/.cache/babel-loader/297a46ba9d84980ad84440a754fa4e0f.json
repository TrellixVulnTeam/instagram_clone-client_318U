{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\components\\\\Status\\\\StatusModal\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NOTIFY_TYPES } from \"../../../redux/types/notifyTypes\";\nimport { STATUS_TYPES } from \"../../../redux/types/statusTypes\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StatusModal = () => {\n  _s();\n\n  const {\n    auth\n  } = useSelector(state => state);\n  const [content, setContent] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [stream, setStream] = useState(false);\n  const dispatch = useDispatch();\n  const videoRef = useRef();\n  const refCanvas = useRef();\n\n  const handleChangeImage = e => {\n    const files = [...e.target.files];\n    let err = \"\";\n    let newImages = [];\n    files.forEach(file => {\n      if (!file) return err = \"File does not exist.\";\n\n      if (file.type !== \"image/jpeg\" && file.type !== \"image/png\") {\n        return err = \"Image format is incorrect\";\n      }\n\n      return newImages.push(file);\n    });\n    if (err) dispatch({\n      type: NOTIFY_TYPES.NOTIFY,\n      payload: {\n        error: err\n      }\n    });\n    setImages([...images, ...newImages]);\n  };\n\n  const deleteImages = index => {\n    const newArr = [...images];\n    newArr.splice(index, 1);\n    setImages(newArr);\n  };\n\n  const handleStream = () => {\n    setStream(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        className: \"status-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Create New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => dispatch({\n              type: STATUS_TYPES.STATUS,\n              payload: false\n            }),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"content\",\n            placeholder: `${auth.user.username}, what are you thinking ?`,\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-content-showImg\",\n            children: images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"file_img\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: URL.createObjectURL(img),\n                alt: \"Img\",\n                className: \"img-thumbnail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => deleteImages(index),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), stream && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-content-stream\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              autoPlay: true,\n              muted: true,\n              ref: videoRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: refCanvas\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-content-images\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-camera\",\n              onClick: handleStream\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-content-upload\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                id: \"file\",\n                multiple: true,\n                accept: \"image/*\",\n                onChange: handleChangeImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"status-footer-btn\",\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(StatusModal, \"o27oX2oPwgjrwm9WtqQVdRpz7ws=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = StatusModal;\nexport default StatusModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusModal\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/components/Status/StatusModal/index.js"],"names":["React","useRef","useState","useDispatch","useSelector","NOTIFY_TYPES","STATUS_TYPES","StatusModal","auth","state","content","setContent","images","setImages","stream","setStream","dispatch","videoRef","refCanvas","handleChangeImage","e","files","target","err","newImages","forEach","file","type","push","NOTIFY","payload","error","deleteImages","index","newArr","splice","handleStream","STATUS","user","username","value","map","img","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NOTIFY_TYPES } from \"../../../redux/types/notifyTypes\";\r\nimport { STATUS_TYPES } from \"../../../redux/types/statusTypes\";\r\nimport \"./index.scss\";\r\nconst StatusModal = () => {\r\n  const { auth } = useSelector((state) => state);\r\n  const [content, setContent] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [stream, setStream] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const videoRef = useRef();\r\n  const refCanvas = useRef();\r\n\r\n  const handleChangeImage = (e) => {\r\n    const files = [...e.target.files];\r\n    let err = \"\";\r\n    let newImages = [];\r\n    files.forEach((file) => {\r\n      if (!file) return (err = \"File does not exist.\");\r\n\r\n      if (file.type !== \"image/jpeg\" && file.type !== \"image/png\") {\r\n        return (err = \"Image format is incorrect\");\r\n      }\r\n\r\n      return newImages.push(file);\r\n    });\r\n\r\n    if (err)\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err },\r\n      });\r\n    setImages([...images, ...newImages]);\r\n  };\r\n\r\n  const deleteImages = (index) => {\r\n    const newArr = [...images];\r\n    newArr.splice(index, 1);\r\n    setImages(newArr);\r\n  };\r\n\r\n  const handleStream = () => {\r\n    setStream(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"status-modal\">\r\n        <form action=\"#\" className=\"status-form\">\r\n          <div className=\"status-heading\">\r\n            <h5>Create New Post</h5>\r\n            <span\r\n              onClick={() =>\r\n                dispatch({\r\n                  type: STATUS_TYPES.STATUS,\r\n                  payload: false,\r\n                })\r\n              }\r\n            >\r\n              &times;\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"status-content\">\r\n            <textarea\r\n              name=\"content\"\r\n              placeholder={`${auth.user.username}, what are you thinking ?`}\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n            />\r\n\r\n            <div className=\"status-content-showImg\">\r\n              {images.map((img, index) => (\r\n                <div key={index} id=\"file_img\">\r\n                  <img\r\n                    src={URL.createObjectURL(img)}\r\n                    alt=\"Img\"\r\n                    className=\"img-thumbnail\"\r\n                  />\r\n                  <span onClick={() => deleteImages(index)}>&times;</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {stream && (\r\n              <div className=\"status-content-stream\">\r\n                <video autoPlay muted ref={videoRef} />\r\n                <span>&times;</span>\r\n                <canvas ref={refCanvas} />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"status-content-images\">\r\n              <i className=\"fas fa-camera\" onClick={handleStream} />\r\n              <div className=\"status-content-upload\">\r\n                <i className=\"fas fa-image\" />\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  id=\"file\"\r\n                  multiple\r\n                  accept=\"image/*\"\r\n                  onChange={handleChangeImage}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"status-footer\">\r\n              <button className=\"status-footer-btn\">Post</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatusModal;\r\n"]},"metadata":{},"sourceType":"module"}