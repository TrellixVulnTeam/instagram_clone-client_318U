{"ast":null,"code":"import { deleteData, editData } from \"../types/globalTypes\";\nimport { MESSAGE_TYPES } from \"../types/messageTypes\";\nconst initialState = {\n  users: [],\n  resultUsers: 0,\n  data: [],\n  firstLoad: false\n};\n\nconst messageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MESSAGE_TYPES.ADD_USER:\n      if (state.users.every(item => item._id !== action.payload._id)) {\n        return { ...state,\n          users: [action.payload, ...state.users]\n        };\n      }\n\n      return state;\n\n    case MESSAGE_TYPES.ADD_MESSAGE:\n      return { ...state,\n        data: state.data.map(item => item._id === action.payload.recipient || item._id === action.payload.sender ? { ...item,\n          messages: [...item.messages, action.payload],\n          result: item.result + 1\n        } : item),\n        users: state.users.map(user => user._id === action.payload.recipient || user._id === action.payload.sender ? { ...user,\n          text: action.payload.text,\n          media: action.payload.media\n        } : user)\n      };\n\n    case MESSAGE_TYPES.GET_CONVERSATIONS:\n      return { ...state,\n        users: action.payload.newArr,\n        resultUsers: action.payload.result,\n        firstLoad: true\n      };\n\n    case MESSAGE_TYPES.GET_MESSAGES:\n      return { ...state,\n        data: [...state.data, action.payload]\n      };\n\n    case MESSAGE_TYPES.UPDATE_MESSAGES:\n      return { ...state,\n        data: editData(state.data, action.payload._id, action.payload)\n      };\n\n    case MESSAGE_TYPES.DELETE_MESSAGES:\n      return { ...state,\n        data: state.data.map(item => item._id === action.payload._id ? { ...item,\n          messages: action.payload.newData\n        } : item)\n      };\n\n    case MESSAGE_TYPES.DELETE_CONVERSATION:\n      return { ...state,\n        users: deleteData(state.users, action.payload),\n        data: deleteData(state.data, action.payload)\n      };\n\n    case MESSAGE_TYPES.CHECK_ONLINE_OFFLINE:\n      return { ...state,\n        users: state.users.map(user => action.payload.includes(user._id) ? { ...user,\n          online: true\n        } : { ...user,\n          online: false\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/redux/reducers/messageReducer.js"],"names":["deleteData","editData","MESSAGE_TYPES","initialState","users","resultUsers","data","firstLoad","messageReducer","state","action","type","ADD_USER","every","item","_id","payload","ADD_MESSAGE","map","recipient","sender","messages","result","user","text","media","GET_CONVERSATIONS","newArr","GET_MESSAGES","UPDATE_MESSAGES","DELETE_MESSAGES","newData","DELETE_CONVERSATION","CHECK_ONLINE_OFFLINE","includes","online"],"mappings":"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","sourcesContent":["import { deleteData, editData } from \"../types/globalTypes\";\r\nimport { MESSAGE_TYPES } from \"../types/messageTypes\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  resultUsers: 0,\r\n  data: [],\r\n  firstLoad: false,\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MESSAGE_TYPES.ADD_USER:\r\n      if (state.users.every((item) => item._id !== action.payload._id)) {\r\n        return {\r\n          ...state,\r\n          users: [action.payload, ...state.users],\r\n        };\r\n      }\r\n      return state;\r\n    case MESSAGE_TYPES.ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        data: state.data.map((item) =>\r\n          item._id === action.payload.recipient ||\r\n          item._id === action.payload.sender\r\n            ? {\r\n                ...item,\r\n                messages: [...item.messages, action.payload],\r\n                result: item.result + 1,\r\n              }\r\n            : item\r\n        ),\r\n        users: state.users.map((user) =>\r\n          user._id === action.payload.recipient ||\r\n          user._id === action.payload.sender\r\n            ? {\r\n                ...user,\r\n                text: action.payload.text,\r\n                media: action.payload.media,\r\n              }\r\n            : user\r\n        ),\r\n      };\r\n    case MESSAGE_TYPES.GET_CONVERSATIONS:\r\n      return {\r\n        ...state,\r\n        users: action.payload.newArr,\r\n        resultUsers: action.payload.result,\r\n        firstLoad: true,\r\n      };\r\n    case MESSAGE_TYPES.GET_MESSAGES:\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload],\r\n      };\r\n    case MESSAGE_TYPES.UPDATE_MESSAGES:\r\n      return {\r\n        ...state,\r\n        data: editData(state.data, action.payload._id, action.payload),\r\n      };\r\n    case MESSAGE_TYPES.DELETE_MESSAGES:\r\n      return {\r\n        ...state,\r\n        data: state.data.map((item) =>\r\n          item._id === action.payload._id\r\n            ? { ...item, messages: action.payload.newData }\r\n            : item\r\n        ),\r\n      };\r\n    case MESSAGE_TYPES.DELETE_CONVERSATION:\r\n      return {\r\n        ...state,\r\n        users: deleteData(state.users, action.payload),\r\n        data: deleteData(state.data, action.payload),\r\n      };\r\n    case MESSAGE_TYPES.CHECK_ONLINE_OFFLINE:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          action.payload.includes(user._id)\r\n            ? { ...user, online: true }\r\n            : { ...user, online: false }\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messageReducer;\r\n"]},"metadata":{},"sourceType":"module"}