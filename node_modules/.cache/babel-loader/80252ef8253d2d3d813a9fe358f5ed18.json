{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\pages\\\\DiscoverPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDiscoverPosts, getMorePostDiscover } from \"../../redux/actions/discoverActions\";\nimport LoadingIcon from \"../../assets/images/loading.gif\";\nimport \"./index.scss\";\nimport PostThumb from \"../../components/PostProfile/PostThumb\";\nimport LoadMoreBtn from \"../../components/LoadMoreBtn\";\nimport { getDataAPI } from \"../../utils/fetchData\";\nimport { DISCOVER_TYPES } from \"../../redux/types/discoverTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DiscoverPage = () => {\n  _s();\n\n  const {\n    auth,\n    discover\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(false);\n  const [page, setPage] = useState(0);\n  const pageEnd = useRef();\n  useEffect(() => {\n    if (!discover.firstLoad) {\n      dispatch(getDiscoverPosts(auth.token));\n    }\n  }, [dispatch, auth.token, discover.firstLoad]);\n\n  const handleLoadMore = async () => {\n    setLoad(true);\n    const res = await getDataAPI(`post_discover?num=${discover.page * 9}`, auth.token);\n    dispatch({\n      type: DISCOVER_TYPES.UPDATE_POST,\n      payload: res.data\n    });\n    setLoad(false);\n  }; //Loadmore\n\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setPage(p => p + 1);\n      }\n    }, {\n      threshold: 0.1\n    });\n    observer.observe(pageEnd.current);\n  }, [setPage]);\n  console.log(page);\n  useEffect(() => {\n    if (discover.result >= 9 * (page - 1) && page > 1) {\n      setLoad(true);\n      dispatch(getMorePostDiscover({\n        page,\n        auth\n      }));\n      setLoad(false);\n    } else {\n      return;\n    }\n  }, [auth, dispatch, discover.result, page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"discover-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"discover-page-container\",\n        children: [discover.loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"discover-page-loading\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: LoadingIcon,\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"discover-page-details\",\n            children: /*#__PURE__*/_jsxDEV(PostThumb, {\n              posts: discover.posts,\n              result: discover.result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), load && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"discover-page-loading\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: LoadingIcon,\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"discover-page-btn\",\n          children: !discover.loading && /*#__PURE__*/_jsxDEV(LoadMoreBtn, {\n            result: discover.result,\n            page: discover.page,\n            load: load,\n            handleLoadMore: handleLoadMore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"discover-page-loadMore\",\n          ref: pageEnd,\n          children: \"Loadmore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(DiscoverPage, \"ooJmYvWsC+osTDyAr9DkAa2sqLc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DiscoverPage;\nexport default DiscoverPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiscoverPage\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/pages/DiscoverPage/index.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","getDiscoverPosts","getMorePostDiscover","LoadingIcon","PostThumb","LoadMoreBtn","getDataAPI","DISCOVER_TYPES","DiscoverPage","auth","discover","state","dispatch","load","setLoad","page","setPage","pageEnd","firstLoad","token","handleLoadMore","res","type","UPDATE_POST","payload","data","observer","IntersectionObserver","entries","isIntersecting","p","threshold","observe","current","console","log","result","loading","posts"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getDiscoverPosts,\r\n  getMorePostDiscover,\r\n} from \"../../redux/actions/discoverActions\";\r\nimport LoadingIcon from \"../../assets/images/loading.gif\";\r\nimport \"./index.scss\";\r\nimport PostThumb from \"../../components/PostProfile/PostThumb\";\r\nimport LoadMoreBtn from \"../../components/LoadMoreBtn\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { DISCOVER_TYPES } from \"../../redux/types/discoverTypes\";\r\nconst DiscoverPage = () => {\r\n  const { auth, discover } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [load, setLoad] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const pageEnd = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!discover.firstLoad) {\r\n      dispatch(getDiscoverPosts(auth.token));\r\n    }\r\n  }, [dispatch, auth.token, discover.firstLoad]);\r\n\r\n  const handleLoadMore = async () => {\r\n    setLoad(true);\r\n    const res = await getDataAPI(\r\n      `post_discover?num=${discover.page * 9}`,\r\n      auth.token\r\n    );\r\n    dispatch({\r\n      type: DISCOVER_TYPES.UPDATE_POST,\r\n      payload: res.data,\r\n    });\r\n    setLoad(false);\r\n  };\r\n\r\n  //Loadmore\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage((p) => p + 1);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n\r\n    observer.observe(pageEnd.current);\r\n  }, [setPage]);\r\n\r\n  console.log(page);\r\n\r\n  useEffect(() => {\r\n    if (discover.result >= 9 * (page - 1) && page > 1) {\r\n      setLoad(true);\r\n      dispatch(getMorePostDiscover({ page, auth }));\r\n      setLoad(false);\r\n    } else {\r\n      return;\r\n    }\r\n  }, [auth, dispatch, discover.result, page]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"discover-page\">\r\n        <div className=\"discover-page-container\">\r\n          {discover.loading ? (\r\n            <>\r\n              <div className=\"discover-page-loading\">\r\n                <img src={LoadingIcon} alt=\"Logo\" />\r\n              </div>{\" \"}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"discover-page-details\">\r\n                <PostThumb posts={discover.posts} result={discover.result} />\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {load && (\r\n            <div className=\"discover-page-loading\">\r\n              <img src={LoadingIcon} alt=\"Logo\" />\r\n            </div>\r\n          )}\r\n          <div className=\"discover-page-btn\">\r\n            {!discover.loading && (\r\n              <LoadMoreBtn\r\n                result={discover.result}\r\n                page={discover.page}\r\n                load={load}\r\n                handleLoadMore={handleLoadMore}\r\n              />\r\n            )}\r\n          </div>\r\n          <button className=\"discover-page-loadMore\" ref={pageEnd}>\r\n            Loadmore\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiscoverPage;\r\n"]},"metadata":{},"sourceType":"module"}