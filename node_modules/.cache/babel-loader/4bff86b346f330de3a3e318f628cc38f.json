{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\components\\\\LeftSide\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\nimport { getDataAPI } from \"../../utils/fetchData\";\nimport UserCard from \"../UserCard\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LeftSide = () => {\n  _s();\n\n  const {\n    auth\n  } = useSelector(state => state);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [searchUsers, setSearchUsers] = useState([]);\n  const [load, setLoad] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!searchValue) return;\n\n    try {\n      setLoad(true);\n      const res = await getDataAPI(`search?username=${searchValue}`, auth.token);\n      setSearchUsers(res.data.users);\n      setLoad(false);\n    } catch (err) {\n      dispatch({\n        type: NOTIFY_TYPES.NOTIFY,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-header\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        className: \"message-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-form-input\",\n          value: searchValue,\n          onChange: e => setSearchValue(e.target.value),\n          placeholder: \"Enter to search....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"message-form-btn\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: searchUsers.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: searchUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-list-item\",\n            children: /*#__PURE__*/_jsxDEV(UserCard, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this))\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LeftSide, \"AOxBaldURtoRQH0Od6sd6PJ1nAE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LeftSide;\nexport default LeftSide;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftSide\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/components/LeftSide/index.js"],"names":["React","useState","useDispatch","useSelector","NOTIFY_TYPES","getDataAPI","UserCard","LeftSide","auth","state","searchValue","setSearchValue","searchUsers","setSearchUsers","load","setLoad","dispatch","handleSubmit","e","preventDefault","res","token","data","users","err","type","NOTIFY","payload","error","response","msg","target","value","length","map","user","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,cAAP;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAWL,WAAW,CAAEM,KAAD,IAAWA,KAAZ,CAA5B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACT,WAAL,EAAkB;;AAClB,QAAI;AACFK,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,YAAMK,GAAG,GAAG,MAAMf,UAAU,CACzB,mBAAkBK,WAAY,EADL,EAE1BF,IAAI,CAACa,KAFqB,CAA5B;AAIAR,MAAAA,cAAc,CAACO,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAd;AACAR,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KARD,CAQE,OAAOS,GAAP,EAAY;AACZR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAErB,YAAY,CAACsB,MADZ;AAEPC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEJ,GAAG,CAACK,QAAJ,CAAaP,IAAb,CAAkBQ;AAA3B;AAFF,OAAD,CAAR;AAID;AACF,GAjBD;;AAkBA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,QAAQ,EAAEb,YAA1C;AAAA,8BACE;AAAM,QAAA,MAAM,EAAC,GAAb;AAAiB,QAAA,SAAS,EAAC,cAA3B;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,oBAFZ;AAGE,UAAA,KAAK,EAAEP,WAHT;AAIE,UAAA,QAAQ,EAAGQ,CAAD,IAAOP,cAAc,CAACO,CAAC,CAACa,MAAF,CAASC,KAAV,CAJjC;AAKE,UAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACGpB,WAAW,CAACqB,MAAZ,KAAuB,CAAvB,gBACC;AAAA,oBACGrB,WAAW,CAACsB,GAAZ,CAAiBC,IAAD,iBACf;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF,aAAwCA,IAAI,CAACC,GAA7C;AAAA;AAAA;AAAA;AAAA,kBADD;AADH,yBADD,gBASC;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgCD,CAzDD;;GAAM7B,Q;UACaJ,W,EAIAD,W;;;KALbK,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport UserCard from \"../UserCard\";\r\nimport \"./index.scss\";\r\nconst LeftSide = () => {\r\n  const { auth } = useSelector((state) => state);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchUsers, setSearchUsers] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!searchValue) return;\r\n    try {\r\n      setLoad(true);\r\n      const res = await getDataAPI(\r\n        `search?username=${searchValue}`,\r\n        auth.token\r\n      );\r\n      setSearchUsers(res.data.users);\r\n      setLoad(false);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"message-header\" onSubmit={handleSubmit}>\r\n        <form action=\"#\" className=\"message-form\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"message-form-input\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n            placeholder=\"Enter to search....\"\r\n          />\r\n          <button type=\"submit\" className=\"message-form-btn\">\r\n            Search\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"message-list\">\r\n          {searchUsers.length !== 0 ? (\r\n            <>\r\n              {searchUsers.map((user) => (\r\n                <div className=\"message-list-item\" key={user._id}>\r\n                  <UserCard user={user} />\r\n                </div>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <> </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftSide;\r\n"]},"metadata":{},"sourceType":"module"}