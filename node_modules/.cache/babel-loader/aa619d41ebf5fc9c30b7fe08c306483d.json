{"ast":null,"code":"import _regeneratorRuntime from\"C:/Benkia/MERN/instagram-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Benkia/MERN/instagram-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{getDataAPI}from\"../../utils/fetchData\";import{DISCOVER_TYPES}from\"../types/discoverTypes\";import{NOTIFY_TYPES}from\"../types/notifyTypes\";export var getDiscoverPosts=function getDiscoverPosts(token){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:DISCOVER_TYPES.LOADING,payload:true});_context.next=4;return getDataAPI(\"post_discover\",token);case 4:res=_context.sent;dispatch({type:DISCOVER_TYPES.GET_POSTS,payload:res.data});dispatch({type:DISCOVER_TYPES.LOADING,payload:false});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:NOTIFY_TYPES.NOTIFY,payload:{error:_context.t0.response.data.msg}});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getMorePostDiscover=function getMorePostDiscover(_ref2){var page=_ref2.page,auth=_ref2.auth;return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return getDataAPI(\"post_discover?num=\".concat(page*9),auth.token);case 3:res=_context2.sent;dispatch({type:DISCOVER_TYPES.UPDATE_POST,payload:res.data});_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);dispatch({type:NOTIFY_TYPES.NOTIFY,payload:{error:_context2.t0.response.data.msg}});case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function(_x2){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/redux/actions/discoverActions.js"],"names":["getDataAPI","DISCOVER_TYPES","NOTIFY_TYPES","getDiscoverPosts","token","dispatch","type","LOADING","payload","res","GET_POSTS","data","NOTIFY","error","response","msg","getMorePostDiscover","page","auth","UPDATE_POST"],"mappings":"qTAAA,OAASA,UAAT,KAA2B,uBAA3B,CACA,OAASC,cAAT,KAA+B,wBAA/B,CACA,OAASC,YAAT,KAA6B,sBAA7B,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CACzC,+FAAO,iBAAOC,QAAP,0IAEHA,QAAQ,CAAC,CACPC,IAAI,CAAEL,cAAc,CAACM,OADd,CAEPC,OAAO,CAAE,IAFF,CAAD,CAAR,CAFG,sBAOeR,CAAAA,UAAU,CAAC,eAAD,CAAkBI,KAAlB,CAPzB,QAOGK,GAPH,eASHJ,QAAQ,CAAC,CACPC,IAAI,CAAEL,cAAc,CAACS,SADd,CAEPF,OAAO,CAAEC,GAAG,CAACE,IAFN,CAAD,CAAR,CAKAN,QAAQ,CAAC,CACPC,IAAI,CAAEL,cAAc,CAACM,OADd,CAEPC,OAAO,CAAE,KAFF,CAAD,CAAR,CAdG,+EAmBHH,QAAQ,CAAC,CACPC,IAAI,CAAEJ,YAAY,CAACU,MADZ,CAEPJ,OAAO,CAAE,CAAEK,KAAK,CAAE,YAAIC,QAAJ,CAAaH,IAAb,CAAkBI,GAA3B,CAFF,CAAD,CAAR,CAnBG,oEAAP,+DAyBD,CA1BM,CA4BP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,OAAoB,IAAjBC,CAAAA,IAAiB,OAAjBA,IAAiB,CAAXC,IAAW,OAAXA,IAAW,CACrD,gGAAO,kBAAOb,QAAP,sKAEeL,CAAAA,UAAU,6BAAsBiB,IAAI,CAAG,CAA7B,EAAkCC,IAAI,CAACd,KAAvC,CAFzB,QAEGK,GAFH,gBAGHJ,QAAQ,CAAC,CACPC,IAAI,CAAEL,cAAc,CAACkB,WADd,CAEPX,OAAO,CAAEC,GAAG,CAACE,IAFN,CAAD,CAAR,CAHG,mFAQHN,QAAQ,CAAC,CACPC,IAAI,CAAEJ,YAAY,CAACU,MADZ,CAEPJ,OAAO,CAAE,CAAEK,KAAK,CAAE,aAAIC,QAAJ,CAAaH,IAAb,CAAkBI,GAA3B,CAFF,CAAD,CAAR,CARG,sEAAP,iEAcD,CAfM","sourcesContent":["import { getDataAPI } from \"../../utils/fetchData\";\r\nimport { DISCOVER_TYPES } from \"../types/discoverTypes\";\r\nimport { NOTIFY_TYPES } from \"../types/notifyTypes\";\r\n\r\nexport const getDiscoverPosts = (token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: DISCOVER_TYPES.LOADING,\r\n        payload: true,\r\n      });\r\n\r\n      const res = await getDataAPI(\"post_discover\", token);\r\n\r\n      dispatch({\r\n        type: DISCOVER_TYPES.GET_POSTS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch({\r\n        type: DISCOVER_TYPES.LOADING,\r\n        payload: false,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getMorePostDiscover = ({ page, auth }) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await getDataAPI(`post_discover?num=${page * 9}`, auth.token);\r\n      dispatch({\r\n        type: DISCOVER_TYPES.UPDATE_POST,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}