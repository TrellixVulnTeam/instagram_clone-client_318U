{"ast":null,"code":"import { getDataAPI } from \"../../utils/fetchData\";\nimport { NOTIFY_TYPES } from \"../types/notifyTypes\";\nimport { PROFILE_TYPES } from \"../types/profileTypes\";\nexport const getProfileUsers = ({\n  users,\n  id,\n  auth\n}) => {\n  return async dispatch => {\n    if (users.every(user => user._id !== id)) {\n      try {\n        dispatch({\n          type: PROFILE_TYPES.LOADING,\n          payload: true\n        });\n        const res = await getDataAPI(`/user/${id}`, auth.token);\n        dispatch({\n          type: PROFILE_TYPES.GET_USER,\n          payload: res.data\n        });\n        dispatch({\n          type: PROFILE_TYPES.LOADING,\n          payload: false\n        });\n      } catch (err) {\n        dispatch({\n          type: NOTIFY_TYPES.NOTIFY,\n          payload: {\n            error: err.response.data.msg\n          }\n        });\n      }\n    }\n  };\n};\nexport const updateProfileUser = ({\n  userData,\n  avatar,\n  auth\n}) => async dispatch => {\n  console.log({\n    userData,\n    avatar,\n    auth\n  });\n};","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/redux/actions/profileActions.js"],"names":["getDataAPI","NOTIFY_TYPES","PROFILE_TYPES","getProfileUsers","users","id","auth","dispatch","every","user","_id","type","LOADING","payload","res","token","GET_USER","data","err","NOTIFY","error","response","msg","updateProfileUser","userData","avatar","console","log"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uBAA3B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,EAAT;AAAaC,EAAAA;AAAb,CAAD,KAAyB;AACtD,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAIH,KAAK,CAACI,KAAN,CAAaC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,EAAnC,CAAJ,EAA4C;AAC1C,UAAI;AACFE,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAET,aAAa,CAACU,OADb;AAEPC,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAIA,cAAMC,GAAG,GAAG,MAAMd,UAAU,CAAE,SAAQK,EAAG,EAAb,EAAgBC,IAAI,CAACS,KAArB,CAA5B;AACAR,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAET,aAAa,CAACc,QADb;AAEPH,UAAAA,OAAO,EAAEC,GAAG,CAACG;AAFN,SAAD,CAAR;AAIAV,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAET,aAAa,CAACU,OADb;AAEPC,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID,OAdD,CAcE,OAAOK,GAAP,EAAY;AACZX,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAEV,YAAY,CAACkB,MADZ;AAEPN,UAAAA,OAAO,EAAE;AAAEO,YAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaJ,IAAb,CAAkBK;AAA3B;AAFF,SAAD,CAAR;AAID;AACF;AACF,GAvBD;AAwBD,CAzBM;AA2BP,OAAO,MAAMC,iBAAiB,GAC5B,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBnB,EAAAA;AAApB,CAAD,KACA,MAAOC,QAAP,IAAoB;AAClBmB,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBnB,IAAAA;AAApB,GAAZ;AACD,CAJI","sourcesContent":["import { getDataAPI } from \"../../utils/fetchData\";\r\nimport { NOTIFY_TYPES } from \"../types/notifyTypes\";\r\nimport { PROFILE_TYPES } from \"../types/profileTypes\";\r\n\r\nexport const getProfileUsers = ({ users, id, auth }) => {\r\n  return async (dispatch) => {\r\n    if (users.every((user) => user._id !== id)) {\r\n      try {\r\n        dispatch({\r\n          type: PROFILE_TYPES.LOADING,\r\n          payload: true,\r\n        });\r\n        const res = await getDataAPI(`/user/${id}`, auth.token);\r\n        dispatch({\r\n          type: PROFILE_TYPES.GET_USER,\r\n          payload: res.data,\r\n        });\r\n        dispatch({\r\n          type: PROFILE_TYPES.LOADING,\r\n          payload: false,\r\n        });\r\n      } catch (err) {\r\n        dispatch({\r\n          type: NOTIFY_TYPES.NOTIFY,\r\n          payload: { error: err.response.data.msg },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateProfileUser =\r\n  ({ userData, avatar, auth }) =>\r\n  async (dispatch) => {\r\n    console.log({ userData, avatar, auth });\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}