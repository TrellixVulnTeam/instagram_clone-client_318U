{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\layouts\\\\PostProfiles\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport PostThumb from \"../../components/PostProfile/PostThumb\";\nimport LoadingIcon from \"../../assets/images/loading.gif\";\nimport \"./index.scss\";\nimport LoadMoreBtn from \"../../components/LoadMoreBtn\";\nimport { getDataAPI } from \"../../utils/fetchData\";\nimport { PROFILE_TYPES } from \"../../redux/types/profileTypes\";\nimport { getMoreUserPosts } from \"../../redux/actions/profileActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostProfiles = ({\n  auth,\n  id,\n  dispatch,\n  profile\n}) => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [result, setResult] = useState(9);\n  const [page, setPage] = useState(0);\n  const [load, setLoad] = useState(false);\n  const pageEnd = useRef();\n  useEffect(() => {\n    profile.posts.forEach(data => {\n      if (data._id === id) {\n        setPosts(data.posts);\n        setResult(data.result);\n        setPage(data.page);\n      }\n    });\n  }, [profile.posts, id]);\n\n  const handleLoadMore = async () => {\n    setLoad(true);\n    const res = await getDataAPI(`user_posts/${id}?limit=${page * 9}`, auth.token);\n    const newData = { ...res.data,\n      page: page + 1,\n      _id: id\n    };\n    dispatch({\n      type: PROFILE_TYPES.UPDATE_POST,\n      payload: newData\n    });\n    setLoad(false);\n  }; //Loadmore\n\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setPage(p => p + 1);\n      }\n    }, {\n      threshold: 0.1\n    });\n    observer.observe(pageEnd.current);\n  }, [setPage]);\n  useEffect(() => {\n    if (result >= 9 * (page - 1) && page > 1) {\n      setLoad(true);\n      dispatch(getMoreUserPosts({\n        id,\n        page,\n        auth\n      }));\n      setLoad(false);\n    } else {\n      return;\n    }\n  }, [auth, dispatch, result, page, id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(PostThumb, {\n        posts: posts,\n        result: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), load && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-profile-loading\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: LoadingIcon,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-profile-loadMore\",\n        ref: pageEnd,\n        children: \"Loadmore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PostProfiles, \"/EdDZ6YjA2AF1nEqMMph7jZMvbc=\");\n\n_c = PostProfiles;\nexport default PostProfiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostProfiles\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/layouts/PostProfiles/index.js"],"names":["React","useEffect","useRef","useState","PostThumb","LoadingIcon","LoadMoreBtn","getDataAPI","PROFILE_TYPES","getMoreUserPosts","PostProfiles","auth","id","dispatch","profile","posts","setPosts","result","setResult","page","setPage","load","setLoad","pageEnd","forEach","data","_id","handleLoadMore","res","token","newData","type","UPDATE_POST","payload","observer","IntersectionObserver","entries","isIntersecting","p","threshold","observe","current"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport PostThumb from \"../../components/PostProfile/PostThumb\";\r\nimport LoadingIcon from \"../../assets/images/loading.gif\";\r\nimport \"./index.scss\";\r\nimport LoadMoreBtn from \"../../components/LoadMoreBtn\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { PROFILE_TYPES } from \"../../redux/types/profileTypes\";\r\nimport { getMoreUserPosts } from \"../../redux/actions/profileActions\";\r\nconst PostProfiles = ({ auth, id, dispatch, profile }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [result, setResult] = useState(9);\r\n  const [page, setPage] = useState(0);\r\n  const [load, setLoad] = useState(false);\r\n  const pageEnd = useRef();\r\n\r\n  useEffect(() => {\r\n    profile.posts.forEach((data) => {\r\n      if (data._id === id) {\r\n        setPosts(data.posts);\r\n        setResult(data.result);\r\n        setPage(data.page);\r\n      }\r\n    });\r\n  }, [profile.posts, id]);\r\n\r\n  const handleLoadMore = async () => {\r\n    setLoad(true);\r\n    const res = await getDataAPI(\r\n      `user_posts/${id}?limit=${page * 9}`,\r\n      auth.token\r\n    );\r\n    const newData = { ...res.data, page: page + 1, _id: id };\r\n    dispatch({\r\n      type: PROFILE_TYPES.UPDATE_POST,\r\n      payload: newData,\r\n    });\r\n    setLoad(false);\r\n  };\r\n\r\n  //Loadmore\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage((p) => p + 1);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n\r\n    observer.observe(pageEnd.current);\r\n  }, [setPage]);\r\n\r\n  useEffect(() => {\r\n    if (result >= 9 * (page - 1) && page > 1) {\r\n      setLoad(true);\r\n      dispatch(getMoreUserPosts({ id, page, auth }));\r\n      setLoad(false);\r\n    } else {\r\n      return;\r\n    }\r\n  }, [auth, dispatch, result, page, id]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post-profile-container\">\r\n        <PostThumb posts={posts} result={result} />\r\n        {load && (\r\n          <div className=\"post-profile-loading\">\r\n            <img src={LoadingIcon} alt=\"Logo\" />\r\n          </div>\r\n        )}\r\n        <button className=\"post-profile-loadMore\" ref={pageEnd}>\r\n          Loadmore\r\n        </button>\r\n        {/* <div className=\"post-profile-btn\">\r\n          <LoadMoreBtn\r\n            result={result}\r\n            page={page}\r\n            load={load}\r\n            handleLoadMore={handleLoadMore}\r\n          />\r\n        </div> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostProfiles;\r\n"]},"metadata":{},"sourceType":"module"}