{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\components\\\\Comments\\\\CommentCard\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { likeCommentAction, unLikeCommentAction, updateCommentAction } from \"../../../redux/actions/commentActions\";\nimport { STATUS_TYPES } from \"../../../redux/types/statusTypes\";\nimport LikeButton from \"../../LikeButton\";\nimport CommentMenu from \"../CommentMenu\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentCard = ({\n  children,\n  comment,\n  post,\n  commentId,\n  handleCheck\n}) => {\n  _s();\n\n  const {\n    auth,\n    input,\n    postModal\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [content, setContent] = useState(\"\");\n  const [readMore, setReadMore] = useState(false);\n  const [isLike, setIsLike] = useState(false);\n  const [onEdit, setOnEdit] = useState(false);\n  const [loadLike, setLoadLike] = useState(false);\n  const [onReply, setOnReply] = useState(false);\n  useEffect(() => {\n    setContent(comment.content);\n\n    if (comment.likes.find(like => like._id === auth.user._id)) {\n      setIsLike(true);\n    }\n  }, [comment.content, auth.user._id, comment.likes]);\n\n  const handleLike = async () => {\n    if (loadLike) return;\n    setIsLike(true);\n    setLoadLike(true);\n    await dispatch(likeCommentAction({\n      comment,\n      post,\n      auth,\n      postModal\n    }));\n    setLoadLike(false);\n  };\n\n  const handleUnLike = async () => {\n    if (loadLike) return;\n    setIsLike(false);\n    setLoadLike(true);\n    await dispatch(unLikeCommentAction({\n      comment,\n      post,\n      auth,\n      postModal\n    }));\n    setLoadLike(false);\n  };\n\n  const handleUpdate = () => {\n    if (comment.content !== content) {\n      dispatch(updateCommentAction({\n        comment,\n        post,\n        content,\n        auth\n      }));\n      setOnEdit(false);\n    } else {\n      setOnEdit(false);\n    }\n  };\n\n  const handleReply = () => {\n    if (onReply) return setOnReply(false);\n    dispatch({\n      type: STATUS_TYPES.ON_REPLY,\n      payload: { ...comment,\n        commentId,\n        isReply: true\n      }\n    });\n    setOnReply({ ...comment,\n      commentId\n    });\n  };\n\n  const handleCancelReply = () => {\n    return dispatch({\n      type: STATUS_TYPES.ON_REPLY,\n      payload: false\n    });\n  };\n\n  const styleCard = {\n    opacity: comment._id ? 1 : 0.5,\n    pointerEvents: comment._id ? \"inherit\" : \"none\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-card\",\n    style: styleCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-card-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-card-heading\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"comment-card-author\",\n            to: `/profile/${comment.user._id}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: comment.user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-card-details\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-card-text\",\n              children: onEdit ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n                cols: \"5\",\n                value: content,\n                onChange: e => setContent(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [comment.tag && comment.tag._id !== comment.user._id && /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/profile/${comment.tag._id}`,\n                  className: \"comment-card-tag\",\n                  children: [\"@\", comment.tag.username, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: content.length < 100 ? content : readMore ? content + \" \" : content.slice(0, 30) + \"....\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this), content.length > 100 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"comment-card-readMore\",\n                  onClick: () => setReadMore(!readMore),\n                  children: readMore ? \"Hide content\" : \"Read More\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this), \" \"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-card-actions\",\n              children: onEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"bold\",\n                  onClick: handleUpdate,\n                  children: \"update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"bold\",\n                  onClick: e => setOnEdit(false),\n                  children: \"cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : handleCheck === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: input.commentId === commentId && input.isReply ? /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"bold\",\n                  onClick: handleCancelReply,\n                  children: \"cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"bold\",\n                  onClick: handleReply,\n                  children: \"reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-card-likes\",\n        style: {\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CommentMenu, {\n          post: post,\n          comment: comment,\n          setOnEdit: setOnEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n          isLike: isLike,\n          handleLike: handleLike,\n          handleUnLike: handleUnLike,\n          details: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentCard, \"TZeIQd2ltoZ92NZGvb462TsMiik=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CommentCard;\nexport default CommentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/components/Comments/CommentCard/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","likeCommentAction","unLikeCommentAction","updateCommentAction","STATUS_TYPES","LikeButton","CommentMenu","CommentCard","children","comment","post","commentId","handleCheck","auth","input","postModal","state","dispatch","content","setContent","readMore","setReadMore","isLike","setIsLike","onEdit","setOnEdit","loadLike","setLoadLike","onReply","setOnReply","likes","find","like","_id","user","handleLike","handleUnLike","handleUpdate","handleReply","type","ON_REPLY","payload","isReply","handleCancelReply","styleCard","opacity","pointerEvents","username","e","target","value","tag","length","slice","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  likeCommentAction,\r\n  unLikeCommentAction,\r\n  updateCommentAction,\r\n} from \"../../../redux/actions/commentActions\";\r\nimport { STATUS_TYPES } from \"../../../redux/types/statusTypes\";\r\nimport LikeButton from \"../../LikeButton\";\r\nimport CommentMenu from \"../CommentMenu\";\r\nimport \"./index.scss\";\r\n\r\nconst CommentCard = ({ children, comment, post, commentId, handleCheck }) => {\r\n  const { auth, input, postModal } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [content, setContent] = useState(\"\");\r\n  const [readMore, setReadMore] = useState(false);\r\n  const [isLike, setIsLike] = useState(false);\r\n  const [onEdit, setOnEdit] = useState(false);\r\n  const [loadLike, setLoadLike] = useState(false);\r\n  const [onReply, setOnReply] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setContent(comment.content);\r\n    if (comment.likes.find((like) => like._id === auth.user._id)) {\r\n      setIsLike(true);\r\n    }\r\n  }, [comment.content, auth.user._id, comment.likes]);\r\n\r\n  const handleLike = async () => {\r\n    if (loadLike) return;\r\n    setIsLike(true);\r\n\r\n    setLoadLike(true);\r\n    await dispatch(likeCommentAction({ comment, post, auth, postModal }));\r\n    setLoadLike(false);\r\n  };\r\n\r\n  const handleUnLike = async () => {\r\n    if (loadLike) return;\r\n    setIsLike(false);\r\n\r\n    setLoadLike(true);\r\n    await dispatch(unLikeCommentAction({ comment, post, auth, postModal }));\r\n    setLoadLike(false);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    if (comment.content !== content) {\r\n      dispatch(updateCommentAction({ comment, post, content, auth }));\r\n      setOnEdit(false);\r\n    } else {\r\n      setOnEdit(false);\r\n    }\r\n  };\r\n\r\n  const handleReply = () => {\r\n    if (onReply) return setOnReply(false);\r\n\r\n    dispatch({\r\n      type: STATUS_TYPES.ON_REPLY,\r\n      payload: {\r\n        ...comment,\r\n        commentId,\r\n        isReply: true,\r\n      },\r\n    });\r\n    setOnReply({ ...comment, commentId });\r\n  };\r\n\r\n  const handleCancelReply = () => {\r\n    return dispatch({\r\n      type: STATUS_TYPES.ON_REPLY,\r\n      payload: false,\r\n    });\r\n  };\r\n\r\n  const styleCard = {\r\n    opacity: comment._id ? 1 : 0.5,\r\n    pointerEvents: comment._id ? \"inherit\" : \"none\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-card\" style={styleCard}>\r\n      <div className=\"comment-card-container\">\r\n        <div className=\"comment-card-left\">\r\n          <div className=\"comment-card-heading\">\r\n            <Link\r\n              className=\"comment-card-author\"\r\n              to={`/profile/${comment.user._id}`}\r\n            >\r\n              <span>{comment.user.username}</span>\r\n            </Link>\r\n            {/* <small>{moment(comment.createdAt).fromNow()}</small> */}\r\n          </div>\r\n\r\n          <div className=\"comment-card-details\">\r\n            <div className=\"comment-card-content\">\r\n              <div className=\"comment-card-text\">\r\n                {onEdit ? (\r\n                  <textarea\r\n                    cols=\"5\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                  ></textarea>\r\n                ) : (\r\n                  <>\r\n                    {comment.tag && comment.tag._id !== comment.user._id && (\r\n                      <Link\r\n                        to={`/profile/${comment.tag._id}`}\r\n                        className=\"comment-card-tag\"\r\n                      >\r\n                        @{comment.tag.username}{\" \"}\r\n                      </Link>\r\n                    )}\r\n                    <span>\r\n                      {content.length < 100\r\n                        ? content\r\n                        : readMore\r\n                        ? content + \" \"\r\n                        : content.slice(0, 30) + \"....\"}\r\n                    </span>\r\n                    {content.length > 100 && (\r\n                      <span\r\n                        className=\"comment-card-readMore\"\r\n                        onClick={() => setReadMore(!readMore)}\r\n                      >\r\n                        {readMore ? \"Hide content\" : \"Read More\"}\r\n                      </span>\r\n                    )}{\" \"}\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"comment-card-actions\">\r\n                {onEdit ? (\r\n                  <>\r\n                    <small className=\"bold\" onClick={handleUpdate}>\r\n                      update\r\n                    </small>\r\n                    <small className=\"bold\" onClick={(e) => setOnEdit(false)}>\r\n                      cancel\r\n                    </small>\r\n                  </>\r\n                ) : (\r\n                  handleCheck === false && (\r\n                    <>\r\n                      {input.commentId === commentId && input.isReply ? (\r\n                        <small className=\"bold\" onClick={handleCancelReply}>\r\n                          cancel\r\n                        </small>\r\n                      ) : (\r\n                        <small className=\"bold\" onClick={handleReply}>\r\n                          reply\r\n                        </small>\r\n                      )}\r\n                    </>\r\n                  )\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* {onReply && (\r\n              <InputComment\r\n                post={post}\r\n                onReply={onReply}\r\n                setOnReply={setOnReply}\r\n              >\r\n                <Link\r\n                  to={`/profile/${onReply.user._id}`}\r\n                  className=\"comment-card-reply\"\r\n                >\r\n                  @{onReply.user.username}:\r\n                </Link>\r\n              </InputComment>\r\n            )} */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"comment-card-likes\" style={{ cursor: \"pointer\" }}>\r\n          <CommentMenu post={post} comment={comment} setOnEdit={setOnEdit} />\r\n          <LikeButton\r\n            isLike={isLike}\r\n            handleLike={handleLike}\r\n            handleUnLike={handleUnLike}\r\n            details={true}\r\n          />\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentCard;\r\n"]},"metadata":{},"sourceType":"module"}