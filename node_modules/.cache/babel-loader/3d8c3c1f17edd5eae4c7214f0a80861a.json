{"ast":null,"code":"var _jsxFileName = \"C:\\\\Benkia\\\\MERN\\\\instagram-clone\\\\client\\\\src\\\\components\\\\LeftSide\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { addUserAction, getConversations } from \"../../redux/actions/messageActions\";\nimport { MESSAGE_TYPES } from \"../../redux/types/messageTypes\";\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\nimport { getDataAPI } from \"../../utils/fetchData\";\nimport UserCard from \"../UserCard\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LeftSide = () => {\n  _s();\n\n  const {\n    auth,\n    message\n  } = useSelector(state => state);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [searchUsers, setSearchUsers] = useState([]);\n  const [load, setLoad] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const pageEnd = useRef();\n  const [page, setPage] = useState(0);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!searchValue) return;\n\n    try {\n      setLoad(true);\n      const res = await getDataAPI(`search?username=${searchValue}`, auth.token);\n      setSearchUsers(res.data.users);\n      setLoad(false);\n    } catch (err) {\n      dispatch({\n        type: NOTIFY_TYPES.NOTIFY,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n\n  const handleAddUser = user => {\n    setSearchValue(\"\");\n    setSearchUsers([]);\n    dispatch({\n      type: MESSAGE_TYPES.ADD_USER,\n      payload: { ...user,\n        text: \"\",\n        media: []\n      }\n    });\n    return history.push(`/message/${user._id}`);\n  };\n\n  const isActive = user => {\n    if (id === user._id) return \"active\";\n    return \"\";\n  };\n\n  useEffect(() => {\n    if (message.firstLoad) return;\n    dispatch(getConversations({\n      auth\n    }));\n  }, [dispatch, auth, message.firstLoad]); //Load more\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setPage(p => p + 1);\n      }\n    }, {\n      threshold: 0.1\n    });\n    observer.observe(pageEnd.current);\n  }, [setPage]);\n  useEffect(() => {\n    if (message.resultUsers >= (page - 1) * 9 && page > 1) {\n      dispatch(getConversations({\n        auth,\n        page\n      }));\n    }\n  }, [message.resultUsers, auth, dispatch, page]); //Check user online - offline\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        className: \"message-search\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-search-input\",\n          value: searchValue,\n          onChange: e => setSearchValue(e.target.value),\n          placeholder: \"Enter to search....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"message-search-btn\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: searchUsers.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: searchUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-list-user ${isActive(user)}`,\n            onClick: () => handleAddUser(user),\n            children: /*#__PURE__*/_jsxDEV(UserCard, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this))\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: message.users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-list-user ${isActive(user)}`,\n            onClick: () => handleAddUser(user),\n            children: /*#__PURE__*/_jsxDEV(UserCard, {\n              user: user,\n              msg: true,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-circle message-list-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"message-leftside-btn\",\n        ref: pageEnd,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LeftSide, \"O3RWQ5XIFrzo9AWDLJ2CscbXVIM=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useParams];\n});\n\n_c = LeftSide;\nexport default LeftSide;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftSide\");","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/components/LeftSide/index.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","useHistory","useParams","addUserAction","getConversations","MESSAGE_TYPES","NOTIFY_TYPES","getDataAPI","UserCard","LeftSide","auth","message","state","searchValue","setSearchValue","searchUsers","setSearchUsers","load","setLoad","dispatch","history","id","pageEnd","page","setPage","handleSubmit","e","preventDefault","res","token","data","users","err","type","NOTIFY","payload","error","response","msg","handleAddUser","user","ADD_USER","text","media","push","_id","isActive","firstLoad","observer","IntersectionObserver","entries","isIntersecting","p","threshold","observe","current","resultUsers","target","value","length","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport {\r\n  addUserAction,\r\n  getConversations,\r\n} from \"../../redux/actions/messageActions\";\r\nimport { MESSAGE_TYPES } from \"../../redux/types/messageTypes\";\r\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport UserCard from \"../UserCard\";\r\nimport \"./index.scss\";\r\nconst LeftSide = () => {\r\n  const { auth, message } = useSelector((state) => state);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchUsers, setSearchUsers] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const pageEnd = useRef();\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!searchValue) return;\r\n    try {\r\n      setLoad(true);\r\n      const res = await getDataAPI(\r\n        `search?username=${searchValue}`,\r\n        auth.token\r\n      );\r\n      setSearchUsers(res.data.users);\r\n      setLoad(false);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddUser = (user) => {\r\n    setSearchValue(\"\");\r\n    setSearchUsers([]);\r\n    dispatch({\r\n      type: MESSAGE_TYPES.ADD_USER,\r\n      payload: { ...user, text: \"\", media: [] },\r\n    });\r\n    return history.push(`/message/${user._id}`);\r\n  };\r\n\r\n  const isActive = (user) => {\r\n    if (id === user._id) return \"active\";\r\n    return \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (message.firstLoad) return;\r\n    dispatch(getConversations({ auth }));\r\n  }, [dispatch, auth, message.firstLoad]);\r\n\r\n  //Load more\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage((p) => p + 1);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n\r\n    observer.observe(pageEnd.current);\r\n  }, [setPage]);\r\n\r\n  useEffect(() => {\r\n    if (message.resultUsers >= (page - 1) * 9 && page > 1) {\r\n      dispatch(getConversations({ auth, page }));\r\n    }\r\n  }, [message.resultUsers, auth, dispatch, page]);\r\n\r\n  //Check user online - offline\r\n\r\n  return (\r\n    <>\r\n      <div className=\"message-header\">\r\n        <form action=\"#\" className=\"message-search\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"message-search-input\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n            placeholder=\"Enter to search....\"\r\n          />\r\n          <button type=\"submit\" className=\"message-search-btn\">\r\n            Search\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"message-list\">\r\n          {searchUsers.length !== 0 ? (\r\n            <>\r\n              {searchUsers.map((user) => (\r\n                <div\r\n                  className={`message-list-user ${isActive(user)}`}\r\n                  key={user._id}\r\n                  onClick={() => handleAddUser(user)}\r\n                >\r\n                  <UserCard user={user} />\r\n                </div>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {message.users.map((user) => (\r\n                <div\r\n                  className={`message-list-user ${isActive(user)}`}\r\n                  key={user._id}\r\n                  onClick={() => handleAddUser(user)}\r\n                >\r\n                  <UserCard user={user} msg={true}>\r\n                    <i className=\"fas fa-circle message-list-icon\"></i>\r\n                  </UserCard>\r\n                </div>\r\n              ))}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <button className=\"message-leftside-btn\" ref={pageEnd}>\r\n          Load More\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftSide;\r\n"]},"metadata":{},"sourceType":"module"}