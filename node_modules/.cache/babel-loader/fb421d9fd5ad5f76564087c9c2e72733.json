{"ast":null,"code":"import _regeneratorRuntime from\"C:/Benkia/MERN/instagram-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"C:/Benkia/MERN/instagram-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"C:/Benkia/MERN/instagram-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var checkImage=function checkImage(file){var err=\"\";if(!file)return err=\"File does not exist.\";if(file.size>1024*1024)//1mb\nerr=\"The largest image size is 1 mb\";if(file.type!==\"image/jpeg\"&&file.type!==\"image/png\")err=\"Image format is incorrect\";return err;};export var imageUpload=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(images){var imgArr,_iterator,_step,item,formData,res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:imgArr=[];_iterator=_createForOfIteratorHelper(images);_context.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context.next=19;break;}item=_step.value;formData=new FormData();if(item.camera){formData.append(\"file\",item.camera);}else{formData.append(\"file\",item);}formData.append(\"upload_preset\",\"pi0vdvj3\");formData.append(\"cloud_name\",\"cuto\");_context.next=12;return fetch(\"https://api.cloudinary.com/v1_1/cuto/upload\",{method:\"POST\",body:formData});case 12:res=_context.sent;_context.next=15;return res.json();case 15:data=_context.sent;imgArr.push({public_id:data.public_id,url:data.secure_url});case 17:_context.next=4;break;case 19:_context.next=24;break;case 21:_context.prev=21;_context.t0=_context[\"catch\"](2);_iterator.e(_context.t0);case 24:_context.prev=24;_iterator.f();return _context.finish(24);case 27:return _context.abrupt(\"return\",imgArr);case 28:case\"end\":return _context.stop();}}},_callee,null,[[2,21,24,27]]);}));return function imageUpload(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Benkia/MERN/instagram-clone/client/src/utils/imageUpload.js"],"names":["checkImage","file","err","size","type","imageUpload","images","imgArr","item","formData","FormData","camera","append","fetch","method","body","res","json","data","push","public_id","url","secure_url"],"mappings":"yeAAA,MAAO,IAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CAClC,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,GAAI,CAACD,IAAL,CAAW,MAAQC,CAAAA,GAAG,CAAG,sBAAd,CAEX,GAAID,IAAI,CAACE,IAAL,CAAY,KAAO,IAAvB,CACE;AACAD,GAAG,CAAG,gCAAN,CAEF,GAAID,IAAI,CAACG,IAAL,GAAc,YAAd,EAA8BH,IAAI,CAACG,IAAL,GAAc,WAAhD,CACEF,GAAG,CAAG,2BAAN,CAEF,MAAOA,CAAAA,GAAP,CACD,CAZM,CAcP,MAAO,IAAMG,CAAAA,WAAW,0FAAG,iBAAOC,MAAP,oKACrBC,MADqB,CACZ,EADY,sCAEND,MAFM,8FAEdE,IAFc,aAGjBC,QAHiB,CAGN,GAAIC,CAAAA,QAAJ,EAHM,CAKvB,GAAIF,IAAI,CAACG,MAAT,CAAiB,CACfF,QAAQ,CAACG,MAAT,CAAgB,MAAhB,CAAwBJ,IAAI,CAACG,MAA7B,EACD,CAFD,IAEO,CACLF,QAAQ,CAACG,MAAT,CAAgB,MAAhB,CAAwBJ,IAAxB,EACD,CAEDC,QAAQ,CAACG,MAAT,CAAgB,eAAhB,CAAiC,UAAjC,EACAH,QAAQ,CAACG,MAAT,CAAgB,YAAhB,CAA8B,MAA9B,EAZuB,uBAcLC,CAAAA,KAAK,CAAC,6CAAD,CAAgD,CACrEC,MAAM,CAAE,MAD6D,CAErEC,IAAI,CAAEN,QAF+D,CAAhD,CAdA,SAcjBO,GAdiB,sCAmBJA,CAAAA,GAAG,CAACC,IAAJ,EAnBI,SAmBjBC,IAnBiB,eAoBvBX,MAAM,CAACY,IAAP,CAAY,CAAEC,SAAS,CAAEF,IAAI,CAACE,SAAlB,CAA6BC,GAAG,CAAEH,IAAI,CAACI,UAAvC,CAAZ,EApBuB,0PAsBlBf,MAtBkB,6EAAH,kBAAXF,CAAAA,WAAW,4CAAjB","sourcesContent":["export const checkImage = (file) => {\r\n  let err = \"\";\r\n  if (!file) return (err = \"File does not exist.\");\r\n\r\n  if (file.size > 1024 * 1024)\r\n    //1mb\r\n    err = \"The largest image size is 1 mb\";\r\n\r\n  if (file.type !== \"image/jpeg\" && file.type !== \"image/png\")\r\n    err = \"Image format is incorrect\";\r\n\r\n  return err;\r\n};\r\n\r\nexport const imageUpload = async (images) => {\r\n  let imgArr = [];\r\n  for (const item of images) {\r\n    const formData = new FormData();\r\n\r\n    if (item.camera) {\r\n      formData.append(\"file\", item.camera);\r\n    } else {\r\n      formData.append(\"file\", item);\r\n    }\r\n\r\n    formData.append(\"upload_preset\", \"pi0vdvj3\");\r\n    formData.append(\"cloud_name\", \"cuto\");\r\n\r\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/cuto/upload\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    const data = await res.json();\r\n    imgArr.push({ public_id: data.public_id, url: data.secure_url });\r\n  }\r\n  return imgArr;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}