[{"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\index.js":"1","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\App.js":"2","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\LoginPage\\index.js":"3","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Footer\\index.js":"4","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\RegisterPage\\index.js":"5","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\HomePage\\index.js":"6","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\store.js":"7","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\index.js":"8","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\authReducer.js":"9","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\authTypes.js":"10","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\authActions.js":"11","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\notifyReducer.js":"12","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\notifyTypes.js":"13","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\utils\\fetchData.js":"14","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Notify\\index.js":"15","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Loading\\Loading.js":"16","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Notify\\News\\index.js":"17","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\utils\\validForm.js":"18","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\PageNotFound\\PageNotFound.js":"19","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Header\\index.js":"20","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Header\\Menu\\index.js":"21","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\ProfileIcon\\index.js":"22","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\InputSearch\\index.js":"23","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\UserCard\\index.js":"24","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\profileReducer.js":"25","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\profileTypes.js":"26","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\ProfilePage\\index.js":"27","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\DiscoverPage\\index.js":"28","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\MessagePage\\index.js":"29","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\customHook\\WithAuth.js":"30","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\customHook\\PrivateRoute.js":"31","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\Infos\\index.js":"32","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\Posts\\index.js":"33","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\profileActions.js":"34","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\EditPage\\index.js":"35","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\EditActions\\index.js":"36","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\utils\\imageUpload.js":"37","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\FollowBtn\\index.js":"38","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\ChangePasswordPage\\index.js":"39","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\globalTypes.js":"40","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\Followers\\index.js":"41","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\Following\\index.js":"42","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Status\\index.js":"43","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\statusReducer.js":"44","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\statusTypes.js":"45","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Status\\StatusModal\\index.js":"46","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\postActions.js":"47","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\postTypes.js":"48","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\postReducer.js":"49","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostCards\\CardFooter\\index.js":"50","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostCards\\CardHeader\\index.js":"51","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostCards\\CardBody\\index.js":"52","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Carousels\\index.js":"53","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostCards\\CardFooter\\CardActions\\index.js":"54","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostCards\\CardFooter\\CardComments\\index.js":"55","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\LikeButton\\index.js":"56","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\modalReducer.js":"57","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\modalTypes.js":"58","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\commentActions.js":"59","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Comments\\index.js":"60","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Comments\\InputComment\\index.js":"61","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Comments\\CommentDisplay\\index.js":"62","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Comments\\CommentCard\\index.js":"63","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Comments\\CommentMenu\\index.js":"64","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\PostProfiles\\index.js":"65","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostProfile\\PostThumb\\index.js":"66","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\PostDetails\\index.js":"67","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\detailPostReducer.js":"68","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\discoverReducer.js":"69","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\discoverTypes.js":"70","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\discoverActions.js":"71","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\LoadMoreBtn\\index.js":"72","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\utils\\config.js":"73","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\RightSideBar\\index.js":"74","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\suggestionsReducer.js":"75","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\suggestionTypes.js":"76","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\suggestionActions.js":"77","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\ExploreAll\\index.js":"78","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\SavedPost\\index.js":"79","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\socketReducer.js":"80","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\socketTypes.js":"81","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\socketClient.js":"82","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\newsActions.js":"83","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\newsReducer.js":"84","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\newTypes.js":"85","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Header\\Notifications\\index.js":"86","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\LeftSide\\index.js":"87","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\RightSide\\index.js":"88","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\messageActions.js":"89","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\messageReducer.js":"90","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\messageTypes.js":"91","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\MessageUser\\index.js":"92","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\RightSide\\MsgDisplay\\index.js":"93","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Icons\\index.js":"94","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\utils\\mediaShow.js":"95","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\onlineReducer.js":"96","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\PostDetails\\PostList\\index.js":"97","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\PostDetails\\PostActions\\index.js":"98","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\inputReducer.js":"99","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\callReducer.js":"100","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\callTypes.js":"101","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\CallModal\\index.js":"102","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\peerReducer.js":"103","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\peerTypes.js":"104","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Times\\index.js":"105","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\PostDetails\\PostRelated\\index.js":"106","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostModal\\index.js":"107","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\postModalReducer.js":"108","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\postModalTypes.js":"109","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\FogotPasswordPage\\index.js":"110","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\ResetPasswordPage\\index.js":"111","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\likedUsersReducer.js":"112","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\likedUsersTypes.js":"113","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\LikedUsers\\index.js":"114"},{"size":391,"mtime":1633970343535,"results":"115","hashOfConfig":"116"},{"size":3834,"mtime":1634115281898,"results":"117","hashOfConfig":"116"},{"size":4810,"mtime":1633968386202,"results":"118","hashOfConfig":"116"},{"size":5297,"mtime":1631693930621,"results":"119","hashOfConfig":"116"},{"size":6944,"mtime":1631700542810,"results":"120","hashOfConfig":"116"},{"size":1576,"mtime":1634121956690,"results":"121","hashOfConfig":"116"},{"size":478,"mtime":1631692095586,"results":"122","hashOfConfig":"116"},{"size":1017,"mtime":1634111434838,"results":"123","hashOfConfig":"116"},{"size":295,"mtime":1631692363621,"results":"124","hashOfConfig":"116"},{"size":94,"mtime":1633427444113,"results":"125","hashOfConfig":"116"},{"size":3709,"mtime":1633972915902,"results":"126","hashOfConfig":"116"},{"size":330,"mtime":1631694662389,"results":"127","hashOfConfig":"116"},{"size":56,"mtime":1631697351315,"results":"128","hashOfConfig":"116"},{"size":911,"mtime":1632044217705,"results":"129","hashOfConfig":"116"},{"size":1047,"mtime":1631729961312,"results":"130","hashOfConfig":"116"},{"size":497,"mtime":1631694474437,"results":"131","hashOfConfig":"116"},{"size":646,"mtime":1634120425333,"results":"132","hashOfConfig":"116"},{"size":1104,"mtime":1631698479075,"results":"133","hashOfConfig":"116"},{"size":16884,"mtime":1606888631000,"results":"134","hashOfConfig":"116"},{"size":699,"mtime":1632646616320,"results":"135","hashOfConfig":"116"},{"size":3700,"mtime":1633333662706,"results":"136","hashOfConfig":"116"},{"size":293,"mtime":1632293905155,"results":"137","hashOfConfig":"116"},{"size":2582,"mtime":1632991471836,"results":"138","hashOfConfig":"116"},{"size":1357,"mtime":1633847035107,"results":"139","hashOfConfig":"116"},{"size":1453,"mtime":1632297408655,"results":"140","hashOfConfig":"116"},{"size":249,"mtime":1632297283709,"results":"141","hashOfConfig":"116"},{"size":2469,"mtime":1634110740803,"results":"142","hashOfConfig":"116"},{"size":3037,"mtime":1634113890614,"results":"143","hashOfConfig":"116"},{"size":684,"mtime":1632993297913,"results":"144","hashOfConfig":"116"},{"size":389,"mtime":1631766599283,"results":"145","hashOfConfig":"146"},{"size":281,"mtime":1631769470439,"results":"147","hashOfConfig":"116"},{"size":3962,"mtime":1634044774800,"results":"148","hashOfConfig":"116"},{"size":2663,"mtime":1634111035373,"results":"149","hashOfConfig":"116"},{"size":7307,"mtime":1634046934792,"results":"150","hashOfConfig":"116"},{"size":7737,"mtime":1634190294457,"results":"151","hashOfConfig":"116"},{"size":919,"mtime":1631808068275,"results":"152","hashOfConfig":"116"},{"size":964,"mtime":1633007636534,"results":"153","hashOfConfig":"116"},{"size":1777,"mtime":1632494849211,"results":"154","hashOfConfig":"116"},{"size":4576,"mtime":1634048244422,"results":"155","hashOfConfig":"116"},{"size":275,"mtime":1631900514322,"results":"156","hashOfConfig":"116"},{"size":1210,"mtime":1634120688063,"results":"157","hashOfConfig":"116"},{"size":1163,"mtime":1634121805920,"results":"158","hashOfConfig":"116"},{"size":731,"mtime":1631950313452,"results":"159","hashOfConfig":"116"},{"size":272,"mtime":1633510366380,"results":"160","hashOfConfig":"116"},{"size":81,"mtime":1633447161001,"results":"161","hashOfConfig":"116"},{"size":6545,"mtime":1633955011667,"results":"162","hashOfConfig":"116"},{"size":8306,"mtime":1634046906184,"results":"163","hashOfConfig":"116"},{"size":299,"mtime":1633849930309,"results":"164","hashOfConfig":"116"},{"size":1235,"mtime":1633853750686,"results":"165","hashOfConfig":"116"},{"size":418,"mtime":1633938061649,"results":"166","hashOfConfig":"116"},{"size":4056,"mtime":1633940017705,"results":"167","hashOfConfig":"116"},{"size":501,"mtime":1632040731650,"results":"168","hashOfConfig":"116"},{"size":862,"mtime":1633009787305,"results":"169","hashOfConfig":"116"},{"size":2644,"mtime":1634111304515,"results":"170","hashOfConfig":"116"},{"size":1956,"mtime":1634111591732,"results":"171","hashOfConfig":"116"},{"size":503,"mtime":1632071877633,"results":"172","hashOfConfig":"116"},{"size":304,"mtime":1633938385721,"results":"173","hashOfConfig":"116"},{"size":53,"mtime":1633533354658,"results":"174","hashOfConfig":"116"},{"size":5309,"mtime":1633956167116,"results":"175","hashOfConfig":"116"},{"size":1997,"mtime":1633938651249,"results":"176","hashOfConfig":"116"},{"size":2678,"mtime":1633955763703,"results":"177","hashOfConfig":"116"},{"size":1476,"mtime":1632226413649,"results":"178","hashOfConfig":"116"},{"size":6266,"mtime":1633956156042,"results":"179","hashOfConfig":"116"},{"size":2463,"mtime":1633956033970,"results":"180","hashOfConfig":"116"},{"size":2604,"mtime":1634044167658,"results":"181","hashOfConfig":"116"},{"size":980,"mtime":1634047936661,"results":"182","hashOfConfig":"116"},{"size":2033,"mtime":1634114420060,"results":"183","hashOfConfig":"116"},{"size":436,"mtime":1632223944913,"results":"184","hashOfConfig":"116"},{"size":829,"mtime":1634113610039,"results":"185","hashOfConfig":"116"},{"size":145,"mtime":1632292056984,"results":"186","hashOfConfig":"116"},{"size":1201,"mtime":1634113840407,"results":"187","hashOfConfig":"116"},{"size":392,"mtime":1632475952371,"results":"188","hashOfConfig":"116"},{"size":50,"mtime":1632303537434,"results":"189","hashOfConfig":"116"},{"size":1906,"mtime":1634048771200,"results":"190","hashOfConfig":"116"},{"size":796,"mtime":1632326016269,"results":"191","hashOfConfig":"116"},{"size":155,"mtime":1632325979963,"results":"192","hashOfConfig":"116"},{"size":777,"mtime":1634048740440,"results":"193","hashOfConfig":"116"},{"size":2539,"mtime":1634048794439,"results":"194","hashOfConfig":"116"},{"size":2960,"mtime":1632476750777,"results":"195","hashOfConfig":"116"},{"size":269,"mtime":1632477519445,"results":"196","hashOfConfig":"116"},{"size":56,"mtime":1632477455947,"results":"197","hashOfConfig":"116"},{"size":5144,"mtime":1633789087534,"results":"198","hashOfConfig":"116"},{"size":2402,"mtime":1632820679559,"results":"199","hashOfConfig":"116"},{"size":1042,"mtime":1632820601554,"results":"200","hashOfConfig":"116"},{"size":217,"mtime":1632820540914,"results":"201","hashOfConfig":"116"},{"size":3616,"mtime":1634120511326,"results":"202","hashOfConfig":"116"},{"size":4684,"mtime":1633440542512,"results":"203","hashOfConfig":"116"},{"size":10289,"mtime":1633847736062,"results":"204","hashOfConfig":"116"},{"size":4024,"mtime":1633847514213,"results":"205","hashOfConfig":"116"},{"size":2631,"mtime":1633805812820,"results":"206","hashOfConfig":"116"},{"size":342,"mtime":1633439755162,"results":"207","hashOfConfig":"116"},{"size":551,"mtime":1632993147680,"results":"208","hashOfConfig":"116"},{"size":2468,"mtime":1634110471185,"results":"209","hashOfConfig":"116"},{"size":1077,"mtime":1633010167058,"results":"210","hashOfConfig":"116"},{"size":448,"mtime":1633100382348,"results":"211","hashOfConfig":"116"},{"size":368,"mtime":1633427549487,"results":"212","hashOfConfig":"116"},{"size":821,"mtime":1633445494991,"results":"213","hashOfConfig":"116"},{"size":1132,"mtime":1634114535381,"results":"214","hashOfConfig":"116"},{"size":272,"mtime":1633449002838,"results":"215","hashOfConfig":"116"},{"size":259,"mtime":1633533439259,"results":"216","hashOfConfig":"116"},{"size":50,"mtime":1633533428510,"results":"217","hashOfConfig":"116"},{"size":8136,"mtime":1634115017113,"results":"218","hashOfConfig":"116"},{"size":259,"mtime":1633591088265,"results":"219","hashOfConfig":"116"},{"size":50,"mtime":1633591060052,"results":"220","hashOfConfig":"116"},{"size":724,"mtime":1633847385380,"results":"221","hashOfConfig":"116"},{"size":1354,"mtime":1634047082599,"results":"222","hashOfConfig":"116"},{"size":1357,"mtime":1634114566757,"results":"223","hashOfConfig":"116"},{"size":326,"mtime":1633938347762,"results":"224","hashOfConfig":"116"},{"size":61,"mtime":1633938233089,"results":"225","hashOfConfig":"116"},{"size":3229,"mtime":1634035019399,"results":"226","hashOfConfig":"116"},{"size":3847,"mtime":1634035526372,"results":"227","hashOfConfig":"116"},{"size":295,"mtime":1634111420671,"results":"228","hashOfConfig":"116"},{"size":63,"mtime":1634111392049,"results":"229","hashOfConfig":"116"},{"size":1461,"mtime":1634112596136,"results":"230","hashOfConfig":"116"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pkoa6x",{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},"gspb7z",{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478"},"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\App.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\LoginPage\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Footer\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\RegisterPage\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\HomePage\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\store.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\authReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\authTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\authActions.js",["479"],"import axios from \"axios\";\r\nimport { postDataAPI } from \"../../utils/fetchData\";\r\nimport { validForm } from \"../../utils/validForm\";\r\nimport { AUTH_TYPES } from \"../types/authTypes\";\r\nimport { NOTIFY_TYPES } from \"../types/notifyTypes\";\r\n\r\nexport const loginAction = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: NOTIFY_TYPES.NOTIFY, payload: { loading: true } });\r\n      const res = await postDataAPI(\"login\", data);\r\n      dispatch({\r\n        type: AUTH_TYPES.AUTH,\r\n        payload: { token: res.data.accessToken, user: res.data.user },\r\n      });\r\n      localStorage.setItem(\"firstLogin\", true);\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { success: res.data.msg },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const refreshToken = () => {\r\n  return async (dispatch) => {\r\n    const firstLogin = localStorage.getItem(\"firstLogin\");\r\n    if (firstLogin) {\r\n      dispatch({ type: NOTIFY_TYPES.NOTIFY, payload: { loading: true } });\r\n      try {\r\n        const res = await postDataAPI(\"refresh_token\");\r\n        dispatch({\r\n          type: AUTH_TYPES.AUTH,\r\n          payload: { token: res.data.accessToken, user: res.data.user },\r\n        });\r\n        dispatch({ type: NOTIFY_TYPES.NOTIFY, payload: {} });\r\n      } catch (err) {\r\n        dispatch({\r\n          type: NOTIFY_TYPES.NOTIFY,\r\n          payload: { error: err.response.data.msg },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const registerAction = ({ userData, history }) => {\r\n  return async (dispatch) => {\r\n    const check = validForm(userData);\r\n    if (check.errLength > 0)\r\n      return dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: {\r\n          error:\r\n            check.errMsg.email ||\r\n            check.errMsg.fullname ||\r\n            check.errMsg.password ||\r\n            check.errMsg.username,\r\n        },\r\n      });\r\n    try {\r\n      dispatch({ type: NOTIFY_TYPES.NOTIFY, payload: { loading: true } });\r\n      const res = await postDataAPI(\"register\", userData);\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { success: res.data.msg },\r\n      });\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logoutAction = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      localStorage.removeItem(\"firstLogin\");\r\n\r\n      await postDataAPI(\"logout\");\r\n      window.location.href = \"/\";\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const forgotPasswordAction = (email) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await postDataAPI(\"forgot\", { email });\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { success: res.data.msg },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetPasswordAction = ({ password, token, history }) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await postDataAPI(\"resetPassword\", { password }, token);\r\n\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { success: res.data.msg },\r\n      });\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\notifyReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\notifyTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\utils\\fetchData.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Notify\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Loading\\Loading.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Notify\\News\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\utils\\validForm.js",["480","481","482","483"],"export const validForm = ({ email, fullname, username, password }) => {\r\n  const err = {};\r\n  if (!email) {\r\n    err.email = \"Please add your Email.\";\r\n  } else if (!validateEmail(email)) {\r\n    err.email = \"Email format is incorrect.\";\r\n  }\r\n\r\n  if (!fullname) {\r\n    err.fullname = \"Please add your full name.\";\r\n  } else if (fullname.length > 25) {\r\n    err.fullname = \"Full name is up to 25 characters.\";\r\n  }\r\n\r\n  if (!username) {\r\n    err.username = \"Please add your user name.\";\r\n  } else if (username.toLowerCase().replace(/ /g, \"\").length > 25) {\r\n    err.username = \"User name is up to 25 characters.\";\r\n  }\r\n\r\n  if (!password) {\r\n    err.password = \"Please add your Password.\";\r\n  } else if (password.length < 6) {\r\n    err.password = \"Password must be at least 6 characters.\";\r\n  }\r\n\r\n  return { errMsg: err, errLength: Object.keys(err).length };\r\n};\r\n\r\nfunction validateEmail(email) {\r\n  const re =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(email);\r\n}\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\PageNotFound\\PageNotFound.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Header\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Header\\Menu\\index.js",["484"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutAction } from \"../../../redux/actions/authActions\";\r\nimport ProfileIcon from \"../../ProfileIcon\";\r\nimport Notifications from \"../Notifications\";\r\nimport \"./index.scss\";\r\nconst Menu = () => {\r\n  const navLinks = [\r\n    {\r\n      label: \"Home\",\r\n      icon: \"home\",\r\n      path: \"/\",\r\n    },\r\n    {\r\n      label: \"Message\",\r\n      icon: \"near_me\",\r\n      path: \"/message\",\r\n    },\r\n    {\r\n      label: \"Discover\",\r\n      icon: \"explore\",\r\n      path: \"/discover\",\r\n    },\r\n  ];\r\n\r\n  const { auth, news } = useSelector((state) => state);\r\n  const [isShowNoti, setIsShowNoti] = useState(false);\r\n  const [isShowActions, setIsShowActions] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { pathname } = useLocation();\r\n  const isActive = (pn) => {\r\n    if (pn === pathname) return \"active\";\r\n  };\r\n\r\n  const handleShowNoti = () => {\r\n    if (isShowActions) setIsShowActions(false);\r\n    setIsShowNoti(!isShowNoti);\r\n  };\r\n\r\n  const handleShowActions = () => {\r\n    if (isShowNoti) setIsShowNoti(false);\r\n    setIsShowActions(!isShowActions);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"menu-container\">\r\n        <ul className=\"menu-navbar\">\r\n          {navLinks.map((link, index) => (\r\n            <li\r\n              className={`menu-navbar-items ${isActive(link.path)}`}\r\n              key={index}\r\n            >\r\n              <Link className=\"menu-navbar-link\" to={link.path}>\r\n                <span className=\"material-icons menu-navbar-icon\">\r\n                  {link.icon}\r\n                </span>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n\r\n          <li\r\n            className={`menu-navbar-items menu-navbar-dropdown menu-navbar-notifies ${\r\n              isShowNoti ? \"show\" : \"\"\r\n            }`}\r\n            onClick={handleShowNoti}\r\n            style={{ opacity: 1 }}\r\n          >\r\n            <span className=\"material-icons menu-navbar-icon\">favorite</span>\r\n            <div className={`dropdown-notifies ${isShowNoti ? \"show\" : \"\"}`}>\r\n              <Notifications />\r\n            </div>\r\n          </li>\r\n\r\n          <li\r\n            className={`menu-navbar-items menu-navbar-dropdown menu-navbar-profile ${\r\n              isShowActions ? \"show\" : \"\"\r\n            }`}\r\n            onClick={handleShowActions}\r\n            style={{ opacity: 1 }}\r\n          >\r\n            <span id=\"navbarDropdown\">\r\n              <ProfileIcon src={auth.user.avatar} size=\"medium-avatar\" />\r\n            </span>\r\n            <div className={`dropdown-menu ${isShowActions ? \"show\" : \"\"}`}>\r\n              <div className=\"dropdown-menu-actions\">\r\n                <Link\r\n                  className=\"dropdown-menu-items\"\r\n                  to={`/profile/${auth.user._id}`}\r\n                >\r\n                  <p className=\"dropdown-menu-profile\">Profile</p>\r\n                </Link>\r\n                <Link className=\"dropdown-menu-items\" to=\"/saved\">\r\n                  <p className=\"dropdown-menu-saved\">Saved</p>\r\n                </Link>\r\n                <Link className=\"dropdown-menu-items\" to={`/edit`}>\r\n                  <p className=\"dropdown-menu-settings\">Settings</p>\r\n                </Link>\r\n                <Link\r\n                  className=\"dropdown-menu-items\"\r\n                  to=\"/\"\r\n                  onClick={() => dispatch(logoutAction())}\r\n                >\r\n                  Logout\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\ProfileIcon\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\InputSearch\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\UserCard\\index.js",["485"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileIcon from \"../ProfileIcon\";\r\nimport \"./index.scss\";\r\nconst UserCard = ({\r\n  children,\r\n  key,\r\n  user,\r\n  handleClose,\r\n  setShowFollowers,\r\n  setShowFollowing,\r\n  underline,\r\n  msg,\r\n}) => {\r\n  const handleCloseAll = () => {\r\n    if (handleClose) handleClose();\r\n    if (setShowFollowers) setShowFollowers(false);\r\n    if (setShowFollowing) setShowFollowing(false);\r\n  };\r\n\r\n  const showMsg = (user) => {\r\n    return (\r\n      <>\r\n        \r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={msg ? \"user-container-msg\" : \"user-container\"}>\r\n        <div className=\"user-details\">\r\n          <Link\r\n            to={`/profile/${user._id}`}\r\n            onClick={handleCloseAll}\r\n            className=\"user-profile\"\r\n          >\r\n            <ProfileIcon src={user.avatar} size=\"big-avatar\" />\r\n            <div\r\n              className={`user-content ${underline ? \"underline\" : \"\"}`}\r\n              style={{ transform: \"translateY(-3px)\" }}\r\n            >\r\n              <span>{user.username}</span>\r\n              <small>\r\n                {user.text || user.media ? user.text : user.fullname}\r\n              </small>\r\n            </div>\r\n          </Link>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\profileReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\profileTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\ProfilePage\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\DiscoverPage\\index.js",["486","487"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getDiscoverPosts,\r\n  getMorePostDiscover,\r\n} from \"../../redux/actions/discoverActions\";\r\nimport LoadingIcon from \"../../assets/images/loading.gif\";\r\nimport \"./index.scss\";\r\nimport PostThumb from \"../../components/PostProfile/PostThumb\";\r\nimport LoadMoreBtn from \"../../components/LoadMoreBtn\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { DISCOVER_TYPES } from \"../../redux/types/discoverTypes\";\r\nconst DiscoverPage = () => {\r\n  const { auth, discover } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [load, setLoad] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const pageEnd = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!discover.firstLoad) {\r\n      dispatch(getDiscoverPosts(auth.token));\r\n    }\r\n  }, [dispatch, auth.token, discover.firstLoad]);\r\n\r\n  const handleLoadMore = async () => {\r\n    setLoad(true);\r\n    const res = await getDataAPI(\r\n      `post_discover?num=${discover.page * 9}`,\r\n      auth.token\r\n    );\r\n    dispatch({\r\n      type: DISCOVER_TYPES.UPDATE_POST,\r\n      payload: res.data,\r\n    });\r\n    setLoad(false);\r\n  };\r\n\r\n  //Loadmore\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage((p) => p + 1);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n\r\n    observer.observe(pageEnd.current);\r\n  }, [setPage]);\r\n\r\n  useEffect(() => {\r\n    if (discover.result >= 9 * (page - 1) && page > 1) {\r\n      setLoad(true);\r\n      dispatch(getMorePostDiscover({ page, auth }));\r\n      setLoad(false);\r\n    } else {\r\n      return;\r\n    }\r\n  }, [auth, dispatch, discover.result, page]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"discover-page\">\r\n        <div className=\"discover-page-container\">\r\n          {discover.loading ? (\r\n            <>\r\n              <div className=\"discover-page-loading\">\r\n                <img src={LoadingIcon} alt=\"Logo\" />\r\n              </div>{\" \"}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"discover-page-details\">\r\n                <PostThumb posts={discover.posts} result={discover.result} />\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {load && (\r\n            <div className=\"discover-page-loading\">\r\n              <img src={LoadingIcon} alt=\"Logo\" />\r\n            </div>\r\n          )}\r\n          {/* <div className=\"discover-page-btn\">\r\n            {!discover.loading && (\r\n              <LoadMoreBtn\r\n                result={discover.result}\r\n                page={discover.page}\r\n                load={load}\r\n                handleLoadMore={handleLoadMore}\r\n              />\r\n            )}\r\n          </div> */}\r\n          <button className=\"discover-page-loadMore\" ref={pageEnd}>\r\n            Loadmore\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiscoverPage;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\MessagePage\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\customHook\\WithAuth.js",[],["488","489"],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\customHook\\PrivateRoute.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\Infos\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\Posts\\index.js",["490","491"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LoadMoreBtn from \"../../components/LoadMoreBtn\";\r\nimport CardBody from \"../../components/PostCards/CardBody\";\r\nimport CardFooter from \"../../components/PostCards/CardFooter\";\r\nimport CardHeader from \"../../components/PostCards/CardHeader\";\r\nimport LoadingIcon from \"../../assets/images/loading.gif\";\r\nimport \"./index.scss\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { POST_TYPES } from \"../../redux/types/postTypes\";\r\nimport { getMorePosts } from \"../../redux/actions/postActions\";\r\nconst Posts = () => {\r\n  const { homePosts, auth } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [load, setLoad] = useState(false);\r\n\r\n  const pageEnd = useRef();\r\n  const [page, setPage] = useState(1);\r\n\r\n  const handleLoadMore = async () => {\r\n    setLoad(true);\r\n    const res = await getDataAPI(\r\n      `posts?limit=${homePosts.page * 9}`,\r\n      auth.token\r\n    );\r\n    dispatch({\r\n      type: POST_TYPES.GET_POSTS,\r\n      payload: { ...res.data, page: homePosts.page + 1 },\r\n    });\r\n    setLoad(false);\r\n  };\r\n\r\n  //Load more\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage((p) => p + 1);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n\r\n    observer.observe(pageEnd.current);\r\n  }, [setPage]);\r\n\r\n  useEffect(() => {\r\n    if (homePosts.result >= 9 * (page - 1) && page > 1) {\r\n      setLoad(true);\r\n      dispatch(getMorePosts({ auth, page }));\r\n      setLoad(false);\r\n    } else {\r\n      return;\r\n    }\r\n  }, [auth, dispatch, homePosts.result, page]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"posts-container\">\r\n        {homePosts.posts.map((post, index) => (\r\n          <div key={post._id} className=\"posts-content\">\r\n            <CardHeader post={post} handleCheck={true} />\r\n            <CardBody post={post} />\r\n            <CardFooter post={post} handleCheck={true} />\r\n          </div>\r\n        ))}\r\n\r\n        {load && (\r\n          <div className=\"posts-loading\">\r\n            <img src={LoadingIcon} alt=\"Logo\" />\r\n          </div>\r\n        )}\r\n\r\n        {/* <div className=\"discover-page-btn\">\r\n          <LoadMoreBtn\r\n            result={homePosts.result}\r\n            page={homePosts.page}\r\n            load={load}\r\n            handleLoadMore={handleLoadMore}\r\n          />\r\n        </div> */}\r\n        <button className=\"posts-loadMore\" ref={pageEnd}>\r\n          LoadMore\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\profileActions.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\EditPage\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\EditActions\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\utils\\imageUpload.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\FollowBtn\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\ChangePasswordPage\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\globalTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\Followers\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\Following\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Status\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\statusReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\statusTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Status\\StatusModal\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\postActions.js",["492"],"import {\r\n  deleteDataAPI,\r\n  getDataAPI,\r\n  patchDataAPI,\r\n  postDataAPI,\r\n} from \"../../utils/fetchData\";\r\nimport { imageUpload } from \"../../utils/imageUpload\";\r\nimport { AUTH_TYPES } from \"../types/authTypes\";\r\nimport { deleteData, editData } from \"../types/globalTypes\";\r\nimport { NOTIFY_TYPES } from \"../types/notifyTypes\";\r\nimport { POST_TYPES } from \"../types/postTypes\";\r\nimport { createNewsNotify, removeNewsNotify } from \"./newsActions\";\r\n\r\nexport const createPostAction = ({ content, images, auth, socket }) => {\r\n  return async (dispatch) => {\r\n    let media = [];\r\n    try {\r\n      dispatch({ type: NOTIFY_TYPES.NOTIFY, payload: { loading: true } });\r\n      if (images.length > 0) media = await imageUpload(images);\r\n\r\n      const res = await postDataAPI(\r\n        \"posts\",\r\n        { content, images: media },\r\n        auth.token\r\n      );\r\n      dispatch({\r\n        type: POST_TYPES.CREATE_POST,\r\n        payload: { ...res.data.newPost, user: auth.user },\r\n      });\r\n\r\n      dispatch({ type: NOTIFY_TYPES.NOTIFY, payload: { loading: false } });\r\n\r\n      //Notify\r\n\r\n      const msg = {\r\n        id: res.data.newPost._id,\r\n        text: \"Added a new post.\",\r\n        recipients: res.data.newPost.user.followers,\r\n        url: `/post/${res.data.newPost._id}`,\r\n        content,\r\n        image: media[0].url,\r\n      };\r\n\r\n      dispatch(createNewsNotify({ msg, auth, socket }));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updatePostAction = ({ content, images, auth, status }) => {\r\n  return async (dispatch) => {\r\n    let media = [];\r\n    const imgNewUrl = images.filter((img) => !img.url);\r\n    const imgOldUrl = images.filter((img) => img.url);\r\n\r\n    if (\r\n      status.content === content &&\r\n      imgNewUrl.length === 0 &&\r\n      imgOldUrl.length === status.images.length\r\n    )\r\n      return;\r\n\r\n    try {\r\n      dispatch({ type: NOTIFY_TYPES.NOTIFY, payload: { loading: true } });\r\n      if (imgNewUrl.length > 0) media = await imageUpload(imgNewUrl);\r\n\r\n      const res = await patchDataAPI(\r\n        `post/${status._id}`,\r\n        {\r\n          content,\r\n          images: [...imgOldUrl, ...media],\r\n        },\r\n        auth.token\r\n      );\r\n\r\n      dispatch({\r\n        type: POST_TYPES.UPDATE_POST,\r\n        payload: res.data.newPost,\r\n      });\r\n\r\n      dispatch({ type: NOTIFY_TYPES.NOTIFY, payload: { loading: false } });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getPosts = (token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: POST_TYPES.LOADING_POST, payload: true });\r\n      const res = await getDataAPI(\"posts\", token);\r\n      dispatch({\r\n        type: POST_TYPES.GET_POSTS,\r\n        payload: { ...res.data, page: 2 },\r\n      });\r\n      dispatch({ type: POST_TYPES.LOADING_POST, payload: false });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getMorePosts = ({ auth, page }) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await getDataAPI(`posts?limit=${page * 9}`, auth.token);\r\n      dispatch({\r\n        type: POST_TYPES.GET_POSTS,\r\n        payload: { ...res.data },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const likePostAction = ({ post, auth, socket }) => {\r\n  return async (dispatch) => {\r\n    const newPost = { ...post, likes: [...post.likes, auth.user] };\r\n    dispatch({\r\n      type: POST_TYPES.UPDATE_POST,\r\n      payload: newPost,\r\n    });\r\n\r\n    socket.emit(\"likePost\", newPost);\r\n    try {\r\n      const res = await patchDataAPI(`post/${post._id}/like`, null, auth.token);\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: res.data.msg,\r\n      });\r\n\r\n      //Notify\r\n\r\n      const msg = {\r\n        id: auth.user._id,\r\n        text: \"liked your post.\",\r\n        recipients: [post.user._id],\r\n        url: `/post/${post._id}`,\r\n        content: post.content,\r\n        image: post.images[0].url,\r\n      };\r\n\r\n      dispatch(createNewsNotify({ msg, auth, socket }));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const unLikePostAction = ({ post, auth, socket }) => {\r\n  return async (dispatch) => {\r\n    const newPost = {\r\n      ...post,\r\n      likes: post.likes.filter((like) => like._id !== auth.user._id),\r\n    };\r\n\r\n    dispatch({\r\n      type: POST_TYPES.UPDATE_POST,\r\n      payload: newPost,\r\n    });\r\n    socket.emit(\"unLikePost\", newPost);\r\n\r\n    try {\r\n      const res = await patchDataAPI(\r\n        `post/${post._id}/unlike`,\r\n        null,\r\n        auth.token\r\n      );\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: res.data.msg,\r\n      });\r\n\r\n      //Notify\r\n\r\n      const msg = {\r\n        id: auth.user._id,\r\n        text: \"liked your post.\",\r\n        recipients: [post.user._id],\r\n        url: `/post/${post._id}`,\r\n      };\r\n\r\n      dispatch(removeNewsNotify({ msg, auth, socket }));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getPostDetail = ({ detailPost, id, auth }) => {\r\n  return async (dispatch) => {\r\n    if (detailPost.every((post) => post._id !== id)) {\r\n      try {\r\n        const res = await getDataAPI(`post/${id}`, auth.token);\r\n        dispatch({\r\n          type: POST_TYPES.GET_POST,\r\n          payload: res.data.post,\r\n        });\r\n      } catch (err) {\r\n        dispatch({\r\n          type: NOTIFY_TYPES.NOTIFY,\r\n          payload: { error: err.response.data.msg },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const deletePostAction = ({ post, auth, socket }) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: POST_TYPES.DELETE_POST,\r\n      payload: post,\r\n    });\r\n\r\n    try {\r\n      const res = await deleteDataAPI(`post/${post._id}`, auth.token);\r\n\r\n      //Notify\r\n\r\n      const msg = {\r\n        id: post._id,\r\n        text: \"Added a new post.\",\r\n        recipients: res.data.newPost.user.followers,\r\n        url: `/post/${post._id}`,\r\n      };\r\n\r\n      dispatch(removeNewsNotify({ msg, auth, socket }));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const savePostAction = ({ post, auth }) => {\r\n  return async (dispatch) => {\r\n    const newUser = { ...auth.user, saved: [...auth.user.saved, post._id] };\r\n    dispatch({\r\n      type: AUTH_TYPES.AUTH,\r\n      payload: { ...auth, user: newUser },\r\n    });\r\n\r\n    try {\r\n      await patchDataAPI(`savePost/${post._id}`, null, auth.token);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const unSavePostAction = ({ post, auth }) => {\r\n  return async (dispatch) => {\r\n    const newUser = {\r\n      ...auth.user,\r\n      saved: auth.user.saved.filter((id) => id !== post._id),\r\n    };\r\n\r\n    dispatch({\r\n      type: AUTH_TYPES.AUTH,\r\n      payload: { ...auth, user: newUser },\r\n    });\r\n\r\n    try {\r\n      await patchDataAPI(`unSavePost/${post._id}`, null, auth.token);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getRelatedPostAction = ({ post, auth }) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await getDataAPI(\r\n        `user_posts/${post.user._id}?limit=7`,\r\n        auth.token\r\n      );\r\n      const relatedPost = deleteData(res.data.posts, post._id);\r\n      dispatch({\r\n        type: POST_TYPES.GET_RELATED_POSTS,\r\n        payload: relatedPost,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\postTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\postReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostCards\\CardFooter\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostCards\\CardHeader\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostCards\\CardBody\\index.js",["493","494"],"import React, { useState } from \"react\";\r\nimport Carousels from \"../../Carousels\";\r\nimport \"./index.scss\";\r\nconst CardBody = ({ post }) => {\r\n  const [readMore, setReadMore] = useState(false);\r\n  return (\r\n    <>\r\n      <div className=\"card-body\">\r\n        <div className=\"card-body-container\">\r\n          \r\n          {post.images.length > 0 && (\r\n            <Carousels images={post.images} id={post._id} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Carousels\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostCards\\CardFooter\\CardActions\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostCards\\CardFooter\\CardComments\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\LikeButton\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\modalReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\modalTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\commentActions.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Comments\\index.js",["495","496","497"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { POSTMODAL_TYPES } from \"../../redux/types/postModalTypes\";\r\nimport CommentDisplay from \"./CommentDisplay\";\r\nimport \"./index.scss\";\r\nconst Comments = ({ post, handleCheck }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [showComments, setShowComments] = useState([]);\r\n  const [replyComments, setReplyComments] = useState([]);\r\n  const [next, setNext] = useState(2);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const newCm = post.comments.filter((cm) => !cm.reply);\r\n    setComments(newCm);\r\n    setShowComments(newCm.slice(newCm.length - next));\r\n  }, [post.comments, next]);\r\n\r\n  useEffect(() => {\r\n    const newRep = post.comments.filter((cm) => cm.reply);\r\n    setReplyComments(newRep);\r\n  }, [post.comments]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"comment-container\">\r\n        {/* {comments.length - next > 0 ? (\r\n          <div className=\"comment-show\" onClick={() => setNext(next + 5)}>\r\n            See more comments...\r\n          </div>\r\n        ) : (\r\n          comments.length > 2 && (\r\n            <div className=\"comment-show\" onClick={() => setNext(2)}>\r\n              Hide comments...\r\n            </div>\r\n          )\r\n        )} */}\r\n        {comments.length > 0 && (\r\n          <p\r\n            className=\"comment-show\"\r\n            onClick={() =>\r\n              dispatch({ type: POSTMODAL_TYPES.ISMODAL, payload: post })\r\n            }\r\n          >\r\n            {`View ${comments.length} comments`}\r\n          </p>\r\n        )}\r\n\r\n        {comments.map((comment, index) => (\r\n          <CommentDisplay\r\n            handleCheck={handleCheck}\r\n            key={index}\r\n            comment={comment}\r\n            post={post}\r\n            replyCm={replyComments.filter((item) => item.reply === comment._id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Comments\\InputComment\\index.js",["498","499"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createCommentAction } from \"../../../redux/actions/commentActions\";\r\nimport { STATUS_TYPES } from \"../../../redux/types/statusTypes\";\r\nimport Icons from \"../../Icons\";\r\nimport \"./index.scss\";\r\nconst InputComment = ({ children, post, onReply, setOnReply }) => {\r\n  const { auth, socket, input, postModal } = useSelector((state) => state);\r\n  const [content, setContent] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!content.trim()) {\r\n      if (setOnReply) return setOnReply(false);\r\n      return;\r\n    }\r\n\r\n    const newComments = {\r\n      content,\r\n      likes: [],\r\n      user: auth.user,\r\n      createdAt: new Date().toISOString(),\r\n      reply: onReply && onReply.commentId,\r\n      tag: onReply && onReply.user,\r\n    };\r\n\r\n    let newComment = {\r\n      content,\r\n      likes: [],\r\n      user: auth.user,\r\n      createdAt: new Date().toISOString(),\r\n      reply: undefined,\r\n      tag: undefined,\r\n    };\r\n\r\n    if (input.isReply) {\r\n      newComment = {\r\n        ...newComment,\r\n        reply: input.commentId,\r\n        tag: input.user,\r\n      };\r\n      dispatch(\r\n        createCommentAction({ post, newComment, auth, socket, postModal })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        createCommentAction({ post, newComment, auth, socket, postModal })\r\n      );\r\n    }\r\n    dispatch({\r\n      type: STATUS_TYPES.ON_REPLY,\r\n      payload: false,\r\n    });\r\n    if (setOnReply) return setOnReply(false);\r\n\r\n    setContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-comments\">\r\n        <form className=\"input-form\" onSubmit={handleSubmit}>\r\n          {children}\r\n          {input.isReply && (\r\n            <Link to={`/profile/${input.user._id}`} className=\"input-tag\">\r\n              @{input.user.username}{\" \"}\r\n            </Link>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-comment\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            placeholder=\"Add a comment...\"\r\n          />\r\n\r\n          <div className=\"input-icons\">\r\n            <Icons setContent={setContent} content={content} />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"input-btn\"\r\n            disabled={content ? false : true}\r\n            style={{ opacity: content ? 1 : 0.5 }}\r\n          >\r\n            Post\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputComment;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Comments\\CommentDisplay\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Comments\\CommentCard\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Comments\\CommentMenu\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\PostProfiles\\index.js",["500","501"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport PostThumb from \"../../components/PostProfile/PostThumb\";\r\nimport LoadingIcon from \"../../assets/images/loading.gif\";\r\nimport \"./index.scss\";\r\nimport LoadMoreBtn from \"../../components/LoadMoreBtn\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { PROFILE_TYPES } from \"../../redux/types/profileTypes\";\r\nimport { getMoreUserPosts } from \"../../redux/actions/profileActions\";\r\nconst PostProfiles = ({ auth, id, dispatch, profile }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [result, setResult] = useState(9);\r\n  const [page, setPage] = useState(0);\r\n  const [load, setLoad] = useState(false);\r\n  const pageEnd = useRef();\r\n\r\n  useEffect(() => {\r\n    profile.posts.forEach((data) => {\r\n      if (data._id === id) {\r\n        setPosts(data.posts);\r\n        setResult(data.result);\r\n        setPage(data.page);\r\n      }\r\n    });\r\n  }, [profile.posts, id]);\r\n\r\n  const handleLoadMore = async () => {\r\n    setLoad(true);\r\n    const res = await getDataAPI(\r\n      `user_posts/${id}?limit=${page * 9}`,\r\n      auth.token\r\n    );\r\n    const newData = { ...res.data, page: page + 1, _id: id };\r\n    dispatch({\r\n      type: PROFILE_TYPES.UPDATE_POST,\r\n      payload: newData,\r\n    });\r\n    setLoad(false);\r\n  };\r\n\r\n  //Loadmore\r\n\r\n  // useEffect(() => {\r\n  //   const observer = new IntersectionObserver(\r\n  //     (entries) => {\r\n  //       if (entries[0].isIntersecting) {\r\n  //         setPage((p) => p + 1);\r\n  //       }\r\n  //     },\r\n  //     {\r\n  //       threshold: 0.1,\r\n  //     }\r\n  //   );\r\n\r\n  //   observer.observe(pageEnd.current);\r\n  // }, [setPage]);\r\n\r\n  // useEffect(() => {\r\n  //   if (result >= 9 * (page - 1) && page > 1) {\r\n  //     setLoad(true);\r\n  //     dispatch(getMoreUserPosts({ id, page, auth }));\r\n  //     setLoad(false);\r\n  //   } else {\r\n  //     return;\r\n  //   }\r\n  // }, [auth, dispatch, result, page, id]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post-profile-container\">\r\n        <PostThumb posts={posts} result={result} />\r\n        {load && (\r\n          <div className=\"post-profile-loading\">\r\n            <img src={LoadingIcon} alt=\"Logo\" />\r\n          </div>\r\n        )}\r\n        {/* <button className=\"post-profile-loadMore\" ref={pageEnd}>\r\n          Loadmore\r\n        </button> */}\r\n        <div className=\"post-profile-btn\">\r\n          <LoadMoreBtn\r\n            result={result}\r\n            page={page}\r\n            load={load}\r\n            handleLoadMore={handleLoadMore}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostProfiles;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostProfile\\PostThumb\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\PostDetails\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\detailPostReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\discoverReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\discoverTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\discoverActions.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\LoadMoreBtn\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\utils\\config.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\RightSideBar\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\suggestionsReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\suggestionTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\suggestionActions.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\ExploreAll\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\SavedPost\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\socketReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\socketTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\socketClient.js",["502"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AUTH_TYPES } from \"./redux/types/authTypes\";\r\nimport { MESSAGE_TYPES } from \"./redux/types/messageTypes\";\r\nimport { NEW_TYPES } from \"./redux/types/newTypes\";\r\nimport { POST_TYPES } from \"./redux/types/postTypes\";\r\nimport { PEER_TYPES } from \"./redux/types/peerTypes\";\r\nimport { CALL_TYPES } from \"./redux/types/callTypes\";\r\nimport { NOTIFY_TYPES } from \"./redux/types/notifyTypes\";\r\nconst SocketClient = () => {\r\n  const { auth, socket, online, call } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  //connect user to socket io\r\n  useEffect(() => {\r\n    socket.emit(\"joinUser\", auth.user);\r\n  }, [socket, auth.user]);\r\n\r\n  //   likes\r\n  useEffect(() => {\r\n    socket.on(\"likeToClient\", (newPost) => {\r\n      dispatch({\r\n        type: POST_TYPES.UPDATE_POST,\r\n        payload: newPost,\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"likeToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //  un likes\r\n  useEffect(() => {\r\n    socket.on(\"unLikeToClient\", (newPost) => {\r\n      dispatch({\r\n        type: POST_TYPES.UPDATE_POST,\r\n        payload: newPost,\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"unLikeToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //  Comments\r\n  useEffect(() => {\r\n    socket.on(\"createCommentToClient\", (newPost) => {\r\n      dispatch({\r\n        type: POST_TYPES.UPDATE_POST,\r\n        payload: newPost,\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"createCommentToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  // delete  Comments\r\n  useEffect(() => {\r\n    socket.on(\"deleteCommentToClient\", (newPost) => {\r\n      dispatch({\r\n        type: POST_TYPES.UPDATE_POST,\r\n        payload: newPost,\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"deleteCommentToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  // FOllow\r\n  useEffect(() => {\r\n    socket.on(\"followToClient\", (newUser) => {\r\n      dispatch({\r\n        type: AUTH_TYPES.AUTH,\r\n        payload: { ...auth, user: newUser },\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"followToClient\");\r\n  }, [socket, dispatch, auth]);\r\n\r\n  //UnFollow\r\n  useEffect(() => {\r\n    socket.on(\"unFollowToClient\", (newUser) => {\r\n      dispatch({\r\n        type: AUTH_TYPES.AUTH,\r\n        payload: { ...auth, user: newUser },\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"unFollowToClient\");\r\n  }, [socket, dispatch, auth]);\r\n\r\n  //create Notification\r\n  useEffect(() => {\r\n    socket.on(\"createNotifyToClient\", (msg) => {\r\n      dispatch({\r\n        type: NEW_TYPES.CREATE_NOTIFY,\r\n        payload: msg,\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"createNotifyToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //remove Notification\r\n  useEffect(() => {\r\n    socket.on(\"removeNotifyToClient\", (msg) => {\r\n      dispatch({\r\n        type: NEW_TYPES.REMOVE_NOTIFY,\r\n        payload: msg,\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"removeNotifyToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //Message\r\n  useEffect(() => {\r\n    socket.on(\"addMessageToClient\", (msg) => {\r\n      dispatch({\r\n        type: MESSAGE_TYPES.ADD_MESSAGE,\r\n        payload: msg,\r\n      });\r\n\r\n      dispatch({\r\n        type: MESSAGE_TYPES.ADD_USER,\r\n        payload: { ...msg.user, text: msg.text, media: msg.media },\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"addMessageToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  // Check user Online/Offline\r\n  // online\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"checkUserOnline\", auth.user);\r\n  }, [socket, auth.user]);\r\n\r\n  //Online to me\r\n  useEffect(() => {\r\n    socket.on(\"checkUserOnlineToMe\", (data) => {\r\n      data.forEach((item) => {\r\n        if (!online.includes(item.id)) {\r\n          dispatch({\r\n            type: AUTH_TYPES.ONLINE,\r\n            payload: item.id,\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"checkUserOnlineToMe\");\r\n  }, [socket, dispatch, online]);\r\n\r\n  // online to client\r\n\r\n  useEffect(() => {\r\n    socket.on(\"checkUserOnlineToClient\", (id) => {\r\n      if (!online.includes(id)) {\r\n        dispatch({\r\n          type: AUTH_TYPES.ONLINE,\r\n          payload: id,\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => socket.off(\"checkUserOnlineToClient\");\r\n  }, [socket, dispatch, online]);\r\n\r\n  // Offline\r\n\r\n  useEffect(() => {\r\n    socket.on(\"CheckUserOffline\", (id) => {\r\n      dispatch({\r\n        type: AUTH_TYPES.OFFLINE,\r\n        payload: id,\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"CheckUserOffline\");\r\n  }, [socket, dispatch, online]);\r\n\r\n  // Call User\r\n\r\n  useEffect(() => {\r\n    socket.on(\"callUserToClient\", (data) => {\r\n      dispatch({\r\n        type: CALL_TYPES.CALL,\r\n        payload: data,\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"callUserToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  // USER BUSY\r\n  useEffect(() => {\r\n    socket.on(\"userBusy\", (data) => {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: `${call.username} is busy` },\r\n      });\r\n    });\r\n\r\n    return () => socket.off(\"userBusy\");\r\n  }, [socket, dispatch, call]);\r\n\r\n  return <> </>;\r\n};\r\n\r\nexport default SocketClient;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\newsActions.js",["503"],"import {\r\n  deleteDataAPI,\r\n  getDataAPI,\r\n  patchDataAPI,\r\n  postDataAPI,\r\n} from \"../../utils/fetchData\";\r\nimport { NEW_TYPES } from \"../types/newTypes\";\r\nimport { NOTIFY_TYPES } from \"../types/notifyTypes\";\r\n\r\nexport const createNewsNotify = ({ msg, auth, socket }) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await postDataAPI(\"notify\", msg, auth.token);\r\n      socket.emit(\"createNotify\", {\r\n        ...res.data.notify,\r\n        user: {\r\n          username: auth.user.username,\r\n          avatar: auth.user.avatar,\r\n          _id: auth.user._id,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeNewsNotify = ({ msg, auth, socket }) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await deleteDataAPI(\r\n        `notify/${msg.id}?url=${msg.url}`,\r\n        auth.token\r\n      );\r\n\r\n      socket.emit(\"removeNotify\", msg);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getNewsNotifies = (token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await getDataAPI(\"notifies\", token);\r\n      dispatch({\r\n        type: NEW_TYPES.GET_NOTIFIES,\r\n        payload: res.data.notifies,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const isReadNotify = ({ msg, auth }) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: NEW_TYPES.UPDATE_NOTIFY,\r\n      payload: { ...msg, isRead: true },\r\n    });\r\n\r\n    try {\r\n      await patchDataAPI(`/isReadNotify/${msg._id}`, null, auth.token);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteAllNotifies = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: NEW_TYPES.DELETE_ALL_NOTIFIES,\r\n      payload: [],\r\n    });\r\n\r\n    try {\r\n      await deleteDataAPI(\"deleteAllNotifies\", token);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n};\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\newsReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\newTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Header\\Notifications\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\LeftSide\\index.js",["504","505"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport {\r\n  addUserAction,\r\n  getConversations,\r\n} from \"../../redux/actions/messageActions\";\r\nimport { MESSAGE_TYPES } from \"../../redux/types/messageTypes\";\r\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport UserCard from \"../UserCard\";\r\nimport \"./index.scss\";\r\nconst LeftSide = () => {\r\n  const { auth, message, online } = useSelector((state) => state);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchUsers, setSearchUsers] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const pageEnd = useRef();\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!searchValue) return;\r\n    try {\r\n      setLoad(true);\r\n      const res = await getDataAPI(\r\n        `search?username=${searchValue}`,\r\n        auth.token\r\n      );\r\n      setSearchUsers(res.data.users);\r\n      setLoad(false);\r\n    } catch (err) {\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err.response.data.msg },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddUser = (user) => {\r\n    setSearchValue(\"\");\r\n    setSearchUsers([]);\r\n    dispatch({\r\n      type: MESSAGE_TYPES.ADD_USER,\r\n      payload: { ...user, text: \"\", media: [] },\r\n    });\r\n    dispatch({\r\n      type: MESSAGE_TYPES.CHECK_ONLINE_OFFLINE,\r\n      payload: online,\r\n    });\r\n    return history.push(`/message/${user._id}`);\r\n  };\r\n\r\n  const isActive = (user) => {\r\n    if (id === user._id) return \"active\";\r\n    return \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (message.firstLoad) return;\r\n    dispatch(getConversations({ auth }));\r\n  }, [dispatch, auth, message.firstLoad]);\r\n\r\n  //Load more\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage((p) => p + 1);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n\r\n    observer.observe(pageEnd.current);\r\n  }, [setPage]);\r\n\r\n  useEffect(() => {\r\n    if (message.resultUsers >= (page - 1) * 9 && page > 1) {\r\n      dispatch(getConversations({ auth, page }));\r\n    }\r\n  }, [message.resultUsers, auth, dispatch, page]);\r\n\r\n  //Check user online - offline\r\n\r\n  useEffect(() => {\r\n    if (message.firstLoad) {\r\n      dispatch({\r\n        type: MESSAGE_TYPES.CHECK_ONLINE_OFFLINE,\r\n        payload: online,\r\n      });\r\n    }\r\n  }, [dispatch, online, message.firstLoad]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"message-header\">\r\n        <form action=\"#\" className=\"message-search\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"message-search-input\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n            placeholder=\"Enter to search....\"\r\n          />\r\n          <button type=\"submit\" className=\"message-search-btn\">\r\n            Search\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"message-list\">\r\n          {searchUsers.length !== 0 ? (\r\n            <>\r\n              {searchUsers.map((user) => (\r\n                <div\r\n                  className={`message-list-user ${isActive(user)}`}\r\n                  key={user._id}\r\n                  onClick={() => handleAddUser(user)}\r\n                >\r\n                  <UserCard user={user} />\r\n                </div>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {message.users.map((user) => (\r\n                <div\r\n                  className={`message-list-user ${isActive(user)}`}\r\n                  key={user._id}\r\n                  onClick={() => handleAddUser(user)}\r\n                >\r\n                  <UserCard user={user} msg={true}>\r\n                    {user.online ? (\r\n                      <i className=\"fas fa-circle message-list-icon message-list-green\"></i>\r\n                    ) : (\r\n                      auth.user.following.find(\r\n                        (item) => item._id === user._id\r\n                      ) && <i className=\"fas fa-circle message-list-icon\"></i>\r\n                    )}\r\n                  </UserCard>\r\n                </div>\r\n              ))}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <button className=\"message-leftside-btn\" ref={pageEnd}>\r\n          Load More\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftSide;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\RightSide\\index.js",["506","507","508","509","510","511","512"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport LoadingIcon from \"../../assets/images/loading.gif\";\r\nimport {\r\n  addMessageAction,\r\n  deleteConversationAction,\r\n  getMessagesAction,\r\n  getMoreMessagesAction,\r\n} from \"../../redux/actions/messageActions\";\r\nimport { MESSAGE_TYPES } from \"../../redux/types/messageTypes\";\r\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\r\nimport { imageUpload } from \"../../utils/imageUpload\";\r\nimport { imageShow, videoShow } from \"../../utils/mediaShow\";\r\nimport UserCard from \"../UserCard\";\r\nimport \"./index.scss\";\r\nimport MsgDisplay from \"./MsgDisplay\";\r\nimport axios from \"axios\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport { CALL_TYPES } from \"../../redux/types/callTypes\";\r\nconst RightSide = () => {\r\n  const { auth, message, socket, peer } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const [user, setUser] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n  const [media, setMedia] = useState([]);\r\n  const [loadMedia, setLoadMedia] = useState(false);\r\n\r\n  const refDisplay = useRef();\r\n  const pageEnd = useRef();\r\n\r\n  const [isDetail, setIsDetail] = useState(false);\r\n  const [isPhone, setIsPhone] = useState(false);\r\n  const [isAudio, setIsAudio] = useState(false);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [result, setResult] = useState(9);\r\n  const [page, setPage] = useState(0);\r\n  const [isLoadMore, setIsLoadMore] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const newData = message.data.find((item) => item._id === id);\r\n    if (newData) {\r\n      setData(newData.messages);\r\n      setResult(newData.result);\r\n      setPage(newData.page);\r\n    }\r\n  }, [message.data, id]);\r\n\r\n  useEffect(() => {\r\n    if (id && message.users.length > 0) {\r\n      setIsDetail(false);\r\n      setTimeout(() => {\r\n        refDisplay.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n      }, 50);\r\n\r\n      const newUser = message.users.find((user) => user._id === id);\r\n      if (newUser) setUser(newUser);\r\n    }\r\n  }, [message.users, id]);\r\n\r\n  const handleChangeMedia = (e) => {\r\n    const files = [...e.target.files];\r\n    let err = \"\";\r\n    let newMedia = [];\r\n    files.forEach((file) => {\r\n      if (!file) return (err = \"File does not exist.\");\r\n\r\n      if (file.size > 1024 * 1024 * 5) {\r\n        return (err = \"This image/video larget is 5mb\");\r\n      }\r\n\r\n      return newMedia.push(file);\r\n    });\r\n\r\n    if (err)\r\n      dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: err },\r\n      });\r\n    setMedia([...media, ...newMedia]);\r\n  };\r\n\r\n  const handleDeleteMedia = (index) => {\r\n    const newArr = [...media];\r\n    newArr.splice(index, 1);\r\n    setMedia(newArr);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!text.trim() && media.length === 0) return;\r\n    setText(\"\");\r\n    setMedia([]);\r\n    setLoadMedia(true);\r\n\r\n    let newArr = [];\r\n    if (media.length > 0) newArr = await imageUpload(media);\r\n    const msg = {\r\n      sender: auth.user._id,\r\n      recipient: id,\r\n      text,\r\n      media: newArr,\r\n      createdAt: new Date().toISOString(),\r\n    };\r\n    \r\n    setLoadMedia(false);\r\n    await dispatch(addMessageAction({ msg, auth, socket }));\r\n    if (refDisplay.current) {\r\n      refDisplay.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteConversation = () => {\r\n    dispatch(deleteConversationAction({ auth, id }));\r\n    return history.push(\"/message\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getMessagesData = async () => {\r\n      if (message.data.every((item) => item._id !== id)) {\r\n        await dispatch(getMessagesAction({ auth, id }));\r\n        setIsDetail(false);\r\n        setTimeout(() => {\r\n          refDisplay.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"end\",\r\n          });\r\n        }, 50);\r\n      }\r\n    };\r\n    getMessagesData();\r\n  }, [id, auth, dispatch, message.data]);\r\n\r\n  //Load more\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setIsLoadMore((p) => p + 1);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n\r\n    observer.observe(pageEnd.current);\r\n  }, [setIsLoadMore]);\r\n\r\n  useEffect(() => {\r\n    if (isLoadMore > 1) {\r\n      if (result >= page * 9) {\r\n        dispatch(getMoreMessagesAction({ auth, id, page: page + 1 }));\r\n        setIsLoadMore(1);\r\n      }\r\n    }\r\n  }, [auth, dispatch, id, page, result, isLoadMore]);\r\n\r\n  //Call\r\n\r\n  const caller = ({ video }) => {\r\n    const { _id, avatar, username, fullname } = user;\r\n    const msg = {\r\n      sender: auth.user._id,\r\n      recipient: _id,\r\n      avatar,\r\n      username,\r\n      fullname,\r\n      video,\r\n    };\r\n    dispatch({\r\n      type: CALL_TYPES.CALL,\r\n      payload: msg,\r\n    });\r\n  };\r\n\r\n  const callUser = ({ video }) => {\r\n    const { _id, avatar, username, fullname } = auth.user;\r\n    const msg = {\r\n      sender: _id,\r\n      recipient: user._id,\r\n      avatar,\r\n      username,\r\n      fullname,\r\n      video,\r\n    };\r\n\r\n    if (peer.open) msg.peerId = peer._id;\r\n\r\n    socket.emit(\"callUser\", msg);\r\n  };\r\n\r\n  const handleAudioCall = () => {\r\n    caller({ video: false });\r\n    callUser({ video: false });\r\n  };\r\n\r\n  const handleVideoCall = () => {\r\n    caller({ video: true });\r\n    callUser({ video: true });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"message-header\">\r\n        <div className=\"message-heading\">\r\n          {user.length !== 0 && (\r\n            <UserCard user={user} msg={true}>\r\n              <div className=\"message-heading-actions\">\r\n                <i\r\n                  className=\"fas fa-phone-alt message-heading-phone\"\r\n                  onClick={handleAudioCall}\r\n                ></i>\r\n                <i\r\n                  className=\"fas fa-video message-heading-video\"\r\n                  onClick={handleVideoCall}\r\n                ></i>\r\n                <i\r\n                  className=\"fas fa-info-circle\"\r\n                  style={{ color: isDetail ? \"\" : \"darkgray\" }}\r\n                  onClick={() => setIsDetail(!isDetail)}\r\n                ></i>\r\n              </div>\r\n            </UserCard>\r\n          )}\r\n        </div>\r\n\r\n        {isDetail ? (\r\n          <>\r\n            <div className=\"message-details\">\r\n              <div className=\"message-details-member\">\r\n                <h3 className=\"message-details-owner\">Members</h3>\r\n                {user.length !== 0 && <UserCard user={user} />}\r\n              </div>\r\n              <div className=\"message-details-actions\">\r\n                <button\r\n                  className=\"message-details-btn\"\r\n                  onClick={handleDeleteConversation}\r\n                >\r\n                  Delete Chat\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div\r\n              className=\"message-chat\"\r\n              style={{\r\n                height:\r\n                  media.length > 0\r\n                    ? \"calc(100% - 186px)\"\r\n                    : \"calc(100% - 116px)\",\r\n              }}\r\n            >\r\n              <div className=\"message-chat-display\" ref={refDisplay}>\r\n                <button className=\"message-chat-btn\" ref={pageEnd}>\r\n                  LoadMore\r\n                </button>\r\n                {data.map((msg, index) => (\r\n                  <div key={index}>\r\n                    {msg.sender !== auth.user._id && (\r\n                      <div className=\"message-chat-row other-message\">\r\n                        <MsgDisplay user={user} msg={msg} />\r\n                      </div>\r\n                    )}\r\n\r\n                    {msg.sender === auth.user._id && (\r\n                      <div className=\"message-chat-row you-message\">\r\n                        <MsgDisplay user={auth.user} msg={msg} data={data} />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n\r\n                {loadMedia && (\r\n                  <div className=\"message-chat-row you-message\">\r\n                    <img src={LoadingIcon} alt=\"Loading\" />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"message-media\"\r\n              style={{ display: media.length > 0 ? \"grid\" : \"none\" }}\r\n            >\r\n              {media.map((item, index) => (\r\n                <div key={index} className=\"message-media-list\">\r\n                  {item.type.match(/video/i)\r\n                    ? videoShow(URL.createObjectURL(item))\r\n                    : imageShow(URL.createObjectURL(item))}\r\n                  <span\r\n                    className=\"message-media-close\"\r\n                    onClick={() => handleDeleteMedia(index)}\r\n                  >\r\n                    &times;\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <form className=\"message-form\" onSubmit={handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                className=\"message-form-input\"\r\n                placeholder=\"Enter your message....\"\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}\r\n              />\r\n\r\n              <div className=\"message-form-upload\">\r\n                <i className=\"fas fa-image message-form-icon\"></i>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  className=\"message-form-file\"\r\n                  multiple\r\n                  accept=\"image/*,video/*\"\r\n                  onChange={handleChangeMedia}\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"message-form-btn\"\r\n                // disabled={text || media.length > 0 ? false : true}\r\n              >\r\n                Send\r\n              </button>\r\n            </form>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RightSide;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\actions\\messageActions.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\messageReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\messageTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\MessageUser\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\RightSide\\MsgDisplay\\index.js",["513"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteMessageAction } from \"../../../redux/actions/messageActions\";\r\nimport { imageShow, videoShow } from \"../../../utils/mediaShow\";\r\nimport ProfileIcon from \"../../ProfileIcon\";\r\nimport Times from \"../../Times\";\r\nimport \"./index.scss\";\r\n\r\nconst MsgDisplay = ({ user, msg, data }) => {\r\n  const { auth } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const handleDeleteMessage = () => {\r\n    if (data) {\r\n      dispatch(deleteMessageAction({ msg, data, auth }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"msg-title\">\r\n        <ProfileIcon src={user.avatar} size=\"small-avatar\" />\r\n      </div>\r\n      <div className=\"msg-content\">\r\n        {user._id === auth.user._id && (\r\n          <div className=\"msg-action\">\r\n            <span className=\"msg-action-icon\" onClick={handleDeleteMessage}>\r\n              Unsend\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"msg-details\">\r\n          {msg.text && <div className=\"msg-text\">{msg.text}</div>}\r\n          {msg.media.map((item, index) => (\r\n            <div key={index} className=\"msg-images\">\r\n              {item.url.match(/video/i)\r\n                ? videoShow(item.url)\r\n                : imageShow(item.url)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {msg.call && (\r\n        <button className=\"msg-btn\">\r\n          <span\r\n            className=\"material-icons msg-btn-span\"\r\n            style={{\r\n              fontSize: \"2.5rem\",\r\n              color: msg.call.times === 0 ? \"crimson\" : \"green\",\r\n            }}\r\n          >\r\n            {msg.call.times === 0\r\n              ? msg.call.video\r\n                ? \"videocam_off\"\r\n                : \"phone_disabled\"\r\n              : msg.call.video\r\n              ? \"video_camera_front\"\r\n              : \"call\"}\r\n          </span>\r\n\r\n          <div className=\"msg-btn-text\">\r\n            <h6>{msg.call.video ? \"Video call\" : \"Audio call\"}</h6>\r\n            <small>\r\n              {msg.call.times > 0 ? (\r\n                <Times total={msg.call.times} />\r\n              ) : (\r\n                new Date(msg.createdAt).toLocaleTimeString()\r\n              )}\r\n            </small>\r\n          </div>\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"msg-time\">{new Date(msg.createdAt).toLocaleString()}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MsgDisplay;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Icons\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\utils\\mediaShow.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\onlineReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\PostDetails\\PostList\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\PostDetails\\PostActions\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\inputReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\callReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\callTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\CallModal\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\peerReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\peerTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\Times\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\PostDetails\\PostRelated\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\components\\PostModal\\index.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\postModalReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\postModalTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\FogotPasswordPage\\index.js",["514","515","516","517"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./index.scss\";\r\nimport Forgot from \"../../assets/images/forgotPassword.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppStoreIcon from \"../../assets/images/applestore.png\";\r\nimport GoogleIcon from \"../../assets/images/googlestore.png\";\r\nimport { forgotPasswordAction } from \"../../redux/actions/authActions\";\r\nimport Footer from \"../../components/Footer\";\r\nconst ForgotPasswordPage = () => {\r\n  const { auth } = useSelector((state) => state);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!auth.user) {\r\n      history.push(\"/forgotPassword\");\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }, [auth, history]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim() === \"\") return;\r\n    dispatch(forgotPasswordAction(inputValue));\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"forgot-container\">\r\n        <div className=\"forgot-content\">\r\n          <div className=\"forgot-input\">\r\n            <div className=\"forgot-input-logo\">\r\n              <span className=\"material-icons forgot-input-icon\">lock</span>\r\n            </div>\r\n            <form\r\n              action=\"#\"\r\n              onSubmit={handleSubmit}\r\n              className=\"forgot-input-form\"\r\n            >\r\n              <h1 className=\"forgot-input-heading\">Trouble Logging In?</h1>\r\n              <p className=\"forgot-input-desc\">\r\n                Enter your email, phone, or username and we'll{\" \"}\r\n                <span>send you a link to get back into your account.</span>\r\n              </p>\r\n\r\n              <div className=\"instagram-form-input\">\r\n                <label htmlFor=\"\" className=\"instagram-form-label\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"input-login \"\r\n                    aria-label=\"Enter your email...\"\r\n                    aria-required=\"true\"\r\n                    placeholder=\"Enter your email...\"\r\n                    name=\"email\"\r\n                    value={inputValue}\r\n                    onChange={(e) => setInputValue(e.target.value)}\r\n                  />\r\n                  <span className=\"instagram-label-text\">Email</span>\r\n                </label>\r\n              </div>\r\n\r\n              <button\r\n                className=\"forgot-input-btn\"\r\n                style={{ opacity: inputValue ? \"1\" : \"0.5\" }}\r\n                disabled={inputValue ? false : true}\r\n              >\r\n                Send login link\r\n              </button>\r\n\r\n              <hr className=\"hr-ou\" />\r\n\r\n              <Link to=\"/signup\" className=\"forgot-input-link\">\r\n                Create New Account\r\n              </Link>\r\n            </form>\r\n\r\n            <button\r\n              className=\"forgot-input-btn forgot-btn-link\"\r\n              onClick={() => history.push(\"/\")}\r\n            >\r\n              Back To Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\pages\\ResetPasswordPage\\index.js",["518","519","520","521","522"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport AppStoreIcon from \"../../assets/images/applestore.png\";\r\nimport Forgot from \"../../assets/images/forgotPassword.svg\";\r\nimport GoogleIcon from \"../../assets/images/googlestore.png\";\r\nimport { resetPasswordAction } from \"../../redux/actions/authActions\";\r\nimport { NOTIFY_TYPES } from \"../../redux/types/notifyTypes\";\r\nconst ResetPasswordPage = () => {\r\n  const { token } = useParams();\r\n  const initialState = {\r\n    password: \"\",\r\n    cf_password: \"\",\r\n  };\r\n  const [data, setData] = useState(initialState);\r\n  const [typePass, setTypePass] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (data.password !== data.cf_password) {\r\n      return dispatch({\r\n        type: NOTIFY_TYPES.NOTIFY,\r\n        payload: { error: \"Your password doesn't match with confirm password\" },\r\n      });\r\n    }\r\n\r\n    dispatch(resetPasswordAction({ password: data.password, token, history }));\r\n    setData(initialState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"forgot-container\">\r\n        <div className=\"forgot-content\">\r\n          <div className=\"forgot-input\">\r\n            <div className=\"forgot-input-logo\">\r\n              <span className=\"material-icons forgot-input-icon\">password</span>\r\n            </div>\r\n            <form\r\n              action=\"#\"\r\n              onSubmit={handleSubmit}\r\n              className=\"forgot-input-form\"\r\n            >\r\n              <h1 className=\"forgot-input-heading\">Reset your password</h1>\r\n              <p className=\"forgot-input-desc\">\r\n                Enter your password and confirm password{\" \"}\r\n                <span>to reset your account password.</span>\r\n              </p>\r\n\r\n              <div className=\"instagram-form-input\" id=\"password\">\r\n                <label htmlFor=\"\" className=\"instagram-form-label\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"input-login input-login-password\"\r\n                    aria-label=\"Password\"\r\n                    aria-required=\"true\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={data.password}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <span className=\"instagram-label-text\">Password</span>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"instagram-form-input\" id=\"password\">\r\n                <label htmlFor=\"\" className=\"instagram-form-label\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"input-login input-login-password\"\r\n                    aria-label=\"Confirm Password\"\r\n                    aria-required=\"true\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"cf_password\"\r\n                    value={data.cf_password}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <span className=\"instagram-label-text\">Confirm Password</span>\r\n                </label>\r\n              </div>\r\n\r\n              <button\r\n                className=\"forgot-input-btn\"\r\n                style={{\r\n                  opacity: data.password && data.cf_password ? \"1\" : \"0.5\",\r\n                }}\r\n                disabled={data.password && data.cf_password ? false : true}\r\n              >\r\n                Send login link\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n","C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\reducers\\likedUsersReducer.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\redux\\types\\likedUsersTypes.js",[],"C:\\Benkia\\MERN\\instagram-clone\\client\\src\\layouts\\LikedUsers\\index.js",["523"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FollowBtn from \"../../components/FollowBtn\";\r\nimport UserCard from \"../../components/UserCard\";\r\nimport { LIKES_USERS_TYPES } from \"../../redux/types/likedUsersTypes\";\r\nimport \"./index.scss\";\r\nconst LikedUsers = () => {\r\n  const { auth, likedUsers } = useSelector((state) => state);\r\n  const [showFollowers, setShowFollowers] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const closeModal = () => {\r\n    dispatch({\r\n      type: LIKES_USERS_TYPES.IS_SHOW,\r\n      payload: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {(likedUsers === false || likedUsers.length === 0) && <> </>}\r\n      <div className=\"liked-users\">\r\n        <div className=\"liked-users-container\">\r\n          <h5 className=\"liked-users-heading\">Likes</h5>\r\n          <hr className=\"liked-users-line\" />\r\n          {likedUsers.map((user) => (\r\n            <UserCard\r\n              key={user._id}\r\n              user={user}\r\n              setShowFollowers={setShowFollowers}\r\n              underline={true}\r\n            >\r\n              {auth.user._id !== user._id && (\r\n                <FollowBtn user={user} profiles={true} />\r\n              )}\r\n            </UserCard>\r\n          ))}\r\n          <div className=\"liked-users-close\" onClick={closeModal}>\r\n            &times;\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LikedUsers;\r\n",{"ruleId":"524","severity":1,"message":"525","line":1,"column":8,"nodeType":"526","messageId":"527","endLine":1,"endColumn":13},{"ruleId":"528","severity":1,"message":"529","line":32,"column":27,"nodeType":"530","messageId":"531","endLine":32,"endColumn":28,"suggestions":"532"},{"ruleId":"528","severity":1,"message":"529","line":32,"column":52,"nodeType":"530","messageId":"531","endLine":32,"endColumn":53,"suggestions":"533"},{"ruleId":"528","severity":1,"message":"529","line":32,"column":61,"nodeType":"530","messageId":"531","endLine":32,"endColumn":62,"suggestions":"534"},{"ruleId":"528","severity":1,"message":"529","line":32,"column":65,"nodeType":"530","messageId":"531","endLine":32,"endColumn":66,"suggestions":"535"},{"ruleId":"524","severity":1,"message":"536","line":28,"column":17,"nodeType":"526","messageId":"527","endLine":28,"endColumn":21},{"ruleId":"524","severity":1,"message":"537","line":21,"column":9,"nodeType":"526","messageId":"527","endLine":21,"endColumn":16},{"ruleId":"524","severity":1,"message":"538","line":10,"column":8,"nodeType":"526","messageId":"527","endLine":10,"endColumn":19},{"ruleId":"524","severity":1,"message":"539","line":26,"column":9,"nodeType":"526","messageId":"527","endLine":26,"endColumn":23},{"ruleId":"540","replacedBy":"541"},{"ruleId":"542","replacedBy":"543"},{"ruleId":"524","severity":1,"message":"538","line":3,"column":8,"nodeType":"526","messageId":"527","endLine":3,"endColumn":19},{"ruleId":"524","severity":1,"message":"539","line":20,"column":9,"nodeType":"526","messageId":"527","endLine":20,"endColumn":23},{"ruleId":"524","severity":1,"message":"544","line":9,"column":22,"nodeType":"526","messageId":"527","endLine":9,"endColumn":30},{"ruleId":"524","severity":1,"message":"545","line":5,"column":10,"nodeType":"526","messageId":"527","endLine":5,"endColumn":18},{"ruleId":"524","severity":1,"message":"546","line":5,"column":20,"nodeType":"526","messageId":"527","endLine":5,"endColumn":31},{"ruleId":"524","severity":1,"message":"547","line":3,"column":10,"nodeType":"526","messageId":"527","endLine":3,"endColumn":14},{"ruleId":"524","severity":1,"message":"548","line":9,"column":10,"nodeType":"526","messageId":"527","endLine":9,"endColumn":22},{"ruleId":"524","severity":1,"message":"549","line":11,"column":16,"nodeType":"526","messageId":"527","endLine":11,"endColumn":23},{"ruleId":"524","severity":1,"message":"550","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":26},{"ruleId":"524","severity":1,"message":"551","line":21,"column":11,"nodeType":"526","messageId":"527","endLine":21,"endColumn":22},{"ruleId":"524","severity":1,"message":"552","line":8,"column":10,"nodeType":"526","messageId":"527","endLine":8,"endColumn":26},{"ruleId":"524","severity":1,"message":"553","line":14,"column":9,"nodeType":"526","messageId":"527","endLine":14,"endColumn":16},{"ruleId":"524","severity":1,"message":"554","line":7,"column":10,"nodeType":"526","messageId":"527","endLine":7,"endColumn":20},{"ruleId":"524","severity":1,"message":"555","line":34,"column":13,"nodeType":"526","messageId":"527","endLine":34,"endColumn":16},{"ruleId":"524","severity":1,"message":"556","line":5,"column":3,"nodeType":"526","messageId":"527","endLine":5,"endColumn":16},{"ruleId":"524","severity":1,"message":"557","line":17,"column":10,"nodeType":"526","messageId":"527","endLine":17,"endColumn":14},{"ruleId":"524","severity":1,"message":"558","line":11,"column":10,"nodeType":"526","messageId":"527","endLine":11,"endColumn":23},{"ruleId":"524","severity":1,"message":"525","line":18,"column":8,"nodeType":"526","messageId":"527","endLine":18,"endColumn":13},{"ruleId":"524","severity":1,"message":"559","line":19,"column":10,"nodeType":"526","messageId":"527","endLine":19,"endColumn":20},{"ruleId":"524","severity":1,"message":"560","line":34,"column":10,"nodeType":"526","messageId":"527","endLine":34,"endColumn":17},{"ruleId":"524","severity":1,"message":"561","line":34,"column":19,"nodeType":"526","messageId":"527","endLine":34,"endColumn":29},{"ruleId":"524","severity":1,"message":"562","line":35,"column":10,"nodeType":"526","messageId":"527","endLine":35,"endColumn":17},{"ruleId":"524","severity":1,"message":"563","line":35,"column":19,"nodeType":"526","messageId":"527","endLine":35,"endColumn":29},{"ruleId":"524","severity":1,"message":"564","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"565","line":5,"column":8,"nodeType":"526","messageId":"527","endLine":5,"endColumn":14},{"ruleId":"524","severity":1,"message":"566","line":7,"column":8,"nodeType":"526","messageId":"527","endLine":7,"endColumn":20},{"ruleId":"524","severity":1,"message":"567","line":8,"column":8,"nodeType":"526","messageId":"527","endLine":8,"endColumn":18},{"ruleId":"524","severity":1,"message":"568","line":10,"column":8,"nodeType":"526","messageId":"527","endLine":10,"endColumn":14},{"ruleId":"524","severity":1,"message":"566","line":4,"column":8,"nodeType":"526","messageId":"527","endLine":4,"endColumn":20},{"ruleId":"524","severity":1,"message":"565","line":5,"column":8,"nodeType":"526","messageId":"527","endLine":5,"endColumn":14},{"ruleId":"524","severity":1,"message":"567","line":6,"column":8,"nodeType":"526","messageId":"527","endLine":6,"endColumn":18},{"ruleId":"524","severity":1,"message":"569","line":16,"column":10,"nodeType":"526","messageId":"527","endLine":16,"endColumn":18},{"ruleId":"524","severity":1,"message":"570","line":16,"column":20,"nodeType":"526","messageId":"527","endLine":16,"endColumn":31},{"ruleId":"524","severity":1,"message":"571","line":9,"column":10,"nodeType":"526","messageId":"527","endLine":9,"endColumn":23},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["572","573"],["574","575"],["576","577"],["578","579"],"'news' is assigned a value but never used.","'showMsg' is assigned a value but never used.","'LoadMoreBtn' is defined but never used.","'handleLoadMore' is assigned a value but never used.","no-native-reassign",["580"],"no-negated-in-lhs",["581"],"'editData' is defined but never used.","'readMore' is assigned a value but never used.","'setReadMore' is assigned a value but never used.","'Link' is defined but never used.","'showComments' is assigned a value but never used.","'setNext' is assigned a value but never used.","'useEffect' is defined but never used.","'newComments' is assigned a value but never used.","'getMoreUserPosts' is defined but never used.","'pageEnd' is assigned a value but never used.","'PEER_TYPES' is defined but never used.","'res' is assigned a value but never used.","'addUserAction' is defined but never used.","'load' is assigned a value but never used.","'MESSAGE_TYPES' is defined but never used.","'getDataAPI' is defined but never used.","'isPhone' is assigned a value but never used.","'setIsPhone' is assigned a value but never used.","'isAudio' is assigned a value but never used.","'setIsAudio' is assigned a value but never used.","'useState' is defined but never used.","'Forgot' is defined but never used.","'AppStoreIcon' is defined but never used.","'GoogleIcon' is defined but never used.","'Footer' is defined but never used.","'typePass' is assigned a value but never used.","'setTypePass' is assigned a value but never used.","'showFollowers' is assigned a value but never used.",{"messageId":"582","fix":"583","desc":"584"},{"messageId":"585","fix":"586","desc":"587"},{"messageId":"582","fix":"588","desc":"584"},{"messageId":"585","fix":"589","desc":"587"},{"messageId":"582","fix":"590","desc":"584"},{"messageId":"585","fix":"591","desc":"587"},{"messageId":"582","fix":"592","desc":"584"},{"messageId":"585","fix":"593","desc":"587"},"no-global-assign","no-unsafe-negation","removeEscape",{"range":"594","text":"595"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"596","text":"597"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"598","text":"595"},{"range":"599","text":"597"},{"range":"600","text":"595"},{"range":"601","text":"597"},{"range":"602","text":"595"},{"range":"603","text":"597"},[939,940],"",[939,939],"\\",[964,965],[964,964],[973,974],[973,973],[977,978],[977,977]]